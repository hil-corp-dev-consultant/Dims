@*

    Module              : CMS - DIMS Solution.
    DocumentName        : Investigation.cs
    Project Name        : Dealer Information Management System (DIMS).
    Client Name         : HIL :: CK BIRLA GROUP.
    Dev. Organisation   : Envision Enterprise Solutions Pvt. Ltd.
    Team                : ASD.
    Description         : This Doc is for used for Complaint Investigation Screen.
    Developer Name      : Swamy Ayyappa Peddinti.
    Change Log          : NA.


*@



@using LabelNames = DIMS.Content.Resource_Files.Investigation;
@{
    Layout = null;

    DIMS.Models.UserProperties UP = (DIMS.Models.UserProperties)Session["UP"];
    string SessionSITEDETAIL_CODE = UP.SITEDETAIL_CODE;
    string SessionUserCode = UP.UserCode;
    string SessionUserName = UP.UserName;
    string SessionCOMPANYDETAIL_CODE = UP.COMPANYDETAIL_CODE;
    string SessionUserType = UP.UserType;
    string SessionUserTypeID = UP.UserTypeCode;
}

<style type="text/css">
    .modal-content {
        padding: 10px;
    }

    /*.modal {
        opacity: 0.8 !important;
    }*/

    table tr {
        cursor: pointer;
    }

    .filestyle {
        border: 1px solid;
        border-radius: 6px;
    }
</style>

<section class="content-header" style="padding: 1px 15px 0;">
    <h2>Investigation</h2>
    <ol class="breadcrumb">
        <li><a href ng-click="go('home')"><i class="fa fa-dashboard"></i>Home</a></li>
        <li>Complaint Management</li>
        <li class="active">Investigation</li>
    </ol>
    <nav style="padding: 1px 10px 1px 10px;">
        <div class="row">
            <div class="col-sm-11" id="IconsNavBar">
                <a href ng-click="go('ComplaintPendingApproval')" id="PendingApprovalsList" style="float: left; display: none;">
                    <i class="fa fa-list fa-4" title="Pending Approvals List"></i>
                </a>
                <a href ng-click="go('InvestigationList')" id="InvList" style="float: left;">
                    <i class="fa fa-list fa-4" title="Investigation List"></i>
                </a>
                <a href id="CompInvSave" onclick="SaveInvestigationDataWithFiles()" style="float: left;">
                    <i class="fa fa-floppy-o fa-4" title="Save Investigation"></i>
                </a>
                <a href ng-click="go('Investigation')" id="InvNew" style="float: left;">
                    <i class="fa fa-file-o fa-4" title="Create New Investigation"></i>
                </a>
                <a href ng-click="SendInvestigationForApproval()" id="SendInvestigationApproval" style="float: left;">
                    <i class=" fa fa-forward" title="Send Investigation for Review"></i>
                </a>
                @*<a href ng-click="SendInvestigationForApproval()" id="SendInvestigationApproval" style="float: left;">
                        <i class=" fa fa-thumbs-o-up" title="Send Investigation for Review"></i>
                    </a>*@
                <a href ng-click="GetApprovalPopUp()" id="MakeApproved" style="float: left;">
                    <i class="fa fa-check" title="Approve Complaint"></i>
                </a>
                <select id="StateFilter" ng-model="StateFilter" disabled="disabled" ng-change="StateChange()" style="float: left;"></select>
                <a href id="SuperSaveInvestigation" onclick="SaveInvestigationDataWithFiles()" style="float: left; display: none; margin-left: 10px;">
                    <i class="fa fa-floppy-o fa-4" title="Change Action"></i>
                </a>
                <a href ng-click="SaveInvestigationData()" id="hiddenInvDataSave" style="display:none">
                </a>
            </div>
        </div>
    </nav>
</section>
<div class="CustomHeight_Section" style="overflow: auto;">
    <section style="padding: 0 15px 90px;">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary" style="background: white none repeat scroll 0 0; padding: 4px;" id="InvestigationNewView">
                    <div class="box-header">
                        <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#" style="font-size: 12px; font-weight: normal" enctype="multipart/form-data">
                            <div class="row">
                                <input type="text" style="display: none;" id="MyTest" />
                                <input type="text" style="display: none;" id="TodayDateInv" />
                                <div class="col-sm-12">

                                    <input type="text" id="FormIdentity" name="FormIdentity" style="display: none;" />
                                    <input type="text" id="CreatedBy" name="CreatedBy" style="display: none;" value="@SessionUserName" />
                                    <input type="text" id="CreatedByCode" name="CreatedByCode" style="display: none;" value="@SessionUserCode" />
                                    <input type="text" id="SessionUserType" name="SessionUserType" style="display: none;" value="@SessionUserType" />
                                    <input type="text" id="SessionUserTypeID" name="SessionUserTypeID" style="display: none;" value="@SessionUserTypeID" />


                                    <input type="text" id="SITEDETAIL_CODE" style="display: none;" value="@SessionSITEDETAIL_CODE" />
                                    <input type="text" id="COMPANYDETAIL_CODE" style="display: none;" value="@SessionCOMPANYDETAIL_CODE" />
                                    <input type="text" id="CompRegDocSeries" data-ng-model="CompRegDocSeries" style="display: none;" />
                                    <input type="text" id="CompRegID" data-ng-model="CompRegID" style="display: none;" />
                                    <input type="text" id="CompRegDocNumber" data-ng-model="CompRegDocNumber" style="display: none;" />


                                    <input type="text" id="COMPLAINT_TYPE_CODE" data-ng-model="COMPLAINT_TYPE_CODE" style="display: none;" />
                                    <input type="text" id="COMPLAINT_TYPE_NAME" data-ng-model="COMPLAINT_TYPE_NAME" style="display: none;" />

                                    <input type="text" id="CompCatCode" style="display: none;" />

                                    <input type="text" id="COMPLAINT_CATEGORY_CODE" data-ng-model="COMPLAINT_CATEGORY_CODE" style="display: none;" />
                                    <input type="text" id="COMPLAINT_CATEGORY_NAME" data-ng-model="COMPLAINT_CATEGORY_NAME" style="display: none;" />

                                    <div class="form-group">

                                        <label class="col-sm-1 control-label">@LabelNames.ComplaintTrackingNo</label>
                                        <div class="col-sm-3">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="Complaint_Tracking_No" data-ng-model="Complaint_Tracking_No" disabled="disabled" />
                                                <input type="text" class="form-control" id="Complaint_No" data-ng-model="Complaint_No" disabled="disabled" style="display: none;" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" id="ComplaintNumberSpan" ng-click="Getdata('GetComplaint_No','Complaint_No','Assigned Complaint List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <label class="col-sm-1 control-label">@LabelNames.InvestigatorType<span class="Mandatory">*</span></label>
                                        <div class="col-sm-3">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="Investigator_Type" data-ng-model="Investigator_Type" disabled="disabled" />
                                                @*<input type="text" class="form-control" id="Investigator_Type_ID" data-ng-model="Investigator_Type_ID" readonly="readonly" style="display: none;" />*@
                                                <input type="text" class="form-control" id="Investigator_Type_CODE" data-ng-model="Investigator_Type_CODE" readonly="readonly" style="display: none;" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" id="Investigator_TypeSpan" ng-click="Getdata('GetInvestigator_Type','Investigator_Type','Users List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <label class="col-sm-1 control-label">@LabelNames.InvestigationId</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control gray" id="Investigation_Id" data-ng-model="Investigation_Id" disabled="disabled" />
                                        </div>
                                    </div>

                                    <div class="form-group">

                                        <label class="col-sm-1 control-label">Compl Recv Date<span class="Mandatory">*</span></label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control gray" id="Complaint_Received_Date" data-ng-model="Complaint_Received_Date" onchange="ReceivedDateChange()" />
                                        </div>

                                        <label class="col-sm-1 control-label">@LabelNames.InvestigationDoneBy</label>
                                        <div class="col-sm-3">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="Investigation_Done_By" data-ng-model="Investigation_Done_By" disabled="disabled" />
                                                <input type="text" class="form-control" id="Investigation_Done_By_CODE" data-ng-model="Investigation_Done_By_CODE" readonly="readonly" style="display: none;" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" id="GetInvestigation_Done_BySpan" ng-click="Getdata('GetInvestigation_Done_By','User_Mast','Employee Details')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <label class="col-sm-1 control-label">@LabelNames.IGSSeriesCode<span class="Mandatory">*</span></label>
                                        <div class="col-sm-3">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="IGS_Series_Code" data-ng-model="IGS_Series_Code" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" id="CRSeriesCode" ng-click="Getdata('GetIGS_Series_Code','CRSeriesCode','Document Series')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">

                                        <label class="col-sm-1 control-label">Compl Reg Date</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control gray" id="Complaint_Registered_Date" data-ng-model="Complaint_Registered_Date" disabled="disabled" />
                                        </div>

                                        <label class="col-sm-1 control-label">@LabelNames.VisitedDate<span id="VisitedDateSpanId" class="Mandatory">*</span></label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control" id="Visited_Date" data-ng-model="Visited_Date" readonly="readonly" onchange="VisitedDateChange()" />
                                        </div>
                                        <label class="col-sm-1 control-label">@LabelNames.InvestigationDate</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control" id="Investigation_Date" data-ng-model="Investigation_Date" readonly="readonly" disabled="disabled" />
                                            <input type="hidden" class="form-control" id="CREATED_DATE" data-ng-model="CREATED_DATE" readonly="readonly" disabled="disabled" />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="col-sm-1 control-label">Compl Attn Date<span class="Mandatory">*</span></label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control" id="Complaint_Attended_Date" data-ng-model="Complaint_Attended_Date" readonly="readonly" onchange="Complaint_Attended_DateChanged()" />
                                        </div>

                                        <label class="col-sm-1 control-label">@LabelNames.PreviousVisitDate</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control" id="Previous_Visit_Date" data-ng-model="Previous_Visit_Date" readonly="readonly" />
                                        </div>
                                        @*<label class="col-sm-1 control-label">@LabelNames.InvestigationStatus</label>*@
                                        <label class="col-sm-1 control-label">Complaint Status</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control gray" id="ShowStatus" data-ng-model="ShowStatus" disabled="disabled" />
                                            <input type="text" class="form-control gray" style="display: none" id="Investigation_Status" data-ng-model="Investigation_Status" disabled="disabled" />
                                        </div>
                                    </div>

                                    <div class="form-group">

                                        <label class="col-sm-1 control-label">@LabelNames.Delay</label>
                                        <div class="col-sm-3">
                                            <input type="checkbox" id="Delay" data-ng-model="Delay" onclick="DelayClick()" />
                                        </div>


                                        <label class="col-sm-1 control-label">Sales Rep Emp Code</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control gray" id="SalesRepresentativeEmployeeCode" data-ng-model="SalesRepresentativeEmployeeCode" disabled="disabled" />
                                        </div>
                                        <label class="col-sm-1 control-label">@LabelNames.ApprovalDate</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control gray" id="Approval_Date" data-ng-model="Approval_Date" disabled="disabled" />
                                        </div>
                                    </div>

                                    <div class="form-group">

                                        <label class="col-sm-1 control-label DelayGroup">Delay Days<span class="Mandatory">*</span></label>
                                        <div class="col-sm-3 DelayGroup">
                                            <input type="text" class="form-control" id="DelayDays" data-ng-model="DelayDays" onkeypress="return isInteger(event)" />
                                        </div>

                                        <label class="col-sm-1 control-label DelayGroupDummy" style="display: none;"></label>
                                        <div class="col-sm-3 DelayGroupDummy" style="display: none;">
                                            <input type="hidden" class="form-control" style="display: none;" />
                                        </div>


                                        <label class="col-sm-1 control-label">Sales Rep Emp Name</label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control gray" id="SalesRepresentativeEmployeeName" data-ng-model="SalesRepresentativeEmployeeName" disabled="disabled" />
                                        </div>
                                        <label class="col-sm-1 control-label NoticeTypeClass">Notice Type</label>
                                        <div class="col-sm-3 NoticeTypeClass">
                                            <input type="radio" id="System" value="System" name="NoticeType" />
                                            <label for="SystemGenerated">System Generated</label>
                                            <input type="radio" id="Manual" value="Manual" name="NoticeType" />
                                            <label for="Manual">Manual</label>
                                        </div>
                                    </div>

                                    @*svprasadk 20-05-2020 SBU 1 requirement to add type of complaint start*@

                                    <div class="form-group" id="TYPE_OF_COMPLAINT_DIV" style="display:none">
                                        @*<label class="col-sm-1 control-label">Type of Complaint<span class="Mandatory">*</span></label>
                                            <div class="col-sm-3">
                                                <select id="TYPE_OF_COMPLAINT" class="form-control">
                                                    <option value="0">Select</option>
                                                </select>
                                            </div>*@
                                        <label class="col-sm-1 control-label">Type of Complaint<span class="Mandatory">*</span></label>
                                        <div class="col-sm-3">
                                            <div class="input-group add-on">
                                                <input class="form-control" id="TYPE_OF_COMPLAINT" type="text" disabled="disabled" data-ng-model="TYPE_OF_COMPLAINT">
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" id="TYPE_OF_COMPLAINT_ID" data-ng-model="TYPE_OF_COMPLAINT_ID" type="submit" ng-click="Getdata('getComplaintTypeINV','complaintType','Complaint Type')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <label class="col-sm-1 control-label">Rejected over phone</label>
                                        <div class="col-sm-3">
                                            <input type="checkbox" id="is_rejectable" />
                                        </div>
                                    </div>

                                    @*svprasadk 20-05-2020 SBU 1 requirement to add type of complaint end*@

                                    <div class="form-group">
                                        <label class="col-sm-1 control-label DelayGroup">Delay Reason<span class="Mandatory">*</span></label>
                                        <div class="col-sm-3 DelayGroup">
                                            <textarea class="form-control" id="DelayReason" data-ng-model="DelayReason" maxlength="300"></textarea>
                                        </div>

                                        <label class="col-sm-1 control-label" style="display: none;"></label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control" style="display: none;" />
                                        </div>
                                        <label class="col-sm-1 control-label" style="display: none;"></label>
                                        <div class="col-sm-3">
                                            <input type="text" class="form-control" style="display: none;" />
                                        </div>
                                        <label id="lblAttachments" class="col-sm-2 control-label">Attachments</label>
                                        <div class="col-sm-3" id="NewInvestigationFileUploadDiv">
                                            <label class="col-sm-2 control-label" id="SelectedComplaintFiles" data-ng-model="ComplaintFilesPath" style="display: none;"></label>
                                            <label class="col-sm-2 control-label" id="SelectedFiles" data-ng-model="FilesPath" style="width: 100%;"></label>
                                            <input type="file" id="InvestigationFile" name="InvestigationFile" class="filestyle" onchange="FileUploaded()" multiple="" />
                                            <input type="button" value="Upload" id="btnUpload" class="btn btn-info navbar-btn" onclick="UploadFiles()" />
                                            <input type="button" value="Clear" id="btnClear" class="btn btn-info navbar-btn" onclick="ClearFiles()" />
                                            <input type="hidden" id="ClickUploadFile" class="form-control" value="0" style="display: none;" />
                                            <input type="hidden" id="ClickSaveComplaint" class="form-control" value="0" style="display: none;" />
                                            <input type="hidden" id="CREATED_IN" data-ng-model="CREATED_IN" class="form-control" value="0" style="display: none;" />
                                        </div>
                                        @*VIKAS G,9/2/2022 AS PER THE REQUIREMENT OF JOSEPH ADDED THE LABEL OF NOTE FOR ATTACHMENTS*@

                                        <div class="col-sm-3" id="LoadInvestigationFileUploadDiv">
                                            <ul id="ComplaintFilesUploaded"></ul>
                                            <ul id="InvestigationFilesUploaded"></ul>
                                        </div>
                                        @*<label id="lblNote" class="col-sm-12 control-label" style=" font: 14px Arial, sans-serif;color:black;">Note : <Strong>In case of Sales Return, Attached Approval from National Sale Head. Else, attach proof of complaint to be attached.</Strong></label>*@
                                    </div>

                                    <div class="col-sm-12 tabdiv">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('CustDetails')">
                                            <img src="~/Images/en_next.png" id="CustDetails_Img" />
                                            <a class="Expand">Customer Details</a>
                                        </div>
                                        <div class="row" style="padding-top: 30px; display: none;" id="CustDetails_Form">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">@LabelNames.CustomerCode</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Customer_Code" data-ng-model="Customer_Code" disabled="disabled" />
                                                    </div>
                                                    <label class="col-sm-1 control-label">@LabelNames.ContactPerson</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control" id="Contact_Person" data-ng-model="Contact_Person" />
                                                    </div>
                                                    @*<label class="col-sm-1 control-label SubStockiest_Direct_CustomerDIV">@LabelNames.SubStockiestDirectCustomer</label>*@
                                                    <div id="SubStockiest_Direct_CustomerDiv">
                                                        <label class="col-sm-1 control-label" id="SubStockistLabel"></label>
                                                        <div class="col-sm-3 ">
                                                            <textarea class="form-control" id="SubStockiest_Direct_Customer" data-ng-model="SubStockiest_Direct_Customer" maxlength="300"></textarea>
                                                        </div>
                                                    </div>
                                                    <div id="PartyTypeDiv">
                                                        @*<label class="col-sm-1 control-label SubStockiest_Direct_CustomerDIV" id="SubStockistDirectCustomer_Lbl">Party Type<span class="Mandatory">*</span></label>
                                                            <div class="col-sm-3">
                                                                <input type="hidden" class="form-control gray" id="party_type_id" data-ng-model="party_type_id" disabled="disabled" />
                                                                <input type="text" class="form-control gray" id="party_type" data-ng-model="party_type" disabled="disabled" />
                                                            </div>*@
                                                        <label class="col-sm-1 control-label">Party Type<span class="Mandatory">*</span></label>
                                                        <div class="col-sm-3">
                                                            <div class="input-group add-on">
                                                                <input class="form-control" id="party_type" type="text" disabled="disabled" data-ng-model="party_type">
                                                                <div class="input-group-btn">
                                                                    <span class="btn btn-default" id="party_type_id" data-ng-model="party_type_id" type="submit" ng-click="Getdata('getPartyTypeINV','partyType','Party Type')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">@LabelNames.CustomerName</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Customer_Name" data-ng-model="Customer_Name" disabled="disabled" />
                                                    </div>
                                                    <label class="col-sm-1 control-label">@LabelNames.PhoneNumber</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control" id="Contact_Number" data-ng-model="Contact_Number" onkeypress="return isInteger(event)" maxlength="30" />
                                                    </div>
                                                    <div id="Is_Project_PartyDiv">
                                                        <label class="col-sm-1 control-label">@LabelNames.IsProjectParty</label>
                                                        <div class="col-sm-3">
                                                            <input type="checkbox" id="Is_Project_Party" data-ng-model="Is_Project_Party" />
                                                        </div>
                                                    </div>
                                                    <div id="SubStockiest_CodeDiv">
                                                        <label class="col-sm-1 control-label">Sub-Stockiest Code<span class="Mandatory">*</span></label>
                                                        <div class="col-sm-3">
                                                            <div class="input-group add-on">
                                                                @*<input type="text" class="form-control gray" id="SubStockiest_Code" data-ng-model="SubStockiest_Code" disabled="disabled" />
                                                                    <input type="text" class="form-control gray" id="SubStockiest_ID" data-ng-model="SubStockiest_ID" readonly="readonly" style="display: none;" />*@
                                                                <input type="text" class="form-control" id="SubStockiest_Code" data-ng-model="SubStockiest_Code" disabled="disabled" />
                                                                <div class="input-group-btn"> <span class="btn btn-default" id="SubStockiestMasterSpan" ng-click="Getdata('GetSubStockiestINV','SubStockiestMaster','SubStockiest List')"><i class="glyphicon glyphicon-new-window"></i></span> </div>
                                                                <input type="text" class="form-control" id="SubStockiest_ID" data-ng-model="SubStockiest_ID" readonly="readonly" style="display: none;" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">@LabelNames.CustomerType</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Customer_Type" data-ng-model="Customer_Type" disabled="disabled" />
                                                        <input type="text" class="form-control" id="Customer_Type_CODE" data-ng-model="Customer_Type_CODE" style="display: none;" />
                                                    </div>
                                                    <input type="text" class="form-control" id="Customer_Fax" data-ng-model="Customer_Fax" onkeypress="return isInteger(event)" style="display: none;" />
                                                    <input type="text" class="form-control gray" id="Customer_Location" data-ng-model="Customer_Location" disabled="disabled" style="display: none;" />
                                                    <input type="text" class="form-control" id="Customer_Location_Code" data-ng-model="Customer_Location_Code" style="display: none;" />
                                                    <label class="col-sm-1 control-label">@LabelNames.Email</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control" id="Customer_Email" data-ng-model="Customer_Email" />
                                                    </div>
                                                    <div id="Site_AddressDiv">
                                                        <label class="col-sm-1 control-label">@LabelNames.SiteAddress</label>
                                                        <div class="col-sm-3">
                                                            <textarea class="form-control" id="Site_Address" data-ng-model="Site_Address" maxlength="300"></textarea>
                                                        </div>
                                                    </div>
                                                    <div id="SubStockiest_NameDiv">
                                                        <label class="col-sm-1 control-label">Sub-Stockiest Name<span class="Mandatory">*</span></label>
                                                        <div class="col-sm-3">
                                                            <input name="text3" type="text" disabled="disabled" class="form-control gray" id="SubStockiest_Name" data-ng-model="SubStockiest_Name" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">@LabelNames.City</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Contact_City" data-ng-model="Contact_City" disabled="disabled" />
                                                        <input type="text" class="form-control" id="Contact_City_Code" data-ng-model="Contact_City_Code" style="display: none;" />
                                                    </div>
                                                    @*<label class="col-sm-1 control-label">@LabelNames.ProductType</label>*@
                                                    <label class="col-sm-1 control-label">Business Unit</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Product_Type" data-ng-model="Product_Type" disabled="disabled" />
                                                        <input type="text" class="form-control" id="Product_Type_CODE" data-ng-model="Product_Type_CODE" style="display: none;" />
                                                    </div>
                                                    <div id="SubStockiest_AddressDiv">
                                                        <label class="col-sm-1 control-label">Site Address<span class="Mandatory">*</span></label>
                                                        <div class="col-sm-3">
                                                            @*<input type="text" class="form-control gray" id="SubStockiest_Address" data-ng-model="SubStockiest_Address" disabled="disabled" />*@
                                                            <textarea class="form-control" id="SubStockiest_Address" data-ng-model="SubStockiest_Address" maxlength="300" disabled="disabled"></textarea>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">@LabelNames.State</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Contact_State" data-ng-model="Contact_State" disabled="disabled" />
                                                        <input type="text" class="form-control" id="Contact_State_CODE" data-ng-model="Contact_State_CODE" style="display: none;" />
                                                    </div>

                                                    @*<label class="col-sm-1 control-label">Product Division</label>*@
                                                    <label class="col-sm-1 control-label">Product Type</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Product_Category" data-ng-model="Product_Category" disabled="disabled" />
                                                        <input type="text" class="form-control" id="Product_CategoryCode" data-ng-model="Product_CategoryCode" disabled="disabled" style="display: none;" />
                                                    </div>
                                                    <div id="SubStockiest_NumberDiv">
                                                        <label class="col-sm-1 control-label">SubStockiest Contact<span class="Mandatory">*</span></label>
                                                        <div class="col-sm-3">
                                                            <input name="text4" type="text" class="form-control gray" id="SubStockiest_Number" onkeypress="return isInteger(event)" maxlength="30" data-ng-model="SubStockiest_Number" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">@LabelNames.Area</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Contact_Area" data-ng-model="Contact_Area" disabled="disabled" />
                                                        <input type="text" class="form-control" id="Contact_Area_CODE" data-ng-model="Contact_Area_CODE" style="display: none;" />
                                                    </div>
                                                    @*VIKAS G , SBU8 2023-05-29 START*@
                                                    @*<label class="col-sm-1 control-label" id="SubProductTypelbl">Sub Product Type</label>
                                                    <div class="col-sm-3" id="SubProductTypediv">
                                                        <input type="text" class="form-control gray" id="Sub_Product_Category" data-ng-model="Sub_Product_Category" disabled="disabled" />
                                                        <input type="text" class="form-control" id="Sub_Product_CategoryCode" data-ng-model="Sub_Product_CategoryCode" disabled="disabled" style="display: none;" />
                                                    </div>*@
                                                    @*VIKAS G, SBU8 2023-05-29 END*@
                                                    <label class="col-sm-1 control-label" style="display: none"></label>
                                                    <div class="col-sm-3">
                                                        <input class="form-control" style="display: none" />
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="col-sm-12 tabdiv">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('CustDetails')">
                                            <img src="~/Images/en_next.png" id="CustDetails_Img" />
                                            <a class="Expand">Customer Details</a>
                                        </div>
                                        <div class="row" style="padding-top: 30px; display: none;" id="CustDetails_Form">
                                            <div class="col-sm-12">

                                                <div class="form-group">
                                                    <label class="col-sm-1 control-label">@LabelNames.CustomerCode</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control gray" id="Customer_Code" data-ng-model="Customer_Code" disabled="disabled" />
                                                    </div>
                                                    <label class="col-sm-1 control-label">@LabelNames.ContactPerson</label>
                                                    <div class="col-sm-3">
                                                        <input type="text" class="form-control" id="Contact_Person" data-ng-model="Contact_Person" />
                                                    </div>
                                                    @*<label class="col-sm-1 control-label SubStockiest_Direct_CustomerDIV">@LabelNames.SubStockiestDirectCustomer</label>*@
                                    @*<label class="col-sm-1 control-label" id="SubStockistLabel"></label>
                                            <div class="col-sm-3 ">
                                                <textarea class="form-control" id="SubStockiest_Direct_Customer" data-ng-model="SubStockiest_Direct_Customer" maxlength="300"></textarea>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-1 control-label">@LabelNames.CustomerName</label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control gray" id="Customer_Name" data-ng-model="Customer_Name" disabled="disabled" />
                                            </div>
                                            <label class="col-sm-1 control-label">@LabelNames.PhoneNumber</label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control" id="Contact_Number" data-ng-model="Contact_Number" onkeypress="return isInteger(event)" maxlength="30" />
                                            </div>
                                            <label class="col-sm-1 control-label">@LabelNames.IsProjectParty</label>
                                            <div class="col-sm-3">
                                                <input type="checkbox" id="Is_Project_Party" data-ng-model="Is_Project_Party" />
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="col-sm-1 control-label">@LabelNames.CustomerType</label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control gray" id="Customer_Type" data-ng-model="Customer_Type" disabled="disabled" />
                                                <input type="text" class="form-control" id="Customer_Type_CODE" data-ng-model="Customer_Type_CODE" style="display: none;" />
                                            </div>

                                            <input type="text" class="form-control" id="Customer_Fax" data-ng-model="Customer_Fax" onkeypress="return isInteger(event)" style="display: none;" />

                                            <input type="text" class="form-control gray" id="Customer_Location" data-ng-model="Customer_Location" disabled="disabled" style="display: none;" />
                                            <input type="text" class="form-control" id="Customer_Location_Code" data-ng-model="Customer_Location_Code" style="display: none;" />
                                            <label class="col-sm-1 control-label">@LabelNames.Email</label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control" id="Customer_Email" data-ng-model="Customer_Email" />
                                            </div>

                                            <label class="col-sm-1 control-label">@LabelNames.SiteAddress</label>
                                            <div class="col-sm-3">
                                                <textarea class="form-control" id="Site_Address" data-ng-model="Site_Address" maxlength="300"></textarea>
                                            </div>
                                        </div>




                                        <div class="form-group">

                                            <label class="col-sm-1 control-label">@LabelNames.City</label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control gray" id="Contact_City" data-ng-model="Contact_City" disabled="disabled" />
                                                <input type="text" class="form-control" id="Contact_City_Code" data-ng-model="Contact_City_Code" style="display: none;" />
                                            </div>


                                            @*<label class="col-sm-1 control-label">@LabelNames.ProductType</label>*@
                                    @*<label class="col-sm-1 control-label">Business Unit</label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control gray" id="Product_Type" data-ng-model="Product_Type" disabled="disabled" />
                                                <input type="text" class="form-control" id="Product_Type_CODE" data-ng-model="Product_Type_CODE" style="display: none;" />
                                            </div>


                                            <label class="col-sm-1 control-label" style="display: none"></label>
                                            <div class="col-sm-3">
                                                <input class="form-control" style="display: none" />
                                            </div>
                                        </div>



                                        <div class="form-group">
                                            <label class="col-sm-1 control-label">@LabelNames.State</label>
                                            <div class="col-sm-3">
                                                <input type="text" class="form-control gray" id="Contact_State" data-ng-model="Contact_State" disabled="disabled" />
                                                <input type="text" class="form-control" id="Contact_State_CODE" data-ng-model="Contact_State_CODE" style="display: none;" />
                                            </div>

                                            @*<label class="col-sm-1 control-label">Product Division</label>*@
                                    @*<label class="col-sm-1 control-label">Product Type</label>
                                                        <div class="col-sm-3">
                                                            <input type="text" class="form-control gray" id="Product_Category" data-ng-model="Product_Category" disabled="disabled" />
                                                            <input type="text" class="form-control" id="Product_CategoryCode" data-ng-model="Product_CategoryCode" disabled="disabled" style="display: none;" />
                                                        </div>
                                                        <label class="col-sm-1 control-label" style="display: none"></label>
                                                        <div class="col-sm-3">
                                                            <input class="form-control" style="display: none" />
                                                        </div>
                                                    </div>


                                                    <div class="form-group">
                                                        <label class="col-sm-1 control-label">@LabelNames.Area</label>
                                                        <div class="col-sm-3">
                                                            <input type="text" class="form-control gray" id="Contact_Area" data-ng-model="Contact_Area" disabled="disabled" />
                                                            <input type="text" class="form-control" id="Contact_Area_CODE" data-ng-model="Contact_Area_CODE" style="display: none;" />
                                                        </div>

                                                        <label class="col-sm-1 control-label" style="display: none"></label>
                                                        <div class="col-sm-3">
                                                            <input class="form-control" style="display: none" />
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>*@

                                    <div class="col-sm-12 tabdiv">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('Material_Supply_Detail')">
                                            <img src="~/Images/en_next.png" id="Material_Supply_Detail_Img" />
                                            <a class="Expand">Material Supply Detail</a>
                                        </div>
                                        <div class="row" style="padding-top: 30px; display: none;" id="Material_Supply_Detail_Form">
                                            <div class="col-sm-12" id="MatSupDet_BU12">
                                                <table class="table innertable" id="Material_Supply_Detail_Table">
                                                    <thead>
                                                        <tr>
                                                            <th>S.No</th>
                                                            <th>@LabelNames.MSD_MaterialBelongsTo</th>
                                                            <th>@LabelNames.MSD_ProductSuppliedFrom</th>
                                                            <th>@LabelNames.MSD_Name</th>
                                                            <th>@LabelNames.MSD_UOM</th>
                                                            <th>@LabelNames.MSD_SupplyQty</th>
                                                            <th>@LabelNames.MSD_BreakageQty</th>
                                                            <th>@LabelNames.MSD_NetLossQty</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                                <input type="button" value="Add" id="Mat_Sup_Det_Add" class="smallbutton" data-toggle="modal" data-target="#" onclick="OpenMSDModel()" />
                                            </div>

                                            <div class="col-sm-12" id="MatSupDet_BU3">
                                                <table class="table innertable " style="background-color:white" id="Material_Supply_Detail_Table_BU3">
                                                    <thead>
                                                        <tr>
                                                            <th>S.No</th>
                                                            <th>Product Code</th>
                                                            <th>Product Name</th>
                                                            <th>
                                                                Material<br />
                                                                Belongs To
                                                            </th>
                                                            <th>
                                                                Product<br />
                                                                Supplied From
                                                            </th>
                                                            <th>Name</th>
                                                            <th>UOM</th>
                                                            <th>
                                                                Supply<br />
                                                                Qty
                                                            </th>
                                                            <th>
                                                                Defect<br />
                                                                Qty
                                                            </th>
                                                            <th>
                                                                Actual<br />
                                                                Defect Qty
                                                            </th>
                                                            <th style="display: none;">Material Belongs To Code</th>
                                                            <th style="display: none;">Product Supplied From Code</th>
                                                            <th style="display: none;">Name Code</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                                <input type="button" value="Add" id="Mat_Sup_Det_BU3_Add" class="smallbutton" data-toggle="modal" data-target="#" onclick="OpenMSD_BU3Model()" />
                                            </div>

                                        </div>
                                    </div>

                                    <div class="col-sm-12 tabdiv">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('Supply_Details')">
                                            <img src="~/Images/en_next.png" id="Supply_Details_Img" />
                                            <a class="Expand">Supply Details</a>
                                        </div>
                                        <div class="row" style="padding-top: 30px; display: none;" id="Supply_Details_Form">
                                            <div class="col-sm-12">
                                                <div class="col-sm-6">
                                                    <div class="row" id="PeriodBasedDiv">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-3 control-label" style="text-align: right; padding-top: 0px;">
                                                                @LabelNames.PeriodBased
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="checkbox" id="Period_Based" data-ng-model="Period_Based" class="periodorinvoicecheck" onchange="PeriodOrInvoiceBased('P')" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row" id="InvoiceBasedDiv">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-3 control-label" style="text-align: right; padding-top: 0px;">
                                                                @LabelNames.InvoiceBased
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="checkbox" id="Invoice_Based" data-ng-model="Invoice_Based" class="periodorinvoicecheck" onchange="PeriodOrInvoiceBased('I')" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-sm-6" id="PeriodBasedDates">
                                                    <div class="row">
                                                        <div class="form-group input-group">
                                                            <label>Date Supply From</label>
                                                            <input type="text" id="InvDateSupplyFrom" data-ng-model="InvDateSupplyFrom" onchange="InvDateSupplyFromChange()" />
                                                            @*<input type="text" id="InvDateSupplyFrom" data-ng-model="InvDateSupplyFrom" onchange="SupplyDatesChange()" />*@
                                                            <label>Date Supply To</label>
                                                            @*<input type="text" id="InvDateSupplyTo" data-ng-model="InvDateSupplyTo" onchange="InvDateSupplyToChange()" />*@
                                                            <input type="text" id="InvDateSupplyTo" data-ng-model="InvDateSupplyTo" onchange="SupplyDatesChange()" />
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="col-sm-12 tabdiv" id="Invoice_List_Division">
                                                <div class="col-sm-12 CloseOpen" onclick="FormToggle('Invoice_List')">
                                                    <img src="~/Images/en_next.png" id="Invoice_List_Img" />
                                                    <a class="Expand">Invoice List</a>
                                                </div>

                                                <div class="row" style="padding-top: 30px; display: none;" id="Invoice_List_Form">
                                                    <div class="col-sm-12">
                                                        <table class="table innertable" id="Invoice_List_Table">
                                                            <thead>
                                                                <tr>
                                                                    <th>S No</th>
                                                                    <th>@LabelNames.IL_InvoiceNo</th>
                                                                    <th>@LabelNames.IL_InvoiceDate</th>
                                                                    <th>@LabelNames.IL_Remarks</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody></tbody>
                                                        </table>
                                                        <input type="button" value="Add" id="Invoice_List_AddBtn" class="smallbutton" onclick="Invoice_List_Add()" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-sm-12" id="TextAreaDiv" style="padding-top: 2%;">

                                                <div class="col-sm-10">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                Invoice Details
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="SD_InvoiceDetails" data-ng-model="SD_InvoiceDetails" maxlength="3000"></textarea>
                                                                <input type="text" id="HiddenInvoiceDetails" style="display: none;" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-10">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                Product Details
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="SD_ProductDetails" data-ng-model="SD_ProductDetails" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-sm-12" id="SupplyDetailsTableA">
                                                <table class="table innertable" id="Supply_Details_Table" style="margin-top: 10px;">
                                                    <thead>
                                                        <tr>
                                                            <th>S.No</th>
                                                            <th>@LabelNames.SD_ItemTypeProductName</th>
                                                            <th>
                                                                <label class="ForACSheets" style="display: block;">Size(M)</label><label class="ForCCSheets" style="display: none;">Size(ft)</label>
                                                            </th>
                                                            <th>Gross Wt</th>
                                                            <th>@LabelNames.SD_SuppliedQtyNos</th>
                                                            <th>
                                                                <label class="ForACSheets" style="display: block;">Supplied Qty(M)</label><label class="ForCCSheets" style="display: none;">Supplied Qty(ft)</label>
                                                            </th>
                                                            <th style="display: none;">@LabelNames.SD_SuppliedQtyTon</th>
                                                            <th>@LabelNames.SD_BreakageQtyNos</th>
                                                            <th>
                                                                <label class="ForACSheets" style="display: block;">Breakage Qty(M)</label><label class="ForCCSheets" style="display: none;">Breakage Qty(ft)</label>
                                                            </th>
                                                            <th style="display: none;">@LabelNames.SD_BreakageQtyTon</th>
                                                            <th>@LabelNames.SD_BreakagePer</th>
                                                            <th>@LabelNames.SD_DefectType</th>
                                                            <th>@LabelNames.SD_Remarks</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                                <input type="button" value="Add" id="Supply_Details_Add" class="smallbutton" data-toggle="modal" data-target="#" onclick="OpenSupDetModel()" />
                                            </div>

                                            <div class="col-sm-12" id="SupplyDetailsTableB">
                                                <table class="table innertable" id="Supply_Details_TableB" style="margin-top: 10px;">
                                                    <thead>
                                                        <tr>
                                                            <th>S.No</th>
                                                            <th>Product Code</th>
                                                            <th>Product Name</th>
                                                            <th>Invoice No</th>
                                                            <th>Invoice Date</th>
                                                            <th>Batch No</th>
                                                            <th>Supplied Qty(Nos)</th>
                                                            <th class="BreakageQtyLabel">Breakage Qty(Nos)</th>
                                                            <th>Transporter</th>
                                                            <th>Defect Type</th>
                                                            <th>Remarks</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                                <input type="button" value="Add" id="Supply_Details_AddB" class="smallbutton" data-toggle="modal" data-target="#" onclick="OpenSupDetModelB()" />
                                            </div>

                                            <div class="col-sm-12" id="SupplyDetailsTableSBU3">
                                                <table class="table innertable" id="Supply_Details_TableSBU3" style="margin-top: 10px;">
                                                    <thead>
                                                        <tr>
                                                            <th>S.No</th>
                                                            <th>Product Code</th>
                                                            <th>Product Name</th>
                                                            <th>Plant/Depo Name</th>
                                                            <th>Invoice No</th>
                                                            <th>Invoice Date</th>
                                                            <th>Batch No</th>
                                                            <th>
                                                                Supplied<br />
                                                                Qty(Nos)
                                                            </th>
                                                            <th>
                                                                Defect<br />Qty(Nos)
                                                            </th>
                                                            <th>
                                                                Actual<br />Defect<br />Qty(Nos)
                                                            </th>
                                                            <th>Transporter</th>
                                                            <th>Defect Type</th>
                                                            <th id="THDefectprct">Defect %</th>
                                                            <th>Remarks</th>
                                                            <th id="THBasicAmount">Basic Amount</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                                <input type="button" value="Add" id="Supply_Details_AddSBU3" class="smallbutton" data-toggle="modal" data-target="#" onclick="OpenSupDetModelsBU3()" />
                                                @*VIKAS G , 2023-3-17 SBU8 START.*@
                                                <div class="col-sm-12" id="totalprodvalue">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-10 control-label" style="text-align: right;">
                                                                Total Basic Value
                                                            </label>
                                                            <div class="col-sm-2" style="float : right">
                                                                <input type="text" class="form-control" id="total_prod_value" data-ng-model="total_prod_value" disabled />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                @*VIKAS G , 2023-3-17 SBU8 END.*@
                                            </div>


                                            <div class="col-sm-12" id="SupplyDetailsCalculationsDiv">
                                                <div class="col-sm-6">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label ForACSheets" style="text-align: right; display: block;">
                                                                Total Supply Qty(Mtrs)<span class="Mandatory">*</span>
                                                            </label>
                                                            <label for="label-2-2" class="col-sm-5 control-label ForCCSheets" style="text-align: right; display: none;">
                                                                Total Supply Qty(ft)<span class="Mandatory">*</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control" id="Total_Supply_Oty_Mtrs" data-ng-model="Total_Supply_Oty_Mtrs" onkeypress="return isNumber(event)" onchange="Total_Supply_Oty_MtrsChange()" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label ForACSheets" style="text-align: right; display: block;">
                                                                Total Breakage Qty(Mtrs)<span class="Mandatory">*</span>
                                                            </label>
                                                            <label for="label-2-2" class="col-sm-5 control-label ForCCSheets" style="text-align: right; display: none;">
                                                                Total Breakage Qty(ft)<span class="Mandatory">*</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control" id="Total_Breakage_Qty_Mtrs" data-ng-model="Total_Breakage_Qty_Mtrs" onkeypress="return isNumber(event)" onchange="Total_Breakage_Qty_MtrsChange()" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label ForACSheets" style="text-align: right; display: block;">
                                                                Total Recovery(Mtrs)<span class="Mandatory">*</span>
                                                            </label>
                                                            <label for="label-2-2" class="col-sm-5 control-label ForCCSheets" style="text-align: right; display: none;">
                                                                Total Recovery(ft)<span class="Mandatory">*</span>
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control" id="Total_Recovery_Mtrs" data-ng-model="Total_Recovery_Mtrs" onkeypress="return isNumber(event)" onchange="Total_Recovery_MtrsChange()" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">

                                                            <label for="label-2-2" class="col-sm-5 control-label ForACSheets" style="text-align: right; display: block;">
                                                                Net Loss(Mtrs)<span class="Mandatory">*</span>
                                                            </label>
                                                            <label for="label-2-2" class="col-sm-5 control-label ForCCSheets" style="text-align: right; display: none;">
                                                                Net Loss(ft)<span class="Mandatory">*</span>
                                                            </label>

                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control gray" id="Net_Loss_Mtrs" data-ng-model="Net_Loss_Mtrs" onkeypress="return isNumber(event)" disabled="disabled" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-6">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.TotalSupplyQtyTons
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control gray" id="Total_Supply_Qty_Tons" data-ng-model="Total_Supply_Qty_Tons" disabled="disabled" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.TotalBreakageQtyTons
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control gray" id="Total_Breakage_Qty_Tons" data-ng-model="Total_Breakage_Qty_Tons" onchange="Total_Breakage_Qty_TonsChange()" disabled="disabled" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.TotalRecoveryTons
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control gray" id="Total_Recovery_Tons" data-ng-model="Total_Recovery_Tons" onchange="Total_Recovery_TonsChange()" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.NetLossTons
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <input type="text" class="form-control gray" id="Net_Loss_Tons" data-ng-model="Net_Loss_Tons" disabled="disabled" />
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    @*svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start*@
                                    <div class="col-sm-12 tabdiv" id="Investigation_Compensation_Recommendation">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('Compensation_Recommendation')">
                                            <img src="~/Images/en_next.png" id="Compensation_Recommendation_Img" />
                                            @*<a class="Expand">Compensation Recommendation (Sheeting)</a>*@
                                            <a class="Expand">Compensation Recommendation </a>
                                        </div>

                                        <div class="row" style="padding-top: 30px; display: none;" id="Compensation_Recommendation_Form">
                                            <div class="col-sm-12">
                                                <div class="col-sm-6">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                CompensationMode<span class="Mandatory">*</span>
                                                            </label>

                                                            <div class="col-sm-6">
                                                                <div class="input-group add-on">
                                                                    <input type="text" class="form-control" id="Compensation_Mode" data-ng-model="Compensation_Mode" disabled="disabled" />
                                                                    <input type="hidden" class="form-control" id="Compensation_Mode_Code" value="" />
                                                                    <div class="input-group-btn">
                                                                        <span class="btn btn-default" ng-click="Getdata('GetCompensation_Mode_Mast1','Compensation_Mode_Mast','Compensation Mode List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            @*<div class="input-group OpenPopupIcon col-sm-7">
                                                                    <input type="text" class="form-control" id="Compensation_Mode" data-ng-model="Compensation_Mode" disabled="disabled" />
                                                                    <span class="input-group-addon AddonButton" ng-click="Getdata('GetCompensation_Mode_Mast','Compensation_Mode_Mast','Compensation Mode List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                                </div>*@
                                                        </div>
                                                    </div>
                                                    @*if Product type is Sheeting*@
                                                    <div id="CompensationDiv_Sheeting">
                                                        <div class="row">
                                                            <div class="form-group">
                                                                <label style="text-align: right; display: block;" class="col-sm-5 control-label ForACSheets" for="label-2-2">
                                                                    Compensation In Running Meters
                                                                </label>
                                                                <label style="text-align: right; display: none;" class="col-sm-5 control-label ForCCSheets" for="label-2-2">
                                                                    Compensation In Running feet
                                                                </label>
                                                                <div class="col-sm-6">
                                                                    <input type="text" class="form-control" id="Compensation_In_Running_Meters" data-ng-model="Compensation_In_Running_Meters" value="" name="inum" onkeypress="return isNumber(event)" onkeyup="test.rnum.value = toWords1(test.inum.value);" />
                                                                    <div id="divDisplayWords">
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="form-group">
                                                                <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                    CompensationInTons
                                                                </label>
                                                                <div class="col-sm-6">
                                                                    <input type="text" class="form-control" id="Compensation_In_Tons" data-ng-model="Compensation_In_Tons" onkeypress="return isNumber(event)" onchange="CompareWithNetLossTons()" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="form-group">
                                                                <label style="text-align: right; display: block;" class="col-sm-5 control-label ForACSheets" for="label-2-2">
                                                                    Compensation In Running Meter (Words)
                                                                </label>
                                                                <label style="text-align: right; display: none;" class="col-sm-5 control-label ForCCSheets" for="label-2-2">
                                                                    Compensation In Running Feet (Words)
                                                                </label>
                                                                <div class="col-sm-6">
                                                                    <textarea class="form-control" id="Compensation_In_Running_Meter_Words" data-ng-model="Compensation_In_Running_Meter_Words" name="rnum" maxlength="300"></textarea>
                                                                </div>
                                                            </div>
                                                        </div>



                                                        <div class="row HideMeForCCSheets">
                                                            <div class="form-group">
                                                                <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                    SizeRecommendationRMTSOf36M
                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <input type="text" class="form-control gray" id="Size_Recommendation_RMTS" data-ng-model="Size_Recommendation_RMTS" disabled="disabled" style="width: 40%" onkeypress="return isNumber(event)" />
                                                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right; width: 20%; padding-left: 0px; padding-right: 0px;">
                                                                            No.of 3.6M Sheets
                                                                        </label>
                                                                        <input type="text" class="form-control" id="No_of_36" data-ng-model="No_of_36" style="width: 40%" onkeypress="return isNumber(event)" onchange="CalculateSizeRecommendation()" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>


                                                        <div class="row HideMeForCCSheets">
                                                            <div class="form-group">
                                                                <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                    OtherSizeRMTS
                                                                </label>
                                                                <div class="col-sm-6">
                                                                    <input type="text" class="form-control" id="Other_Size_RMTS" data-ng-model="Other_Size_RMTS" onkeypress="return isNumber(event)" />
                                                                </div>
                                                            </div>
                                                        </div>


                                                        <div class="col-sm-12" id="RecommendedForCCSheetsDivision">
                                                            <table class="table innertable" id="RecommendedForCCSheets" style="width: 100%;">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Sl No</th>
                                                                        <th>Recommended Size</th>
                                                                        <th>Nos</th>
                                                                        <th>GrossWeight</th>
                                                                        <th>Tons</th>
                                                                        <th style="display: none;">ProductCode</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody></tbody>
                                                            </table>
                                                            <input type="button" value="Add" id="RecommendedForCCSheets_Add" class="smallbutton" data-toggle="modal" data-target="#" onclick="RecommendedLinesCCSheets()" />
                                                        </div>

                                                    </div>

                                                    @*End*@
                                                    @*if Product type is Aerocon*@
                                                    <div id="CompensationDiv_Aerocon" style="display: none;">
                                                        <div class="row">
                                                            <div class="form-group">
                                                                <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                    CompensationInNos<span class="Mandatory">*</span>
                                                                </label>
                                                                <div class="col-sm-6">
                                                                    <input type="text" class="form-control" id="CompensationInNos" data-ng-model="CompensationInNos" value="" name="inum_Aerocon" onkeypress="return isInteger(event)" onkeyup="test.rnum_Aerocon.value = toWords1(test.inum_Aerocon.value);" />
                                                                    @*<input type="text" class="form-control" id="CompensationInNos" data-ng-model="CompensationInNos" value="" name="inum_Aerocon" onkeypress="return isNumberKey(event)" onkeyup="test.rnum_Aerocon.value = toWords1(test.inum_Aerocon.value);" />*@
                                                                    <div id="divDisplayWordsSize">
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="form-group">
                                                                <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                    CompensationInNosWords
                                                                </label>
                                                                <div class="col-sm-6">
                                                                    <textarea class="form-control" id="CompensationInNosWords" data-ng-model="CompensationInNosWords" name="rnum_Aerocon" maxlength="300"></textarea>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row" id="CompensationinMetricCubicValueDivision">
                                                            <div class="form-group">
                                                                <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                    CompensationinMetricCubic
                                                                </label>
                                                                <div class="col-sm-7">
                                                                    <div class="input-group">
                                                                        <select class="form-control" id="CompensationinMetricCubic" style="width: 40%" data-ng-model="CompensationinMetricCubic">
                                                                            <option value="">Select UOM</option>
                                                                            <option value="Cubic Meters">Cubic Meters</option>
                                                                            <option value="Metric Tons">Metric Tons</option>

                                                                        </select>
                                                                        @* <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right; width: 20%; padding-left: 0px; padding-right: 0px;">*@
                                                                        @* @LabelNames.Noof36</label>*@
                                                                        <input type="text" class="form-control" id="CompensationinMetricCubicValue" data-ng-model="CompensationinMetricCubicValue" style="width: 40%" onkeypress="return isNumber(event)" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="form-group">
                                                                <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                    CompensationIssueCreditNote
                                                                </label>
                                                                <div class="col-sm-6">
                                                                    <input type="checkbox" id="CompensationIssueCreditNote" data-ng-model="CompensationIssueCreditNote" ng-change="IssueCredited()" />
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="row" ng-show="AmountCredited">
                                                            <div class="form-group">
                                                                <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                    CompensationAmountCredited
                                                                </label>
                                                                <div class="col-sm-6">
                                                                    <input type="text" class="form-control" id="CompensationAmountCredited" data-ng-model="CompensationAmountCredited" onkeypress="return isNumber(event)" />

                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    @*End*@

                                                </div>

                                                <div class="col-sm-6">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                AnySpecialRemarks
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="Any_Special_Remarks" data-ng-model="Any_Special_Remarks" maxlength="300"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12" id="CompensationSize_Details_Div">
                                                    <table class="table innertable" id="CompensationSizeLines_Details_Table">
                                                        <thead>
                                                            <tr>
                                                                <th>CompensationSizeLinesSNo</th>
                                                                <th>CompensationSizeLinesRecommendSize</th>
                                                                <th>CompensationSizeLinesNos</th>

                                                                <th>CompensationSizeLinesGrossWeight</th>
                                                                <th>CompensationSizeLinesTons</th>
                                                                <th style="display: none;">ProductCode</th>
                                                                <th style="display: none;">ProductID</th>
                                                                <th style="display: none;">LineID</th>

                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>
                                                    </table>
                                                    <input type="button" value="Add" id="CompensationSize_Add" class="smallbutton" data-toggle="modal" data-target="#" ng-click="CompensationSizeLinesOpenModel()" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end*@

                                    <div class="col-sm-12 tabdiv" id="BreakageInspectionSheetDiv">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('Breakage_Inspection_Sheet')">
                                            <img src="~/Images/en_next.png" id="Breakage_Inspection_Sheet_Img" />
                                            <a class="Expand">Breakage Inspection Sheet</a>
                                        </div>

                                        <div class="row" style="padding-top: 30px; display: none;" id="Breakage_Inspection_Sheet_Form">
                                            <div class="col-sm-12">
                                                <div class="col-sm-6">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.Size
                                                            </label>

                                                            <div class="col-sm-6">
                                                                <div class="input-group add-on">
                                                                    <input type="text" class="form-control" id="BIS_Size" data-ng-model="BIS_Size" onkeypress="return isNumber(event)" />
                                                                    <div class="input-group-btn">
                                                                        <span class="btn btn-default" id="BISSizeSapn" onclick="OpenSizePopUpFromSupplyDetails()"><i class="glyphicon glyphicon-new-window"></i></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.ProductName
                                                            </label>
                                                            <div class="col-sm-6">
                                                                <input type="text" class="form-control" id="BIS_Product_Name" data-ng-model="BIS_Product_Name" readonly="readonly" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.BatchNo
                                                            </label>
                                                            <div class="col-sm-6">

                                                                <div class="input-group">
                                                                    <select id="batchno" class="form-control" style="width: 30%;">
                                                                        <option value="H1A">H1A</option>
                                                                        <option value="H1B">H1B</option>
                                                                        <option value="H1C">H1C</option>
                                                                        <option value="H2A">H2A</option>
                                                                        <option value="H2B">H2B</option>
                                                                        <option value="H2C">H2C</option>
                                                                        <option value="H3A">H3A</option>
                                                                        <option value="H3B">H3B</option>
                                                                        <option value="H3C">H3C</option>
                                                                        <option value="K2A">K2A</option>
                                                                        <option value="K2B">K2B</option>
                                                                        <option value="K2C">K2C</option>
                                                                        <option value="T1A">T1A</option>
                                                                        <option value="T1B">T1B</option>
                                                                        <option value="T1C">T1C</option>
                                                                        <option value="T2A">T2A</option>
                                                                        <option value="T2B">T2B</option>
                                                                        <option value="T2C">T2C</option>
                                                                        <option value="CA">CA</option>
                                                                        <option value="CB">CB</option>
                                                                        <option value="CC">CC</option>
                                                                        <option value="BA">BA</option>
                                                                        <option value="BB">BB</option>
                                                                        <option value="BC">BC</option>
                                                                        <option value="MA">MA</option>
                                                                        <option value="MB">MB</option>
                                                                        <option value="MC">MC</option>
                                                                        <option value="JA">JA</option>
                                                                        <option value="JB">JB</option>
                                                                        <option value="JC">JC</option>
                                                                        <option value="TA">TA</option>
                                                                        <option value="TB">TB</option>
                                                                        <option value="TC">TC</option>
                                                                        <option value="SA">SA</option>
                                                                        <option value="SB">SB</option>
                                                                        <option value="SC">SC</option>
                                                                        <option value="F1A">F1A</option>
                                                                        <option value="F1B">F1B</option>
                                                                        <option value="F1C">F1C</option>
                                                                        <option value="F2A">F2A</option>
                                                                        <option value="F2B">F2B</option>
                                                                        <option value="F2C">F2C</option>
                                                                        <option value="F3A">F3A</option>
                                                                        <option value="F3B">F3B</option>
                                                                        <option value="F3C">F3C</option>
                                                                        <option value="DA">DA</option>
                                                                        <option value="DB">DB</option>
                                                                        <option value="DC">DC</option>
                                                                        <option value="G1A">G1A</option>
                                                                        <option value="G1B">G1B</option>
                                                                        <option value="G1C">G1C</option>
                                                                        <option value="D1A">D1A</option>
                                                                        <option value="D1B">D1B</option>
                                                                        <option value="D1C">D1C</option>
                                                                        <option value="D2A">D2A</option>
                                                                        <option value="D2B">D2B</option>
                                                                        <option value="D2C">D2C</option>
                                                                        <option value="H4A">H4A</option>
                                                                        <option value="H4B">H4B</option>
                                                                        <option value="H4C">H4C</option>
                                                                    </select>
                                                                    <input type="text" class="form-control" id="BIS_Batch_No" data-ng-model="BIS_Batch_No" style="width: 70%;" placeholder="Enter Date" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.DefectType
                                                            </label>
                                                            <div class="col-sm-6">
                                                                <div class="input-group add-on">
                                                                    <input type="text" class="form-control" id="BIS_Defect_Type" data-ng-model="BIS_Defect_Type" disabled="disabled" />
                                                                    <input type="text" class="form-control" id="BIS_Defect_Type_ID" data-ng-model="BIS_Defect_Type_ID" readonly="readonly" style="display: none;" />
                                                                    <input type="text" class="form-control" id="BIS_Defect_Type_CODE" data-ng-model="BIS_Defect_Type_CODE" readonly="readonly" style="display: none;" />
                                                                    <div class="input-group-btn">
                                                                        <span class="btn btn-default" id="GetBISDefectTypeMasterSpan" ng-click="Getdata('GetBISDefectTypeMaster','GetDefectTypeMaster','Defect Type List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-6">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.Recovery
                                                            </label>

                                                            <div class="col-sm-6">
                                                                <div class="input-group add-on">
                                                                    <input type="text" class="form-control" id="BIS_Recovery_Size" data-ng-model="BIS_Recovery_Size" />
                                                                    <input type="text" class="form-control" id="BIS_Recovery_CODE" data-ng-model="BIS_Recovery_CODE" disabled="disabled" style="display: none;" />
                                                                    <div class="input-group-btn">
                                                                        <span class="btn btn-default" id="GetRecoveryMasterInvSpan" data-ng-click="Getdata('GetRecoveryMasterInv','RecoveryProduct','Product Recovery List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.RecoveryProductName
                                                            </label>
                                                            <div class="col-sm-6">
                                                                <input type="text" class="form-control" id="BIS_Recovery_Product_Name" data-ng-model="BIS_Recovery_Product_Name" readonly="readonly" />
                                                                <input type="text" class="form-control" id="BIS_Recovery_ID" data-ng-model="BIS_Recovery_ID" style="display: none;" />
                                                                <input type="text" class="form-control" id="BIS_Recovery_GrossWeight" data-ng-model="BIS_Recovery_GrossWeight" style="display: none;" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.NoofSheets
                                                            </label>
                                                            <div class="col-sm-6">
                                                                <input type="text" class="form-control" id="BIS_No_of_Sheets" data-ng-model="BIS_No_of_Sheets" onkeypress="return isNumber(event)" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <div class="col-sm-6" style="padding-left: 45%;">
                                                                <input type="button" value="Go" id="BI_Sheet_GO" class="smallbutton" data-toggle="modal" data-target="#" onclick="BI_Sheet_GO_Click()" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <table class="table innertable" id="Breakage_Inspection_Sheet_Table">
                                                    <thead>
                                                        <tr>
                                                            <th>S.No</th>
                                                            <th>@LabelNames.BIS_Product</th>
                                                            <th>@LabelNames.BIS_Size</th>
                                                            <th>@LabelNames.BIS_BatchNo</th>
                                                            <th>@LabelNames.BIS_DefectType</th>
                                                            <th>@LabelNames.BIS_RecoveryProduct</th>
                                                            <th>@LabelNames.BIS_Recovery</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                                <input type="button" value="Add" id="BI_Sheet_Add" class="smallbutton" data-toggle="modal" data-target="#" onclick="BI_Sheet_Add_Fun()" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 tabdiv" id="ObservationRemarksDiv">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('Observation_Remarks')">
                                            <img src="~/Images/en_next.png" id="Observation_Remarks_Img" />
                                            <a class="Expand">Observation/Remarks</a>
                                        </div>

                                        <div class="row" style="padding-top: 30px; display: none;" id="Observation_Remarks_Form">
                                            <div class="col-sm-12">
                                                <table class="table innertable" id="Observation_Remarks_Table">
                                                    <thead>
                                                        <tr>
                                                            <th>S No</th>
                                                            <th>@LabelNames.ORObservationName</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                                <input type="button" value="Add" id="Observation_Remarks_Add" class="smallbutton" data-toggle="modal" data-target="#" onclick="Observation_Remarks_Adding()" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 tabdiv" id="SiteObservationSheetDiv">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('Site_Observation_Sheet')">
                                            <img src="~/Images/en_next.png" id="Site_Observation_Sheet_Img" />
                                            <a class="Expand">Site Observation Sheet</a>
                                        </div>

                                        <div class="row" style="padding-top: 30px; display: none;" id="Site_Observation_Sheet_Form">
                                            <div class="col-sm-12">
                                                <table class="table innertable" id="Site_Observation_Sheet_Table">
                                                    <thead>
                                                        <tr>
                                                            <th>S No</th>
                                                            <th>@LabelNames.SOS_Observation</th>
                                                            <th>@LabelNames.SOS_VerifiedorNot</th>
                                                            <th>@LabelNames.SOS_Comments</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                                <input type="button" value="Add" id="Site_Observation_Sheet_Add" class="smallbutton" data-toggle="modal" data-target="#" onclick="Site_Observation_Sheet_Adding()" />
                                            </div>
                                        </div>
                                    </div>

                                    @* VIKAS G, 2023 APRIL 25 , SBU8 START.*@
                                    <div class="col-sm-12 tabdiv" id="SiteObservationSheetDivBU8">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('Site_Observation_Sheet_BU8')">
                                            <img src="~/Images/en_next.png" id="Site_Observation_Sheet_BU8_Img" />
                                            <a class="Expand">Site Observation Sheet</a>
                                        </div>

                                        <div class="row" style="padding-top: 30px; display: none;" id="Site_Observation_Sheet_BU8_Form">
                                            <div class="col-sm-12">
                                                <div class="col-sm-10" id="SiteObservationsRemarksIfAnyFieldDiv">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                Site Observation Remarks
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="SiteObservationsRemarks_if_any" data-ng-model="SiteObservationsRemarks_if_any" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @* VIKAS G, 2023 APRIL 25 , SBU8 END.*@
                                    <div class="col-sm-12 tabdiv" id="InvestigationRemarksDiv">
                                        <div class="col-sm-12 CloseOpen" onclick="FormToggle('Investigation_Remarks')">
                                            <img src="~/Images/en_next.png" id="Investigation_Remarks_Img" />
                                            <a class="Expand">Investigation Remarks</a>
                                        </div>
                                        <div class="row" style="padding-top: 30px; display: none;" id="Investigation_Remarks_Form">
                                            <div class="col-sm-12">
                                                <div class="col-sm-10" id="CustomerRemarksIfAnyFieldDiv">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.CustomerRemarksifany
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="Customer_Remarks_if_any" data-ng-model="Customer_Remarks_if_any" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-10" id="NatureOfComplaintFieldDiv">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <div class="col-sm-5 control-label" style="text-align: right; font-weight: bold;">
                                                                Nature of Complaint<br />
                                                                (Provide Technical Description of Complaint)
                                                            </div>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="NatureOfComplaint" data-ng-model="NatureOfComplaint" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-10" id="ObservationsByOfficialFieldDiv">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            @*<label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">@LabelNames.Observationsbyofficial</label>*@
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;" id="ObservationByHil"></label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="Observations_by_official" data-ng-model="Observations_by_official" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-10" id="ComplaintDescribedBySalesFieldDiv">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @*@LabelNames.ComplaintDescribedBySales</label>*@
                                                                Observation By HIL Official
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="ComplaintDescribedBySales" data-ng-model="ComplaintDescribedBySales" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-10" id="ComplaintDescriptionFieldDiv">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @*@LabelNames.ComplaintDescribedBySales</label>*@
                                                                Complaint Description
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="ComplaintDescription" data-ng-model="ComplaintDescription" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-10" id="ObservationByQAFFieldDiv">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @*@LabelNames.ObservationByQAF</label>*@
                                                                Observation By QAF
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="ObservationByQAF" data-ng-model="ObservationByQAF" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-10" id="RemarksFieldDiv">
                                                    <div class="row">
                                                        <div class="form-group">
                                                            <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                                                @LabelNames.Remarks
                                                            </label>
                                                            <div class="col-sm-7">
                                                                <textarea class="form-control" id="IR_Remarks" data-ng-model="IR_Remarks" maxlength="3000"></textarea>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="modal fade" id="MaterialSupplyDetailModal" tabindex="-1" role="dialog" aria-labelledby="MSDModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @*<h4 class="modal-title" id="MSDModalLabel">Material Supply Detail</h4>*@
                    <h4 class="modal-title" id="MSDModalLabel">@LabelNames.MaterialSupplyDetail</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="hidden" id="MSD_id" data-ng-model="MSD_id" />
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_MaterialBelongsTo
                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="Material_Belongs_To" data-ng-model="Material_Belongs_To" disabled="disabled" />
                                                <input type="text" class="form-control" id="Material_Belongs_TO_ID" data-ng-model="Material_Belongs_TO_ID" style="display: none;" disabled="disabled" />
                                                <input type="text" class="form-control" id="Material_Belongs_TO_CODE" data-ng-model="Material_Belongs_TO_CODE" style="display: none;" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetPlantMasterInv','GetPlantMaster','Plant List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_ProductSuppliedFrom
                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="Product_Supplied_From" data-ng-model="Product_Supplied_From" disabled="disabled" />
                                                <input type="text" class="form-control" id="Product_Supplied_From_ID" data-ng-model="Product_Supplied_From_ID" style="display: none;" disabled="disabled" />
                                                <input type="text" class="form-control" id="Product_Supplied_From_CODE" data-ng-model="Product_Supplied_From_CODE" style="display: none;" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetProductSuppliedFromInv','Product_Supplied_From','Supplier List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_Name
                                        </label>

                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="MSD_Name" data-ng-model="MSD_Name" disabled="disabled" />
                                                <input type="text" class="form-control" id="MSD_Name_ID" data-ng-model="MSD_Name_ID" style="display: none;" disabled="disabled" />
                                                <input type="text" class="form-control" id="MSD_Name_CODE" data-ng-model="MSD_Name_CODE" style="display: none;" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetMSD_NameInv','MSD_Name','')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_UOM
                                        </label>
                                        <div class="col-sm-4">
                                            <select class="form-control" id="MSD_UOM" data-ng-model="MSD_UOM">
                                                <option value="">Select UOM</option>
                                                <option value="Metric Tons">Metric Tons</option>
                                                <option value="Cubic Meters">Cubic Meters</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_SupplyQty
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="MSD_Supply_Qty" data-ng-model="MSD_Supply_Qty" onkeypress="return isNumber(event)" onchange="MSD_QuantityChanges(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_BreakageQty
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="MSD_Breakage_Qty" data-ng-model="MSD_Breakage_Qty" onkeypress="return isNumber(event)" onchange="MSD_QuantityChanges(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_NetLossQty
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="MSD_Net_Loss_Qty" data-ng-model="MSD_Net_Loss_Qty" onkeypress="return isNumber(event)" onchange="MSD_QuantityChanges(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="MSD_Save" class="btn btn-info" onclick="SaveMSDData()">Save</button>
                    <button type="button" id="MSD_Delete" class="btn btn-info" onclick="DeleteMSD()">Delete</button>
                    <button type="button" id="MSD_Close" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    @*VIKAS G, 9-3-2022 AS PER JOSEPH REQUIREMENT MANDATE ROWS ARE REMOVED .. START*@
    <div class="modal fade" id="MaterialSupplyDetailModalBU3" tabindex="-1" role="dialog" aria-labelledby="MSDModalLabelBU3">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="MSDModalLabelBU3">@LabelNames.MaterialSupplyDetail</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="hidden" id="BU3MSD_id" />


                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">Product Code</label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="BU3MSD_ProductCode" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetProductMasterInvBU3','GetProductMaster','Product Details List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">Product Name</label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control disabled" id="BU3MSD_ProductName" data-ng-model="MSD_Breakage_Qty" disabled="disabled" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_MaterialBelongsTo
                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="BU3Material_Belongs_To_Name" disabled="disabled" />
                                                <input type="text" class="form-control" id="BU3Material_Belongs_TO_CODE" style="display: none;" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetPlantMasterInvBU3','GetPlantMaster','Plant List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_ProductSuppliedFrom
                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="BU3Product_Supplied_From_Name" disabled="disabled" />
                                                <input type="text" class="form-control" id="BU3Product_Supplied_From_CODE" style="display: none;" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetProductSuppliedFromInvBU3','Product_Supplied_From','Supplier List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_Name
                                        </label>

                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="BU3MSD_Name_Name" disabled="disabled" />
                                                <input type="text" class="form-control" id="BU3MSD_Name_CODE" style="display: none;" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetMSD_NameInvBU3','MSD_Name','')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_UOM
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="BU3MSD_UOM" disabled="disabled" value="EA" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.MSD_SupplyQty
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="BU3MSD_Supply_Qty" onkeypress="return isNumber(event)" onchange="MSD_QuantityChangesBU3(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">Defect Qty</label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="BU3MSD_Defect_Qty" onkeypress="return isNumber(event)" onchange="MSD_QuantityChangesBU3(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">Actual Defect Qty</label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="BU3MSD_Actual_Defect_Qty" onkeypress="return isNumber(event)" onchange="MSD_QuantityChangesBU3(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="BU3MSD_Save" class="btn btn-info" onclick="SaveMSDBU3Data()">Save</button>
                    <button type="button" id="BU3MSD_Delete" class="btn btn-info" onclick="DeleteMSDBU3()">Delete</button>
                    <button type="button" id="BU3MSD_Close" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    @*VIKAS G, 9-3-2022 AS PER JOSEPH REQUIREMENT MANDATE ROWS ARE REMOVED .. END*@
    <div class="modal fade" id="Invoice_ListModal" tabindex="-1" role="dialog" aria-labelledby="Invoice_ListLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @*<h4 class="modal-title" id="Invoice_ListLabel">Add/Update Investigation Invoice Lines</h4>*@
                    <h4 class="modal-title" id="Invoice_ListLabel">@LabelNames.InvestigationInvoiceLines</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="hidden" id="InvList_id" data-ng-model="InvList_id" />
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.IL_InvoiceNo<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="Invoice_No" data-ng-model="Invoice_No" maxlength="10" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.IL_InvoiceDate<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="Invoice_Date" data-ng-model="Invoice_Date" readonly="readonly" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.IL_Remarks
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="Inv_List_Remarks" data-ng-model="Inv_List_Remarks" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="InvList_Save" class="btn btn-info" onclick="SaveInvList()">Save</button>
                    <button type="button" id="InvList_Delete" class="btn btn-info" onclick="DeleteInvList()">Delete</button>
                    <button type="button" id="InvList_Close" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="SupplyDetailModal" tabindex="-1" role="dialog" aria-labelledby="SDModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="SDModalLabel">@LabelNames.SupplyDetailPopUp</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="hidden" id="SD_id" data-ng-model="SD_id" />
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.SD_ItemTypeProductName<span class="Mandatory">*</span>
                                        </label>

                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="SD_Item_Type_Product_Name" data-ng-model="SD_Item_Type_Product_Name" />
                                                <input type="text" class="form-control" id="SD_Item_Type_Product_Name_ID" data-ng-model="SD_Item_Type_Product_Name_ID" style="display: none;" />
                                                <input type="text" class="form-control" id="SD_Item_Type_Product_Name_CODE" data-ng-model="SD_Item_Type_Product_Name_CODE" style="display: none;" />
                                                <input type="text" class="form-control" id="SD_Item_Type_GrossWeight" data-ng-model="SD_Item_Type_GrossWeight" style="display: none;" />
                                                <input type="text" class="form-control" id="fortune20_product_category_code" data-ng-model="fortune20_product_category_code" style="display: none;" />
                                                <input type="text" class="form-control" id="fortune20_check" data-ng-model="fortune20_check" style="display: none;" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetProductMasterInv','GetProductMaster','Product Details List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label ForACSheets" style="text-align: right; display: block;">
                                            Size(M)<span class="Mandatory">*</span>
                                        </label>
                                        <label for="label-2-2" class="col-sm-5 control-label ForCCSheets" style="text-align: right; display: none;">
                                            Size(ft)<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="SD_Size_M" data-ng-model="SD_Size_M" onkeypress="return isNumber(event)" onchange="SizeChangeDangers()" onblur="SizeChangeDangers()" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.SD_SuppliedQtyNos<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="SD_Supplied_Qty_Nos" data-ng-model="SD_Supplied_Qty_Nos" onkeypress="return isInteger(event)" onchange="SupplyQuantityNosChange()" onblur="SupplyQuantityNosChange()" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label ForACSheets" style="text-align: right; display: block;">
                                            Supplied Qty(M)<span class="Mandatory">*</span>
                                        </label>
                                        <label for="label-2-2" class="col-sm-5 control-label ForCCSheets" style="text-align: right; display: none;">
                                            Supplied Qty(ft)<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control gray" id="SD_Supplied_Qty_M" data-ng-model="SD_Supplied_Qty_M" onkeypress="return isNumber(event)" disabled="disabled" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.SD_BreakageQtyNos<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="SD_Breakage_Qty_Nos" data-ng-model="SD_Breakage_Qty_Nos" onkeypress="return isInteger(event)" onchange="BreakageQuantityNosChange()" onblur="BreakageQuantityNosChange()" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label ForACSheets" style="text-align: right; display: block;">
                                            Breakage Qty(M)<span class="Mandatory">*</span>
                                        </label>
                                        <label for="label-2-2" class="col-sm-5 control-label ForCCSheets" style="text-align: right; display: none;">
                                            Breakage Qty(ft)<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control gray" id="SD_Breakage_Qty_M" data-ng-model="SD_Breakage_Qty_M" onkeypress="return isNumber(event)" disabled="disabled" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.SD_BreakagePer<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="SD_Breakage_Per" data-ng-model="SD_Breakage_Per" onkeypress="return isNumber(event)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.SD_DefectType<span class="Mandatory">*</span>
                                        </label>

                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="SD_Defect_Type" data-ng-model="SD_Defect_Type" disabled="disabled" />
                                                <input type="text" class="form-control" id="SD_Defect_Type_ID" data-ng-model="SD_Defect_Type_ID" style="display: none;" />
                                                <input type="text" class="form-control" id="SD_Defect_Type_CODE" data-ng-model="SD_Defect_Type_CODE" style="display: none;" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetDefectTypeMasterInv','GetDefectTypeMaster','Defect Type List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.SD_Remarks
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="SD_Remarks" data-ng-model="SD_Remarks" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="SD_Save" class="btn btn-info" onclick="SaveSDData()">Save</button>
                    <button type="button" id="SD_Delete" class="btn btn-info" onclick="DeleteSD()">Delete</button>
                    <button type="button" id="SD_Close" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="SupplyDetailModalB" tabindex="-1" role="dialog" aria-labelledby="SDModalLabelB">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @*<h4 class="modal-title" id="SDModalLabelB">@LabelNames.SupplyDetailPopUp</h4>*@
                    <h4 class="modal-title" id="SDModalLabelB">Receipt Lines</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="hidden" id="SD_idB" data-ng-model="SD_idB" />
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Product Code<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="SD_Item_Type_Product_Name_CODEB" data-ng-model="SD_Item_Type_Product_Name_CODEB" disabled="disabled" />
                                                <input type="text" class="form-control" id="SD_Item_Type_Product_Name_IDB" data-ng-model="SD_Item_Type_Product_Name_IDB" style="display: none;" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetProductMasterInvB','GetProductMaster','Product Details List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Product Name
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="SD_Item_Type_Product_NameB" data-ng-model="SD_Item_Type_Product_NameB" disabled="disabled" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Invoice No
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="InvoiceNoB" data-ng-model="InvoiceNoB" maxlength="10" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Invoice Date
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="InvoiceDateB" data-ng-model="InvoiceDateB" readonly="readonly" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Batch No
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="BatchNoB" data-ng-model="BatchNoB" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Supplied Qty(Nos)<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="SuppliedQtyNosB" data-ng-model="SuppliedQtyNosB" onkeypress="return isInteger(event)" onchange="SDMBSuppliedBreakageQtyChange(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label BreakageQtyLabel" style="text-align: right; float: left;">
                                            Breakage Qty(Nos)
                                        </label><span style="float: left; font-weight: bold;" class="Mandatory">*</span>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="BreakageQtyNosB" data-ng-model="BreakageQtyNosB" onkeypress="return isInteger(event)" onchange="SDMBSuppliedBreakageQtyChange(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Transporter
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="TransporterB" data-ng-model="TransporterB" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Defect Type<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="Defect_TypeB" data-ng-model="Defect_TypeB" disabled="disabled" />
                                                <input type="text" class="form-control" id="Defect_Type_IDB" data-ng-model="Defect_Type_IDB" style="display: none;" />
                                                <input type="text" class="form-control" id="Defect_Type_CODEB" data-ng-model="Defect_Type_CODEB" style="display: none;" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetDefectTypeMasterInvB','GetDefectTypeMaster','Defect Type List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Remarks
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="RemarksB" data-ng-model="RemarksB" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12" style="display: none;">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Attachments
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="AttachmentsB" data-ng-model="AttachmentsB" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="SD_SaveB" class="btn btn-info" onclick="SaveSDDataB()">Save</button>
                    <button type="button" id="SD_DeleteB" class="btn btn-info" onclick="DeleteSDB()">Delete</button>
                    <button type="button" id="SD_CloseB" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="SupplyDetailModalSBU3" tabindex="-1" role="dialog" aria-labelledby="SDModalLabelBU3">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="SDModalLabelBU3">Supply Lines</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="hidden" id="SD_IDBU3" data-ng-model="SD_IDBU3" />
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Product Code<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="Product_Code_BU3" data-ng-model="Product_Code_BU3" disabled="disabled" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetProductMasterInvSDBU3','GetProductMaster','Product Details List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Product Name
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="Product_Name_BU3" data-ng-model="Product_Name_BU3" disabled="disabled" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*//VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .start*@
                            <div class="col-sm-12" style="display : none">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Plant Name
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="Plant_Name_BU3" data-ng-model="Plant_Name_BU3" disabled="disabled" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*//VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process . end*@
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Invoice No<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="InvoiceNoBU3" data-ng-model="InvoiceNoBU3" maxlength="10" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Invoice Date<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="InvoiceDateBU3" data-ng-model="InvoiceDateBU3" readonly="readonly" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Batch No
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="BatchNoBU3" data-ng-model="BatchNoBU3" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Supplied Qty(Nos)<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="SuppliedQtyNosBU3" data-ng-model="SuppliedQtyNosBU3" onkeypress="return isInteger(event)" onchange="SDMB3SuppliedBreakageQtyChange(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right; float: left;">
                                            Defect Qty(Nos)<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="DefectiveQtyNosBU3" data-ng-model="DefectiveQtyNosBU3" onkeypress="return isInteger(event)" onchange="SDMB3SuppliedBreakageQtyChange(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right; float: left;">
                                            Actual Defect Qty(Nos)<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="ActDefectiveQtyNosBU3" data-ng-model="ActDefectiveQtyNosBU3" onkeypress="return isInteger(event)" onchange="SDMB3SuppliedBreakageQtyChange(this.id)" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Transporter
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="TransporterBU3" data-ng-model="TransporterBU3" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Defect Type<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-4">
                                            <div class="input-group add-on">
                                                <input type="text" class="form-control" id="DefectTypeNameBU3" data-ng-model="DefectTypeNameBU3" disabled="disabled" />
                                                <input type="text" class="form-control" id="DefectTypeCodeBU3" data-ng-model="DefectTypeCodeBU3" style="display: none;" />
                                                <div class="input-group-btn">
                                                    <span class="btn btn-default" ng-click="Getdata('GetDefectTypeMasterInvBU3','GetDefectTypeMaster','Defect Type List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @* VIKAS G, 2023-03-17 SBU8 START*@
                            <div class="col-sm-12" id="Defectprctdiv" style="display:none">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Defect %
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="DefectprctBU8" data-ng-model="DefectprctBU8" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @* VIKAS G, 2023-03-17 SBU8 END*@
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Remarks
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="RemarksBU3" data-ng-model="RemarksBU3" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @* VIKAS G, 2023-03-17 SBU8 START*@
                            <div class="col-sm-12" id="BasicAmountdiv" style="display:none">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Basic Amount
                                        </label>
                                        <div class="col-sm-4">
                                            <input type="text" class="form-control" id="BasicAmount" data-ng-model="BasicAmount" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @* VIKAS G, 2023-03-17 SBU8 END*@
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="SD_SaveBU3" class="btn btn-info" ng-click="SaveSDDataBU3()">Save</button>
                    <button type="button" id="SD_DeleteBU3" class="btn btn-info" ng-click="DeleteSDBU3()">Delete</button>
                    <button type="button" id="SD_CloseBU3" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="BreakageInspectionSheetModal" tabindex="-1" role="dialog" aria-labelledby="BISModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="BISModalLabel">@LabelNames.BreakageInspectionSheetPopUp</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="hidden" id="BISP_id" data-ng-model="BISP_id" />
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.BIS_Size<span class="Mandatory">*</span>
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-6">
                                            <input type="text" class="form-control" id="BISP_Size" data-ng-model="BISP_Size" onkeypress="return isNumber(event)" />
                                            @*<span class="input-group-addon AddonButton" ng-click="Getdata('GetSize_Mast_BISP','Size_Mast','Product List')"><i class="glyphicon glyphicon-new-window"></i></span>*@
                                            <span class="input-group-addon AddonButton" onclick="OpenSizePopUpFromSupplyDetailsOne()"><i class="glyphicon glyphicon-new-window"></i></span>
                                            <input type="text" class="form-control" id="BISP_GrossWeight" data-ng-model="BISP_GrossWeight" style="display: none;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.BIS_Product
                                        </label>
                                        <div class="col-sm-5">
                                            <input type="text" class="form-control" id="BISP_Product" data-ng-model="BISP_Product" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.BIS_BatchNo<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-5">
                                            <input type="text" class="form-control" id="BISP_Batch_No" data-ng-model="BISP_Batch_No" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.BIS_DefectType<span class="Mandatory">*</span>
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-6">
                                            <input type="text" class="form-control" id="BISP_Defect_Type" data-ng-model="BISP_Defect_Type" />
                                            <span class="input-group-addon AddonButton" ng-click="Getdata('GetBISPDefectTypeMaster','GetDefectTypeMaster','Defect Type List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                            <input type="text" class="form-control" id="BISP_Defect_Type_ID" data-ng-model="BISP_Defect_Type_ID" style="display: none" />
                                            <input type="text" class="form-control" id="BISP_Defect_Type_CODE" data-ng-model="BISP_Defect_Type_CODE" style="display: none" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.BIS_RecoveryProduct
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-6">
                                            <input type="text" class="form-control" id="BISP_Recovery_Product" data-ng-model="BISP_Recovery_Product" />
                                            <span class="input-group-addon AddonButton" ng-click="Getdata('GetBISPRecoveryMasterInv','GetProductMaster','Product Recovery List')"><i class="glyphicon glyphicon-new-window"></i></span>
                                            <input type="text" class="form-control" id="BISP_Recovery_Product_ID" data-ng-model="BISP_Recovery_Product_ID" style="display: none" />
                                            <input type="text" class="form-control" id="BISP_Recovery_Product_CODE" data-ng-model="BISP_Recovery_Product_CODE" style="display: none" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            @LabelNames.BIS_Recovery<span class="Mandatory">*</span>
                                        </label>
                                        <div class="col-sm-5">
                                            <input type="text" class="form-control" id="BISP_Recovery" data-ng-model="BISP_Recovery" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="BISP_Save" class="btn btn-info" onclick="SaveBISData()">Save</button>
                    <button type="button" id="BISP_Delete" class="btn btn-info" onclick="DeleteBISSD()">Delete</button>
                    <button type="button" id="BISP_Close" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="ObservationLinesPopUp" tabindex="-1" role="dialog" aria-labelledby="ObservationLinesPopUpLabel">
        <div class="modal-dialog" role="document" style="width: 60%;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="ObservationLinesPopUpLabel">Observation Lines</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">

                            <table id="ObservationLinesTable" class="ListTable">
                                <thead>
                                    <tr>
                                        <th>SNo</th>
                                        <th>Observation Name</th>
                                        <th>Check</th>
                                        <th style="display: none;">OBSERVATION_CODE</th>
                                        <th style="display: none;">ID</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot style="display: none;">
                                    <tr>
                                        <th>SNo</th>
                                        <th>Observation Name</th>
                                        <th>Check</th>
                                        <th style="display: none;">OBSERVATION_CODE</th>
                                        <th style="display: none;">ID</th>
                                    </tr>
                                </tfoot>
                            </table>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="OLPU_Save" class="btn btn-info" onclick="SaveOLPUData()">Done</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="SiteObservationSheetPopUp" tabindex="-1" role="dialog" aria-labelledby="SiteObservationSheetPopUpLabel">
        <div class="modal-dialog" role="document" style="width: 60%;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="SiteObservationSheetPopUpLabel">Site Observation Sheet</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">

                        <div class="col-sm-12">
                            <div class="row">
                                <div class="form-group">
                                    <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                        Observations by QAF representative<span class="Mandatory">*</span>
                                    </label>
                                    <div class="col-sm-4">
                                        <select class="form-control" id="ObservationType" onchange="ObservationTypeChange()">
                                            <option value="">Select Observation</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <table id="SiteObservationSheetTable" class="ListTable">
                                <thead>
                                    <tr>
                                        <th>SNo</th>
                                        <th>Observation</th>
                                        <th>Verified Or Not</th>
                                        <th>Comments</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot style="display: none;">
                                    <tr>
                                        <th>SNo</th>
                                        <th>Observation Name</th>
                                        <th>Check</th>
                                    </tr>
                                </tfoot>
                            </table>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="SOSP_Save" class="btn btn-info" onclick="SaveSOSPData()">Done</button>
                    <button type="button" id="SOSP_Close" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="BIS_SizePopUp" tabindex="-1" role="dialog" aria-labelledby="BIS_SizePopUpLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="BIS_SizePopUpLabel">Site Observation Sheet</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">

                        <div class="row">
                            <table id="SizeFromSDtoBIS" class="ListTable">
                                <thead>
                                    <tr>
                                        <th>Product Name</th>
                                        <th>Size</th>
                                        <th>Gross Weight</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot style="display: none;">
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                            </table>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="BreakageInspectionSheetPopUp" tabindex="-1" role="dialog" aria-labelledby="BIS_Sheet_PopUpLabel">
        <div class="modal-dialog" role="document" style="width: 97%;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="BIS_Sheet_PopUpLabel">Breakage Inspection Sheet</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <table id="BreakageInspectionSheetTable" class="ListTable" style="width: 90%;">
                                <thead>
                                    <tr>
                                        <th>SLNO</th>
                                        <th>Size</th>
                                        <th>Product_Name</th>
                                        <th>Batch_No</th>
                                        <th>Defect_Type</th>
                                        <th>Recovery</th>
                                        <th>Recovery_Product_Name</th>
                                        <th style="display: none;">Defect_Type_ID</th>
                                        <th style="display: none;">Defect_Type_CODE</th>
                                        <th style="display: none;">Recovery_ID</th>
                                        <th style="display: none;">Recovery_CODE</th>
                                        <th style="display: none;">GrossWeight</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot style="display: none;">
                                    <tr>
                                        <th>SLNO</th>
                                        <th>Size</th>
                                        <th>Product_Name</th>
                                        <th>Batch_No</th>
                                        <th>Defect_Type</th>
                                        <th>Recovery</th>
                                        <th>Recovery_Product_Name</th>
                                        <th>Defect_Type_ID</th>
                                        <th>Defect_Type_CODE</th>
                                        <th>Recovery_ID</th>
                                        <th>Recovery_CODE</th>
                                        <th>GrossWeight</th>
                                    </tr>
                                </tfoot>
                            </table>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="BISP_PopUp_Save" class="btn btn-info" onclick="BISP_PopUp_SaveClick()">Save</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="ObservationRemarksModel" tabindex="-1" role="dialog" aria-labelledby="ORLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    @*<h4 class="modal-title" id="MSDModalLabel">Material Supply Detail</h4>*@
                    <h4 class="modal-title" id="ORLabel">Observation/Remarks</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="hidden" id="RowId_idObr" data-ng-model="RowId_idObr" />

                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            S No
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-5">
                                            <input type="text" class="form-control gray" id="ObserSLNO" data-ng-model="ObserSLNO" disabled="disabled" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Observation Name
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-5">
                                            <input type="text" class="form-control" id="ObserName" data-ng-model="ObserName" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="OBR_Save" class="btn btn-info" onclick="SaveObrData()">Update</button>
                    <button type="button" id="OBR_Delete" class="btn btn-info" onclick="DeleteObr()">Delete</button>
                    <button type="button" id="OBR_Close" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="SiteObservationModelPopUp" tabindex="-1" role="dialog" aria-labelledby="SiteLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="SiteLabel">Site Observation Sheet</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">
                            <input type="text" id="RowId_idSOS" data-ng-model="RowId_idSOS" style="display: none;" />

                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            S No
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-5">
                                            <input type="text" class="form-control gray" id="SOSSLNO" data-ng-model="SOSSLNO" disabled="disabled" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Observation Name
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-5">
                                            <input type="text" class="form-control" id="SOS_Observation_Name" data-ng-model="SOS_Observation_Name" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Verified Or Not
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-5">
                                            @*<input type="text" class="form-control" id="SOS_Verified_Or_Not" data-ng-model="SOS_Verified_Or_Not" />*@
                                            <input type="radio" name="CHK_Pop_Up" id="PopUp_Yes" value="Yes">Yes
                                            <input type="radio" name="CHK_Pop_Up" id="PopUp_No" value="No">No
                                            <input type="radio" name="CHK_Pop_Up" id="PopUp_NA" value="NA">NA
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Comments
                                        </label>
                                        <div class="input-group OpenPopupIcon col-sm-5">
                                            <input type="text" class="form-control" id="SOS_Comments" data-ng-model="SOS_Comments" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="SOS_Save" class="btn btn-info" onclick="SaveSOSData()">Update</button>
                    <button type="button" id="SOS_Remove" class="btn btn-info" onclick="SaveSOSRemove()">Delete</button>
                    <button type="button" id="SOS_Close" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    @*//VIKAS G, 21-02-2023.SBU-8 START*@
    <!--<div class="modal fade" id="InvoiceForm" tabindex="-1" role="dialog" aria-labelledby="InvoiceLabel" style="display:none">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="InvoiceLabel">Invoice Form</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">

                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Remarks
                                        </label>
                                        <div class="col-sm-4">
                                            <textarea class="form-control" id="Approvals_Remarks" data-ng-model="Approvals_Remarks" maxlength="300"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <!--<button type="button" class="btn btn-info" ng-click="MakeApproved('Approved')">Approve</button>
                    <button type="button" class="btn btn-info" ng-click="MakeApproved('Rejected')">Reject</button>-->
    -->
    <!--@* //VIKAS G, 25-03-2022 SEND BACK REQUEST IN COMPLAINT REGISTRATION APPROVAL*@

                    <button type="button" id="SameInvoiceComplaintRegistration" class="btn btn-info" ng-click="SameInvoiceComplaintRegistration()">ok</button>
                    <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>-->
    @*//VIKAS G, 21-02-2023.SBU-8 END*@
    <div class="modal fade" id="ApprovalsActionForm" tabindex="-1" role="dialog" aria-labelledby="ApprovalsLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="ApprovalsLabel">Approvals Action Form</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal ng-pristine ng-valid" role="form" method="get" action="#">
                        <div class="row">

                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label for="label-2-2" class="col-sm-5 control-label" style="text-align: right;">
                                            Remarks
                                        </label>
                                        <div class="col-sm-4">
                                            <textarea class="form-control" id="Approvals_Remarks" data-ng-model="Approvals_Remarks" maxlength="300"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info" id="rejectedoverphonedisable" ng-click="MakeApproved('Approved')">Approve</button>
                    <button type="button" class="btn btn-info" ng-click="MakeApproved('Rejected')">Reject</button>
                    <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        debugger
        $("#CSS_Save").hide();
        $("#CSS_Close").hide();
        var BusinessUnit = $("#Product_Type_CODE").val();
        if (BusinessUnit == "SBU8") {
            $("#THDefectprct").css("display", "block");
            $("#THBasicAmount").css("display", "block");
            $("#Defectprctdiv").show();
            //$("#BasicAmount").show();
            $("#BasicAmountdiv").hide();
            $("#Mat_Sup_Det_BU3_Add").prop("disabled", false);
            var table = document.getElementById("Material_Supply_Detail_Table_BU3");
            table.style.backgroundColor = "white";
            //document.getElementById("Mat_Sup_Det_BU3_Add").disabled = false;
        }
        else if (BusinessUnit == "SBU3") {
            $("#THDefectprct").css("display", "none");
            $("#THBasicAmount").css("display", "none");
            $("#Defectprctdiv").hide();
            $("#BasicAmount").hide();
            $("#THBasicAmount").hide();
            $("#BasicAmountdiv").hide();
            var button = document.getElementById("Mat_Sup_Det_BU3_Add");
            button.disabled = true;
            var table = document.getElementById("Material_Supply_Detail_Table_BU3");
            table.style.backgroundColor = "gainsboro";
        }
        //ACSHEETS
        if ($("#Product_CategoryCode").val() == "11") {
            $("#Total_Recovery_Tons").prop("disabled", true);
        }
        //CCSHEETS
        else if ($("#Product_CategoryCode").val() == "14") {
            $("#Total_Recovery_Tons").prop("disabled", false);
        }
    });
    $(window).resize(function () {
        $('.CustomHeight_Section').height($(window).height() - 170);
    });
    $('.CustomHeight_Section').height($(window).trigger('resize'));

    //Date Pickers
    $(function () {

        var ForeignDate = TodayDateTime;

        //alert(ForeignDate);

        ForeignDate = ForeignDate.split('/')[1] + "/" + ForeignDate.split('/')[0] + "/" + ForeignDate.split('/')[2];

        $("#TodayDateInv").val(TodayDateTime);

        $("#BIS_Batch_No").datepicker({
            format: 'ddmmyy',
            autoclose: true
        });
        $("#Complaint_Received_Date").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#Complaint_Registered_Date").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#Complaint_Attended_Date").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#Visited_Date").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#Previous_Visit_Date").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#Investigation_Date").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        //$("#Approval_Date").datepicker({
        //    format: 'dd/mm/yyyy',
        //    autoclose: true
        //});
        $("#Invoice_Date").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#InvDateSupplyTo").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#InvDateSupplyFrom").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#InvoiceDateB").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#InvoiceDateBU3").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#SD_InvoiceDate").datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            endDate: new Date(ForeignDate)
        });
        $("#FormIdentity").bind('change', function () {
            enabledisableFileUpload();
        });
        $("#SelectedComplaintFiles").on('change', function () {
            showComplaintFiles();
        });
        $("#SelectedFiles").on('change', function () {
            enabledisableFileUpload();
        });
        $("#Investigation_Status").on('change', function () {
            enabledisableFileUpload();
        });
        //console.log('InvestigationFilesUploaded', $("ul#InvestigationFilesUploaded li").length)
        if ($("#SelectedFiles").text() != "" || $("ul#InvestigationFilesUploaded li").length > 0) {
            $("#ClickUploadFile").val(1);
            $("#ClickSaveComplaint").val(1);
        }

        //svprasadk 20-05-2020 SBU 1 requirement to add type of complaint start
        //$.ajax({
        //    type: 'POST',
        //    url: '../../ComplaintRegistration/GetTypeofComplaints',
        //    async: true,
        //    success: function (response) {
        //        $("#TYPE_OF_COMPLAINT").empty();

        //        if (response == "FALSE") {

        //        }
        //        else {
        //            response = JSON.parse(response);
        //            var option = "";
        //            option = '<option value="0">Select</option>';
        //            for (var i = 0; i < response.length; i++) {
        //                option += '<option value="' + response[i]["id"] + '">' + response[i]["COMPLAINT_TYPE"] + '</option>';
        //            }
        //            $("#TYPE_OF_COMPLAINT").append(option);
        //        }
        //    },
        //    error: function (xhr, ajaxOptions, thrownError) {
        //    }
        //});
        //svprasadk 20-05-2020 SBU 1 requirement to add type of complaint end
    });



    function InvDateSupplyFromChange() {
        var MyDate = $("#InvDateSupplyFrom").val();

        if (MyDate == "" || MyDate == undefined) {
        }
        else {
            $("#InvDateSupplyTo").datepicker('setStartDate', MyDate);
            $("#InvDateSupplyTo").val("");
        }
        SupplyDatesChange();
    }



    function VisitedDateChange() {
        var MyDate = $("#Visited_Date").val();

        DelayCheckAutoCalcSBU3();

        if (MyDate == "" || MyDate == undefined) {
        }
        else {
            //$("#Previous_Visit_Date").datepicker('setEndDate', MyDate);
            //$("#Previous_Visit_Date").val("");
        }
    }

    function ReceivedDateChange() {
        var RecDate = $("#Complaint_Received_Date").val();
        if (RecDate == "") { }
        else {
            $("#Complaint_Attended_Date").datepicker('setStartDate', RecDate);
            $("#Visited_Date").datepicker('setStartDate', RecDate);
        }
        DelayCheckAutoCalcSBU3();
    }


    //Size Pop up click logic
    function OpenSizePopUpFromSupplyDetails() {
        var TRCode = "";
        var RowCount = 0;

        $("#Supply_Details_Table tbody tr").each(function () {
            RowId = ($(this).attr("id"));
            RowCount = RowCount + 1;
            TRCode = TRCode + "<tr id='SDT_" + RowCount + "' onclick='SizeTableRowClick(this.id)'>";
            TRCode = TRCode + "<td>" + $("#Supply_Details_Table tbody #" + RowId + " td")[1].innerHTML + "</td>";
            TRCode = TRCode + "<td>" + $("#Supply_Details_Table tbody #" + RowId + " td")[2].innerHTML + "</td>";
            TRCode = TRCode + "<td>" + $("#Supply_Details_Table tbody #" + RowId + " td")[3].innerHTML + "</td>";
            TRCode = TRCode + "</tr>";
        });

        $("#SizeFromSDtoBIS tbody").empty();
        $("#SizeFromSDtoBIS tbody").remove();
        $("#SizeFromSDtoBIS").append("<tbody>" + TRCode + "</tbody>");
        $("#SizeFromSDtoBIS").dataTable({
            "bDestroy": true,
            'scroll': true,
            "paging": false,
            "ordering": false,
            "info": false
        });
        $("#BIS_SizePopUp").modal('show');
    }


    //Size Pop up click logic
    function OpenSizePopUpFromSupplyDetailsOne() {
        var TRCode = "";
        var RowCount = 0;

        $("#Supply_Details_Table tbody tr").each(function () {
            RowId = ($(this).attr("id"));
            RowCount = RowCount + 1;
            TRCode = TRCode + "<tr id='SDT_" + RowCount + "' onclick='SizeTableRowClickOne(this.id)'>";
            TRCode = TRCode + "<td>" + $("#Supply_Details_Table tbody #" + RowId + " td")[1].innerHTML + "</td>";
            TRCode = TRCode + "<td>" + $("#Supply_Details_Table tbody #" + RowId + " td")[2].innerHTML + "</td>";
            TRCode = TRCode + "<td>" + $("#Supply_Details_Table tbody #" + RowId + " td")[3].innerHTML + "</td>";
            TRCode = TRCode + "</tr>";
        });

        $("#SizeFromSDtoBIS tbody").empty();
        $("#SizeFromSDtoBIS tbody").remove();
        $("#SizeFromSDtoBIS").append("<tbody>" + TRCode + "</tbody>");
        $("#SizeFromSDtoBIS").dataTable({
            "bDestroy": true,
            'scroll': true,
            "paging": false,
            "ordering": false,
            "info": false
        });
        $("#BIS_SizePopUp").modal('show');

    }


    //Size Pop Up Table Row Click
    function SizeTableRowClick(RowId) {
        try {

            $("#BIS_Size").val($("#SizeFromSDtoBIS tbody #" + RowId + " td")[1].innerHTML);
            $("#BIS_Product_Name").val($("#SizeFromSDtoBIS tbody #" + RowId + " td")[0].innerHTML);
            $("#BIS_SizePopUp").modal('hide');

        }
        catch (e) {
            alert("Error :SizeTableRowClick :" + e);
        }
    }


    //Size Pop Up Table Row Click
    function SizeTableRowClickOne(RowId) {
        try {

            $("#BISP_Size").val($("#SizeFromSDtoBIS tbody #" + RowId + " td")[1].innerHTML);
            $("#BISP_Product").val($("#SizeFromSDtoBIS tbody #" + RowId + " td")[0].innerHTML);
            $("#BIS_SizePopUp").modal('hide');

        }
        catch (e) {
            alert("Error :SizeTableRowClick :" + e);
        }
    }


    //Breakage Inspection Sheet go click on entering product and recovery details
    function BI_Sheet_GO_Click() {
        try {

            var BIS_Recovery_Size = $("#BIS_Recovery_Size").val();
            var BIS_Size = $("#BIS_Size").val();
            var BIS_Product_Name = $("#BIS_Product_Name").val();
            var batchno = $("#batchno").val();
            var BIS_Batch_No = $("#BIS_Batch_No").val();
            var BIS_Defect_Type = $("#BIS_Defect_Type").val();
            var BIS_Recovery_GrossWeight = $("#BIS_Recovery_GrossWeight").val();
            var BIS_Recovery = $("#BIS_Recovery").val();
            var BIS_Recovery_Product_Name = $("#BIS_Recovery_Product_Name").val();
            var BIS_Recovery_ID = $("#BIS_Recovery_ID").val();
            var BIS_Recovery_CODE = $("#BIS_Recovery_CODE").val();
            var BIS_No_of_Sheets = $("#BIS_No_of_Sheets").val();
            var BIS_Defect_Type_CODE = $("#BIS_Defect_Type_CODE").val();
            var BIS_Defect_Type_ID = $("#BIS_Defect_Type_ID").val();

            var Flag = 0;



            if (BIS_Recovery_Size == "") {
                Flag = Flag + 1;
                $("#BIS_Recovery_Size").css("border-color", "red");
            }
            else {
                $("#BIS_Recovery_Size").css("border-color", "#d2d6de");
            }
            if (BIS_Size == "") {
                Flag = Flag + 1;
                $("#BIS_Size").css("border-color", "red");
            }
            else {
                $("#BIS_Size").css("border-color", "#d2d6de");
            }
            if (BIS_Product_Name == "") {
                Flag = Flag + 1;
                $("#BIS_Product_Name").css("border-color", "red");
            }
            else {
                $("#BIS_Product_Name").css("border-color", "#d2d6de");
            }
            if (BIS_Batch_No == "") {
                Flag = Flag + 1;
                $("#BIS_Batch_No").css("border-color", "red");
            }
            else {
                $("#BIS_Batch_No").css("border-color", "#d2d6de");
            }
            if (BIS_Defect_Type == "") {
                Flag = Flag + 1;
                $("#BIS_Defect_Type").css("border-color", "red");
            }
            else {
                $("#BIS_Defect_Type").css("border-color", "#d2d6de");
            }
            if (BIS_Recovery == "") {
                Flag = Flag + 1;
                $("#BIS_Recovery").css("border-color", "red");
            }
            else {
                $("#BIS_Recovery").css("border-color", "#d2d6de");
            }
            if (BIS_No_of_Sheets == "" || isNaN(BIS_No_of_Sheets) || (parseFloat(BIS_No_of_Sheets) != parseInt(BIS_No_of_Sheets))) {
                Flag = Flag + 1;
                $("#BIS_No_of_Sheets").css("border-color", "red");
            }
            else {
                $("#BIS_No_of_Sheets").css("border-color", "#d2d6de");
            }

            if (Flag > 0) {
                return;
            }
            else {

                var TRCode = "";


                for (var i = 1; i <= BIS_No_of_Sheets; i++) {


                    TRCode = TRCode + "<tr id='TRC_" + i + "'>";

                    TRCode = TRCode + "<td><input type='text' id='SLNO_" + i + "' value='" + i + "' /></td>";
                    TRCode = TRCode + "<td><input type='text' id='SIZE_" + i + "' value='" + BIS_Size + "' /></td>";
                    TRCode = TRCode + "<td><input type='text' id='ProName_" + i + "' value='" + BIS_Product_Name + "' /></td>";
                    TRCode = TRCode + "<td><input type='text' id='BatchNo_" + i + "' value='" + (batchno + BIS_Batch_No) + "' /></td>";

                    TRCode = TRCode + "<td><input type='text' id='DefectType_" + i + "' value='" + BIS_Defect_Type + "' /></td>";
                    TRCode = TRCode + "<td><input type='text' id='Recovery_" + i + "' value='" + BIS_Recovery_Size + "' /></td>";

                    TRCode = TRCode + "<td><input type='text' id='RecProdName_" + i + "' value='" + BIS_Recovery_Product_Name + "' /></td>";


                    TRCode = TRCode + "<td style='display:none;'><input type='text' id='DefectId_" + i + "' style='' value='" + BIS_Defect_Type_ID + "' /></td>";
                    TRCode = TRCode + "<td style='display:none;'><input type='text' id='DefectCode_" + i + "' style='' value='" + BIS_Defect_Type_CODE + "' /></td>";
                    TRCode = TRCode + "<td style='display:none;'><input type='text' id='RecoveryProId_" + i + "' style='' value='" + BIS_Recovery_ID + "' /></td>";
                    TRCode = TRCode + "<td style='display:none;'><input type='text' id='RecoveryProCode_" + i + "' style='' value='" + BIS_Recovery_CODE + "' /></td>";
                    TRCode = TRCode + "<td style='display:none;'><input type='text' id='GrossWt_" + i + "' style='' value='" + BIS_Recovery_GrossWeight + "' /></td>";

                    TRCode = TRCode + "</tr>";

                }

                $("#BreakageInspectionSheetTable tbody").empty();
                $("#BreakageInspectionSheetTable tbody").remove();
                //alert("TRCode :" + TRCode);
                $("#BreakageInspectionSheetTable").append("<tbody>" + TRCode + "</tbody>");
                //$("#BreakageInspectionSheetTable").dataTable({
                //    "bDestroy": true,
                //    'scroll': true,
                //    "paging": false,
                //    "ordering": false,
                //    "info": false
                //});
                $("#BreakageInspectionSheetPopUp").modal('show');

            }
            //$("#BreakageInspectionSheetPopUp").modal("hide");

        }
        catch (e) {
            alert("Error : BI_Sheet_GO_Click : " + e);
        }
    }


    //Save logic for Breakage Inspection Sheet Save function
    function BISP_PopUp_SaveClick() {

        try {
            var BISP_id = $("#Breakage_Inspection_Sheet_Table tbody tr").length;
            var RowCount = $("#BreakageInspectionSheetTable tbody tr").length;

            var TRCode = "";

            for (var i = 1; i <= RowCount; i++) {
                TRCode = TRCode + "<tr class='MousePointer' id='BISP_" + (BISP_id + i) + "' onclick='EditBISP(this.id)'><td>" + (BISP_id + i) + "</td>";

                TRCode = TRCode + "<td>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #ProName_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #SIZE_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #BatchNo_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #DefectType_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #RecProdName_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #Recovery_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td style='display:none'>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #DefectId_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td style='display:none'>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #DefectCode_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td style='display:none'>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #RecoveryProId_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td style='display:none'>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #RecoveryProCode_" + i + "").val() + "</td>";
                TRCode = TRCode + "<td style='display:none'>" + $("#BreakageInspectionSheetTable tbody #TRC_" + i + " #GrossWt_" + i + "").val() + "</td>";

                TRCode = TRCode + "</tr>";
            }

            $("#Breakage_Inspection_Sheet_Table tbody").append(TRCode);

            $("#BreakageInspectionSheetPopUp").modal("hide");

            BreakageInspectionSheetAdd();

        }
        catch (e) {
            alert("Error : BISP_PopUp_SaveClick : " + e);
        }

    }



    function BreakageInspectionSheetAdd() {

        try {

            var BIS_Sum = 0;
            var RecoveryData = 0;

            var Size_Sum = 0;
            var SizeData = 0;


            console.clear();

            $("#Breakage_Inspection_Sheet_Table tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                RecoveryData = $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[2].innerHTML;
                SizeData = $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[6].innerHTML;

                if (RecoveryData == "" || isNaN(RecoveryData)) {
                    console.log("RowId : " + RowId + "\t" + "RecoveryData : " + RecoveryData);
                }
                else {
                    BIS_Sum = parseFloat(RecoveryData) + parseFloat(BIS_Sum);
                }


                if (SizeData == "" || isNaN(SizeData)) {
                    console.log("RowId : " + RowId + "\t" + "SizeData : " + SizeData);
                }
                else {
                    Size_Sum = parseFloat(SizeData) + parseFloat(Size_Sum);
                }
            });

            BIS_Sum = Math.round(BIS_Sum * 1000) / 1000;
            Size_Sum = Math.round(Size_Sum * 1000) / 1000;

            var NetLoss = BIS_Sum - Size_Sum;
            NetLoss = Math.round(NetLoss * 1000) / 1000;

            $("#Total_Breakage_Qty_Mtrs").val(BIS_Sum);
            $("#Total_Recovery_Mtrs").val(Size_Sum);
            $("#Net_Loss_Mtrs").val(NetLoss);

            BIS_Sum = (parseFloat(BIS_Sum) * (0.1269));
            Size_Sum = (parseFloat(Size_Sum) * (0.1269));
            NetLoss = (parseFloat(NetLoss) * (0.1269));

            BIS_Sum = Math.round(BIS_Sum * 1000) / 1000;
            Size_Sum = Math.round(Size_Sum * 1000) / 1000;
            NetLoss = Math.round(NetLoss * 1000) / 1000;

            $("#Total_Breakage_Qty_Tons").val(BIS_Sum);
            $("#Total_Recovery_Tons").val(Size_Sum);
            $("#Net_Loss_Tons").val(NetLoss);

        }
        catch (e) {
            alert("Error : BreakageInspectionSheetAdd : " + e);
        }

    }




    function Complaint_Attended_DateChanged() {
        var Division = $("#Product_CategoryCode").val();
        if (($("#Product_Type").val() == "SBU1") || ($("#Product_Type").val() == "SBU2") || ($("#Product_Type").val() == "SBU3" && Division == "36")) {
            var Complaint_Attended_Date = $("#Complaint_Attended_Date").val();
            if (Complaint_Attended_Date == "") {
                $("#Visited_Date").val("");
            }
            else {
                $("#Visited_Date").val(Complaint_Attended_Date);
                $("#Visited_Date").datepicker("setDate", Complaint_Attended_Date);
            }
        }
        else if ($("#Product_Type").val() == "SBU3") {

        }
    }






    /*       Material Supply Detail       */

    /*
    The Below functions are for Open Save Edit Delete operations on the Material Supply Details table
   */

    function OpenMSDModel() {
        try {

            var CNO = $("#Complaint_No").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }

            if (($("#Product_Type").val()) == "SBU1") {
                if (($("#Net_Loss_Mtrs").val()) == "") {
                    alert("Please fill Supply Details");
                    return;
                }
            }

            $("#MSD_id").val("");

            $("#Material_Belongs_To").val("");
            $("#Product_Supplied_From").val("");
            $("#MSD_Name").val("");

            $("#MSD_UOM").val("");
            $("#MSD_Supply_Qty").val("");
            $("#MSD_Breakage_Qty").val("");
            $("#MSD_Net_Loss_Qty").val("");


            $("#Material_Belongs_TO_ID").val("");
            $("#Material_Belongs_TO_CODE").val("");

            $("#Product_Supplied_From_ID").val("");
            $("#Product_Supplied_From_CODE").val("");

            $("#MSD_Name_ID").val("");
            $("#MSD_Name_CODE").val("");


            $("#MSD_Delete").hide();
            $("#MSD_Save").text("Save");

            $("#MaterialSupplyDetailModal").modal('show');
        }
        catch (e) {
            alert("Error : MaterialSupplyDetailModal :" + e);
        }
    }


    function SaveMSDData() {
        try {
            debugger
            var MSD_id = $("#MSD_id").val();

            var Material_Belongs_To = $("#Material_Belongs_To").val();
            var Product_Supplied_From = $("#Product_Supplied_From").val();
            var MSD_Name = $("#MSD_Name").val();

            var MSD_UOM = $("#MSD_UOM").val();
            var MSD_Supply_Qty = $("#MSD_Supply_Qty").val();
            var MSD_Breakage_Qty = $("#MSD_Breakage_Qty").val();
            var MSD_Net_Loss_Qty = $("#MSD_Net_Loss_Qty").val();

            var Material_Belongs_TO_ID = $("#Material_Belongs_TO_ID").val();
            var Material_Belongs_TO_CODE = $("#Material_Belongs_TO_CODE").val();
            var Product_Supplied_From_ID = $("#Product_Supplied_From_ID").val();
            var Product_Supplied_From_CODE = $("#Product_Supplied_From_CODE").val();


            var MSD_Name_ID = $("#MSD_Name_ID").val();
            var MSD_Name_CODE = $("#MSD_Name_CODE").val();


            var Flag = 0;

            if (Flag > 0) {
                return;
            }
            else {
                var TRCode = "";

                if (Material_Belongs_To == "" && Product_Supplied_From == "" && MSD_Name == "") {
                    return;
                }
                else {

                    TRCode = TRCode + "<td>" + Material_Belongs_To + "</td>";
                    TRCode = TRCode + "<td>" + Product_Supplied_From + "</td>";
                    TRCode = TRCode + "<td>" + MSD_Name + "</td>";
                    TRCode = TRCode + "<td>" + MSD_UOM + "</td>";
                    TRCode = TRCode + "<td>" + MSD_Supply_Qty + "</td>";
                    TRCode = TRCode + "<td>" + MSD_Breakage_Qty + "</td>";
                    TRCode = TRCode + "<td>" + MSD_Net_Loss_Qty + "</td>";

                    TRCode = TRCode + "<td style='display:none;'>" + Material_Belongs_TO_ID + "</td>";
                    TRCode = TRCode + "<td style='display:none;'>" + Material_Belongs_TO_CODE + "</td>";
                    TRCode = TRCode + "<td style='display:none;'>" + Product_Supplied_From_ID + "</td>";
                    TRCode = TRCode + "<td style='display:none;'>" + Product_Supplied_From_CODE + "</td>";
                    TRCode = TRCode + "<td style='display:none;'>" + MSD_Name_ID + "</td>";
                    TRCode = TRCode + "<td style='display:none;'>" + MSD_Name_CODE + "</td>";


                    if (MSD_id == "") {
                        MSD_id = $("#Material_Supply_Detail_Table tbody tr").length + 1;

                        TRCode = "<tr class='MousePointer' id='MSD_" + MSD_id + "' onclick='EditMSD(this.id)'><td>" + MSD_id + "</td>" + TRCode + "</tr>";
                        $("#Material_Supply_Detail_Table tbody").append(TRCode);
                    }
                    else {
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[0].innerHTML = MSD_id;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[1].innerHTML = Material_Belongs_To;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[2].innerHTML = Product_Supplied_From;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[3].innerHTML = MSD_Name;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[4].innerHTML = MSD_UOM;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[5].innerHTML = MSD_Supply_Qty;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[6].innerHTML = MSD_Breakage_Qty;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[7].innerHTML = MSD_Net_Loss_Qty;


                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[8].innerHTML = Material_Belongs_TO_ID;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[9].innerHTML = Material_Belongs_TO_CODE;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[10].innerHTML = Product_Supplied_From_ID;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[11].innerHTML = Product_Supplied_From_CODE;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[12].innerHTML = MSD_Name_ID;
                        $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + " td")[13].innerHTML = MSD_Name_CODE;

                    }


                    var BusinessUnit = $("#Product_Type_CODE").val();

                    var SupplyQty = "";
                    var BreakageQty = "";
                    var NetLossQty = "";

                    if (BusinessUnit == "" || BusinessUnit == "SBU2" || BusinessUnit == "SBU3") {
                        //return;
                    }
                    else if (BusinessUnit == "SBU1") {
                        var RowId = 0;
                        var MSDRowNetLoss = 0;
                        var MSDTotalNetLoss = 0;

                        var Validate = "TRUE";

                        var TotalSupply = 0;
                        var TotalBreakage = 0;
                        var TotalNetLoss = 0;

                        $("#Material_Supply_Detail_Table tbody tr").each(function () {
                            RowId = ($(this).attr("id"));

                            SupplyQty = $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[5].innerHTML;
                            BreakageQty = $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[6].innerHTML;
                            NetLossQty = $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[7].innerHTML;

                            if (SupplyQty == "" || SupplyQty == null || SupplyQty == undefined || isNaN(SupplyQty)) {
                                Validate = "FALSE";
                            }
                            else {
                                TotalSupply = parseFloat(TotalSupply) + parseFloat(SupplyQty);
                            }
                            if (BreakageQty == "" || BreakageQty == null || BreakageQty == undefined || isNaN(BreakageQty)) {
                                Validate = "FALSE";
                            }
                            else {
                                TotalBreakage = parseFloat(TotalBreakage) + parseFloat(BreakageQty);
                            }
                            if (NetLossQty == "" || NetLossQty == null || NetLossQty == undefined || isNaN(NetLossQty)) {
                                Validate = "FALSE";
                            }
                            else {
                                TotalNetLoss = parseFloat(TotalNetLoss) + parseFloat(NetLossQty);
                            }
                        });

                        if (Validate == "TRUE") {

                            var BoxSupply = $("#Total_Supply_Qty_Tons").val();
                            var BoxBreakg = $("#Total_Breakage_Qty_Tons").val();
                            var BoxNetLoss = $("#Net_Loss_Tons").val();

                            if (BoxSupply >= TotalSupply) { }
                            else {
                                alert("Plant Wise Supply does not Match with the Total Supply");
                                return;
                            }
                            if (BoxBreakg >= TotalBreakage) { }
                            else {
                                alert("Plant Wise Breakage does not Match with the Total Breakage");
                                return;
                            }
                            if (BoxNetLoss >= TotalNetLoss) { }
                            else {
                                alert("Plant Wise Supply does not Match with the Total Supply");
                                return;
                            }

                        }
                    }



                    $("#MSD_id").val("");
                    $("#Material_Belongs_To").val("");
                    $("#Product_Supplied_From").val("");
                    $("#MSD_Name").val("");
                    $("#MSD_UOM").val("");
                    $("#MSD_Supply_Qty").val("");
                    $("#MSD_Breakage_Qty").val("");
                    $("#MSD_Net_Loss_Qty").val("");

                    $("#Material_Belongs_TO_ID").val("");
                    $("#Material_Belongs_TO_CODE").val("");

                    $("#Product_Supplied_From_ID").val("");
                    $("#Product_Supplied_From_CODE").val("");

                    $("#MSD_Name_ID").val("");
                    $("#MSD_Name_CODE").val("");

                    $("#MaterialSupplyDetailModal").modal("hide");
                    SaveDataToServerInvestigation('MaterialSupplyDetail');

                }
            }
            //OpenMSDModel();
        }
        catch (e) {
            alert("Error : SaveMSDData :" + e);
        }
    }


    function EditMSD(RowId) {
        try {
            var IS = $("#Investigation_Status").val();
            var UserTypeCode = $("#SessionUserTypeID").val();
            if (IS == "Approved" || IS == "Rejected") {
                if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
                }
                else {
                    return;
                }
            }

            if (($("#Product_Type").val()) == "SBU1") {
                if (($("#Net_Loss_Mtrs").val()) == "") {
                    alert("Please fill Supply Details");
                    return;
                }
            }


            $("#MSD_id").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[0].innerHTML);
            $("#Material_Belongs_To").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[1].innerHTML);
            $("#Product_Supplied_From").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[2].innerHTML);
            $("#MSD_Name").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[3].innerHTML);

            $("#MSD_UOM").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[4].innerHTML);
            $("#MSD_Supply_Qty").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[5].innerHTML);
            $("#MSD_Breakage_Qty").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[6].innerHTML);
            $("#MSD_Net_Loss_Qty").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[7].innerHTML);


            $("#Material_Belongs_TO_ID").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[8].innerHTML);
            $("#Material_Belongs_TO_CODE").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[9].innerHTML);

            $("#Product_Supplied_From_ID").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[10].innerHTML);
            $("#Product_Supplied_From_CODE").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[11].innerHTML);

            $("#MSD_Name_ID").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[12].innerHTML);
            $("#MSD_Name_CODE").val($("#Material_Supply_Detail_Table tbody #" + RowId + " td")[13].innerHTML);


            $("#MaterialSupplyDetailModal").modal('show');
            $("#MSD_Delete").show();
            $("#MSD_Save").text("Update");

        }
        catch (e) {
            alert("Error : EditMSD : " + e);
        }

    }


    function DeleteMSD() {
        try {
            var MSD_id = $("#MSD_id").val();

            $("#Material_Supply_Detail_Table tbody #MSD_" + MSD_id + "").remove();

            $("#MSD_id").val("");
            $("#Material_Belongs_To").val("");
            $("#Product_Supplied_From").val("");
            $("#MSD_Name").val("");
            $("#MSD_UOM").val("");
            $("#MSD_Supply_Qty").val("");
            $("#MSD_Breakage_Qty").val("");
            $("#MSD_Net_Loss_Qty").val("");

            $("#Material_Belongs_TO_ID").val("");
            $("#Material_Belongs_TO_CODE").val("");

            $("#Product_Supplied_From_ID").val("");
            $("#Product_Supplied_From_CODE").val("");

            $("#MSD_Name_ID").val("");
            $("#MSD_Name_CODE").val("");

            $("#MaterialSupplyDetailModal").modal("hide");

            var i = 1;

            $("#Material_Supply_Detail_Table tbody tr").each(function () {
                $(this).attr("id", "MSD_" + i);
                $("#Material_Supply_Detail_Table tbody #MSD_" + i + " td")[0].innerHTML = i;
                i = i + 1;
            });

            $("#MaterialSupplyDetailModal").modal("hide");
            SaveDataToServerInvestigation('MaterialSupplyDetail');

        }
        catch (e) {
            alert("Error : DeleteMSD : " + e);
        }

    }

    /*       Material Supply Detail       */



    /*      MSD BU3     */

    function OpenMSD_BU3Model() {
        try {
            debugger
            var CNO = $("#Complaint_No").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }
            var Division = $("#Product_CategoryCode").val();
            if (($("#Product_Type").val() == "SBU3" && Division != "36") || ($("#Product_Type_CODE").val() == "SBU8")) {
            }
            else {
                return;
            }

            $("#BU3MSD_id").val("");

            $("#BU3MSD_ProductCode").val("");
            $("#BU3MSD_ProductName").val("");

            $("#BU3Material_Belongs_To_Name").val("");
            $("#BU3Material_Belongs_TO_CODE").val("");

            $("#BU3Product_Supplied_From_Name").val("");
            $("#BU3Product_Supplied_From_CODE").val("");

            $("#BU3MSD_Name_Name").val("");
            $("#BU3MSD_Name_CODE").val("");

            $("#BU3MSD_UOM").val("EA");
            $("#BU3MSD_Supply_Qty").val("");
            $("#BU3MSD_Defect_Qty").val("");
            $("#BU3MSD_Actual_Defect_Qty").val("");


            $("#BU3MSD_Delete").hide();
            $("#BU3MSD_Save").text("Save");

            $("#MaterialSupplyDetailModalBU3").modal('show');
        }
        catch (e) {
            alert("Error : OpenBU3 :" + e);
        }
    }


    function SaveMSDBU3Data() {

        var MSD_id = $("#BU3MSD_id").val();

        var ProductCode = $("#BU3MSD_ProductCode").val();
        var ProductName = $("#BU3MSD_ProductName").val();

        var MatBelToName = $("#BU3Material_Belongs_To_Name").val();
        var MatBelToCode = $("#BU3Material_Belongs_TO_CODE").val();

        var ProSupFromName = $("#BU3Product_Supplied_From_Name").val();
        var ProSupFromCode = $("#BU3Product_Supplied_From_CODE").val();

        var NameName = $("#BU3MSD_Name_Name").val();
        var NameCode = $("#BU3MSD_Name_CODE").val();

        var MSD_UOM = $("#BU3MSD_UOM").val();
        var SupplyQty = $("#BU3MSD_Supply_Qty").val();
        var DefectQty = $("#BU3MSD_Defect_Qty").val();
        var ActDftQty = $("#BU3MSD_Actual_Defect_Qty").val();

        MSD_UOM = "EA";

        var Flag = 0;

        if (ProductCode == "") {
            Flag = Flag + 1;
            $("#BU3MSD_ProductCode").css("border-color", "red");
        }
        else {
            $("#BU3MSD_ProductCode").css("border-color", "#d2d6de");
        }

        if (MatBelToName == "") {
            Flag = Flag + 1;
            $("#BU3Material_Belongs_To_Name").css("border-color", "red");
        }
        else {
            $("#BU3Material_Belongs_To_Name").css("border-color", "#d2d6de");
        }

        if (ProSupFromName == "") {
            Flag = Flag + 1;
            $("#BU3Product_Supplied_From_Name").css("border-color", "red");
        }
        else {
            $("#BU3Product_Supplied_From_Name").css("border-color", "#d2d6de");
        }

        if (NameName == "") {
            Flag = Flag + 1;
            $("#BU3MSD_Name_Name").css("border-color", "red");
        }
        else {
            $("#BU3MSD_Name_Name").css("border-color", "#d2d6de");
        }

        if (MSD_UOM == "") {
            Flag = Flag + 1;
            $("#BU3MSD_UOM").css("border-color", "red");
        }
        else {
            $("#BU3MSD_UOM").css("border-color", "#d2d6de");
        }

        if (SupplyQty == "") {
            Flag = Flag + 1;
            $("#BU3MSD_Supply_Qty").css("border-color", "red");
        }
        else {
            $("#BU3MSD_Supply_Qty").css("border-color", "#d2d6de");
        }

        if (DefectQty == "") {
            Flag = Flag + 1;
            $("#BU3MSD_Defect_Qty").css("border-color", "red");
        }
        else {
            $("#BU3MSD_Defect_Qty").css("border-color", "#d2d6de");
        }


        if (ActDftQty == "") {
            Flag = Flag + 1;
            $("#BU3MSD_Actual_Defect_Qty").css("border-color", "red");
        }
        else {
            $("#BU3MSD_Actual_Defect_Qty").css("border-color", "#d2d6de");
        }


        if (Flag > 0) {
            return;
        }
        else {


            if (isNaN(SupplyQty) || isNaN(DefectQty) || isNaN(ActDftQty)) {
                alert("Enter valid numbers in Supply, Defect and Actual Defect Quantities");
                return;
            }
            else {
                SupplyQty = parseInt(SupplyQty);
                DefectQty = parseInt(DefectQty);
                ActDftQty = parseInt(ActDftQty);

                if (parseInt(SupplyQty) < parseInt(DefectQty)) {
                    alert("Defect Quantity cannot be morethan Supply Quantity");
                    return;
                }
                if (parseInt(SupplyQty) < parseInt(ActDftQty)) {
                    alert("Actual Defect Quantity cannot be morethan Supply Quantity");
                    return;
                }
            }



            if (MSD_id == "") {

                MSD_id = $("#Material_Supply_Detail_Table_BU3 tbody tr").length + 1;
                var TRCode = "";

                TRCode = TRCode + "<td>" + ProductCode + "</td>";
                TRCode = TRCode + "<td>" + ProductName + "</td>";
                TRCode = TRCode + "<td>" + MatBelToName + "</td>";
                TRCode = TRCode + "<td>" + ProSupFromName + "</td>";

                TRCode = TRCode + "<td>" + NameName + "</td>";
                TRCode = TRCode + "<td>" + MSD_UOM + "</td>";
                TRCode = TRCode + "<td>" + SupplyQty + "</td>";
                TRCode = TRCode + "<td>" + DefectQty + "</td>";

                TRCode = TRCode + "<td>" + ActDftQty + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + MatBelToCode + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + ProSupFromCode + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + NameCode + "</td>";
                //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .

                //TRCode = "<tr class='MousePointer' id='BU3MSD_" + MSD_id + "' onclick='EditMSDBU3(this.id)'><td>" + MSD_id + "</td>" + TRCode + "</tr>";
                TRCode = "<tr class='MousePointer' id='BU3MSD_" + MSD_id + "'><td>" + MSD_id + "</td>" + TRCode + "</tr>";
                $("#Material_Supply_Detail_Table_BU3 tbody").append(TRCode);

            }
            else {

                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[0].innerHTML = MSD_id;

                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[1].innerHTML = ProductCode;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[2].innerHTML = ProductName;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[3].innerHTML = MatBelToName;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[4].innerHTML = ProSupFromName;

                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[5].innerHTML = NameName;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[6].innerHTML = MSD_UOM;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[7].innerHTML = SupplyQty;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[8].innerHTML = DefectQty;

                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[9].innerHTML = ActDftQty;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[10].innerHTML = MatBelToCode;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[11].innerHTML = ProSupFromCode;
                $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + " td")[12].innerHTML = NameCode;

            }

            $("#BU3MSD_id").val("");

            $("#BU3MSD_ProductCode").val("");
            $("#BU3MSD_ProductName").val("");

            $("#BU3Material_Belongs_To_Name").val("");
            $("#BU3Material_Belongs_TO_CODE").val("");

            $("#BU3Product_Supplied_From_Name").val("");
            $("#BU3Product_Supplied_From_CODE").val("");

            $("#BU3MSD_Name_Name").val("");
            $("#BU3MSD_Name_CODE").val("");

            $("#BU3MSD_UOM").val("");
            $("#BU3MSD_Supply_Qty").val("");
            $("#BU3MSD_Defect_Qty").val("");
            $("#BU3MSD_Actual_Defect_Qty").val("");

            SaveDataToServerInvestigation('MaterialSupplyDetail');
            $("#MaterialSupplyDetailModalBU3").modal("hide");

        }

    }


    function EditMSDBU3(RowId) {
        try {
            debugger
            var IS = $("#Investigation_Status").val();
            var UserTypeCode = $("#SessionUserTypeID").val();
            if (IS == "Approved" || IS == "Rejected") {
                if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
                }
                else {
                    return;
                }
            }


            $("#BU3MSD_id").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[0].innerHTML);

            $("#BU3MSD_ProductCode").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[1].innerHTML);
            $("#BU3MSD_ProductName").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[2].innerHTML);

            $("#BU3Material_Belongs_To_Name").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[3].innerHTML);
            $("#BU3Material_Belongs_TO_CODE").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[10].innerHTML);

            $("#BU3Product_Supplied_From_Name").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[4].innerHTML);
            $("#BU3Product_Supplied_From_CODE").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[11].innerHTML);

            $("#BU3MSD_Name_Name").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[5].innerHTML);
            $("#BU3MSD_Name_CODE").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[12].innerHTML);

            $("#BU3MSD_UOM").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[6].innerHTML);
            $("#BU3MSD_Supply_Qty").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[7].innerHTML);
            $("#BU3MSD_Defect_Qty").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[8].innerHTML);
            $("#BU3MSD_Actual_Defect_Qty").val($("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[9].innerHTML);


            $("#MaterialSupplyDetailModalBU3").modal('show');
            $("#BU3MSD_Delete").show();
            $("#BU3MSD_Save").text("Update");

        }
        catch (e) {
            alert("Error : EditMSD : " + e);
        }

    }


    function DeleteMSDBU3() {
        var MSD_id = $("#BU3MSD_id").val();

        $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + MSD_id + "").remove();

        $("#BU3MSD_id").val();

        $("#BU3MSD_id").val("");

        $("#BU3MSD_ProductCode").val("");
        $("#BU3MSD_ProductName").val("");

        $("#BU3Material_Belongs_To_Name").val("");
        $("#BU3Material_Belongs_TO_CODE").val("");

        $("#BU3Product_Supplied_From_Name").val("");
        $("#BU3Product_Supplied_From_CODE").val("");

        $("#BU3MSD_Name_Name").val("");
        $("#BU3MSD_Name_CODE").val("");

        $("#BU3MSD_UOM").val("");
        $("#BU3MSD_Supply_Qty").val("");
        $("#BU3MSD_Defect_Qty").val("");
        $("#BU3MSD_Actual_Defect_Qty").val("");



        var i = 1;

        $("#Material_Supply_Detail_Table_BU3 tbody tr").each(function () {
            $(this).attr("id", "BU3MSD_" + i);
            $("#Material_Supply_Detail_Table_BU3 tbody #BU3MSD_" + i + " td")[0].innerHTML = i;
            i = i + 1;
        });

        $("#MaterialSupplyDetailModalBU3").modal("hide");
        SaveDataToServerInvestigation('MaterialSupplyDetail');

    }

    /*      MSD BU3     */


    /*       Invoice List       */
    /*
    The Below functions are for Open Save Edit Delete operations on the Invoice List table
    */

    function Invoice_List_Add() {
        try {

            var CNO = $("#Complaint_No").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }

            $("#InvList_id").val("");
            $("#Invoice_No").val("");
            $("#Invoice_Date").val("");
            $("#Inv_List_Remarks").val("");


            $("#InvList_Delete").hide();
            $("#InvList_Save").text("Save");
            $("#Invoice_ListModal").modal('show');
        }
        catch (e) {
            alert("Error : Invoice_List_Add :" + e);
        }
    }


    function SaveInvList() {
        try {
            var InvList_id = $("#InvList_id").val();
            var Invoice_No = $("#Invoice_No").val();
            var Invoice_Date = $("#Invoice_Date").val();
            var Inv_List_Remarks = $("#Inv_List_Remarks").val();

            var Flag = 0;

            if (Invoice_No == "") {
                Flag = Flag + 1;
                $("#Invoice_No").css("border-color", "red");
            }
            else {
                $("#Invoice_No").css("border-color", "#d2d6de");
            }
            if (Invoice_Date == "") {
                Flag = Flag + 1;
                $("#Invoice_Date").css("border-color", "red");
            }
            else {
                $("#Invoice_Date").css("border-color", "#d2d6de");
            }

            if (Flag > 0) {
                return;
            }
            else {

                if (Invoice_No == "") {
                }
                else if (Invoice_No.length == 10) {
                }
                else {
                    alert("Invalid Invoice Number");
                    return
                }



                var TRCode = "";

                TRCode = TRCode + "<td>" + Invoice_No + "</td>";
                TRCode = TRCode + "<td>" + Invoice_Date + "</td>";
                TRCode = TRCode + "<td>" + Inv_List_Remarks + "</td>";

                if (InvList_id == "") {
                    InvList_id = $("#Invoice_List_Table tbody tr").length + 1;

                    TRCode = "<tr class='MousePointer' id='IL_" + InvList_id + "' onclick='EditInvList(this.id)'><td>" + InvList_id + "</td>" + TRCode + "</tr>";
                    $("#Invoice_List_Table tbody").append(TRCode);
                }
                else {
                    $("#Invoice_List_Table tbody #IL_" + InvList_id + " td")[0].innerHTML = InvList_id;
                    $("#Invoice_List_Table tbody #IL_" + InvList_id + " td")[1].innerHTML = Invoice_No;
                    $("#Invoice_List_Table tbody #IL_" + InvList_id + " td")[2].innerHTML = Invoice_Date;
                    $("#Invoice_List_Table tbody #IL_" + InvList_id + " td")[3].innerHTML = Inv_List_Remarks;
                }

                $("#InvList_id").val("");
                $("#Invoice_No").val("");
                $("#Invoice_Date").val("");
                $("#Inv_List_Remarks").val("");

                $("#Invoice_ListModal").modal("hide");
                SaveDataToServerInvestigation('Invoice_List');

            }
            InvoiceBasedFun();
            //Invoice_List_Add();
        }
        catch (e) {
            alert("Error : SaveInvList :" + e);
        }
    }


    function EditInvList(RowId) {
        try {
            var IS = $("#Investigation_Status").val();
            var UserTypeCode = $("#SessionUserTypeID").val();
            if (IS == "Approved" || IS == "Rejected") {
                if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
                }
                else {
                    return;
                }
            }

            $("#InvList_id").val($("#Invoice_List_Table tbody #" + RowId + " td")[0].innerHTML);
            $("#Invoice_No").val($("#Invoice_List_Table tbody #" + RowId + " td")[1].innerHTML);
            $("#Invoice_Date").val($("#Invoice_List_Table tbody #" + RowId + " td")[2].innerHTML);
            $("#Inv_List_Remarks").val($("#Invoice_List_Table tbody #" + RowId + " td")[3].innerHTML);

            $("#Invoice_ListModal").modal('show');
            $("#InvList_Delete").show();
            $("#InvList_Save").text("Update");

        }
        catch (e) {
            alert("Error : EditInvList : " + e);
        }

    }


    function DeleteInvList() {
        try {
            var InvList_id = $("#InvList_id").val();

            $("#Invoice_List_Table tbody #IL_" + InvList_id + "").remove();

            $("#InvList_id").val("");
            $("#Invoice_No").val("");
            $("#Invoice_Date").val("");
            $("#Inv_List_Remarks").val("");

            $("#Invoice_ListModal").modal("hide");

            var i = 1;

            $("#Invoice_List_Table tbody tr").each(function () {
                $(this).attr("id", "IL_" + i);
                $("#Invoice_List_Table tbody #IL_" + i + " td")[0].innerHTML = i;
                i = i + 1;
            });

            $("#Invoice_ListModal").modal("hide");
            SaveDataToServerInvestigation('Invoice_List');
            InvoiceBasedFun();
        }
        catch (e) {
            alert("Error : DeleteInvList : " + e);
        }

    }

    /*       Invoice List       */





    /*       Breakage Inspection Sheet       */
    /*
    The Below functions are for Open Save Edit Delete operations on the Breakage Inspection Sheet table
    */

    function BI_Sheet_Add_Fun() {
        try {
            var CNO = $("#Complaint_No").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }

            $("#BISP_id").val("");
            $("#BISP_Product").val("");
            $("#BISP_Size").val("");
            $("#BISP_Batch_No").val("");
            $("#BISP_Defect_Type").val("");
            $("#BISP_Recovery_Product").val("");
            $("#BISP_Recovery").val("");


            $("#BISP_Defect_Type_ID").val("");
            $("#BISP_Defect_Type_CODE").val("");

            $("#BISP_Recovery_Product_ID").val("");
            $("#BISP_Recovery_Product_CODE").val("");

            $("#BISP_GrossWeight").val("");


            $("#BISP_Delete").hide();
            $("#BISP_Save").text("Save");

            $("#BreakageInspectionSheetModal").modal('show');
        }
        catch (e) {
            alert("Error : MaterialSupplyDetailModal :" + e);
        }
    }


    function SaveBISData() {
        try {
            var BISP_id = $("#BISP_id").val();
            var BISP_Product = $("#BISP_Product").val();
            var BISP_Size = $("#BISP_Size").val();
            var BISP_Batch_No = $("#BISP_Batch_No").val();
            var BISP_Defect_Type = $("#BISP_Defect_Type").val();
            var BISP_Recovery_Product = $("#BISP_Recovery_Product").val();
            var BISP_Recovery = $("#BISP_Recovery").val();

            var BISP_Defect_Type_ID = $("#BISP_Defect_Type_ID").val();
            var BISP_Defect_Type_CODE = $("#BISP_Defect_Type_CODE").val();

            var BISP_Recovery_Product_ID = $("#BISP_Recovery_Product_ID").val();
            var BISP_Recovery_Product_CODE = $("#BISP_Recovery_Product_CODE").val();

            var BISP_GrossWeight = $("#BISP_GrossWeight").val();


            var Flag = 0;

            if (BISP_Size == "") {
                Flag = Flag + 1;
                $("#BISP_Size").css("border-color", "red");
            }
            else {
                $("#BISP_Size").css("border-color", "#d2d6de");
            }

            if (BISP_Batch_No == "") {
                Flag = Flag + 1;
                $("#BISP_Batch_No").css("border-color", "red");
            }
            else {
                $("#BISP_Batch_No").css("border-color", "#d2d6de");
            }

            if (BISP_Defect_Type == "") {
                Flag = Flag + 1;
                $("#BISP_Defect_Type").css("border-color", "red");
            }
            else {
                $("#BISP_Defect_Type").css("border-color", "#d2d6de");
            }

            if (BISP_Recovery == "") {
                Flag = Flag + 1;
                $("#BISP_Recovery").css("border-color", "red");
            }
            else {
                $("#BISP_Recovery").css("border-color", "#d2d6de");
            }





            if (Flag > 0) {
                return;
            }
            else {
                var TRCode = "";


                TRCode = TRCode + "<td>" + BISP_Product + "</td>";
                TRCode = TRCode + "<td>" + BISP_Size + "</td>";
                TRCode = TRCode + "<td>" + BISP_Batch_No + "</td>";
                TRCode = TRCode + "<td>" + BISP_Defect_Type + "</td>";
                TRCode = TRCode + "<td>" + BISP_Recovery_Product + "</td>";
                TRCode = TRCode + "<td>" + BISP_Recovery + "</td>";


                TRCode = TRCode + "<td style='display:none'>" + BISP_Defect_Type_ID + "</td>";
                TRCode = TRCode + "<td style='display:none'>" + BISP_Defect_Type_CODE + "</td>";

                TRCode = TRCode + "<td style='display:none'>" + BISP_Recovery_Product_ID + "</td>";
                TRCode = TRCode + "<td style='display:none'>" + BISP_Recovery_Product_CODE + "</td>";

                TRCode = TRCode + "<td style='display:none'>" + BISP_GrossWeight + "</td>";


                if (BISP_id == "") {
                    BISP_id = $("#Breakage_Inspection_Sheet_Table tbody tr").length + 1;

                    TRCode = "<tr class='MousePointer' id='BISP_" + BISP_id + "' onclick='EditBISP(this.id)'><td>" + BISP_id + "</td>" + TRCode + "</tr>";
                    $("#Breakage_Inspection_Sheet_Table tbody").append(TRCode);
                }
                else {
                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[0].innerHTML = BISP_id;
                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[1].innerHTML = BISP_Product;
                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[2].innerHTML = BISP_Size;
                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[3].innerHTML = BISP_Batch_No;

                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[4].innerHTML = BISP_Defect_Type;
                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[5].innerHTML = BISP_Recovery_Product;
                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[6].innerHTML = BISP_Recovery;




                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[7].innerHTML = BISP_Defect_Type_ID;
                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[8].innerHTML = BISP_Defect_Type_CODE;

                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[9].innerHTML = BISP_Recovery_Product_ID;
                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[10].innerHTML = BISP_Recovery_Product_CODE;


                    $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + " td")[11].innerHTML = BISP_GrossWeight;

                }


                $("#BISP_id").val("");
                $("#BISP_Product").val("");
                $("#BISP_Size").val("");
                $("#BISP_Batch_No").val("");
                $("#BISP_Defect_Type").val("");
                $("#BISP_Recovery_Product").val("");
                $("#BISP_Recovery").val("");


                $("#BISP_Defect_Type_ID").val("");
                $("#BISP_Defect_Type_CODE").val("");

                $("#BISP_Recovery_Product_ID").val("");
                $("#BISP_Recovery_Product_CODE").val("");

                $("#BISP_GrossWeight").val("");

                $("#BreakageInspectionSheetModal").modal("hide");
                SaveDataToServerInvestigation('Breakage_Inspection_Sheet');

                BreakageInspectionSheetAdd();
            }

            //BI_Sheet_Add_Fun();
        }
        catch (e) {
            alert("Error : SaveBISPData :" + e);
        }
    }


    function EditBISP(RowId) {
        try {

            var IS = $("#Investigation_Status").val();
            var UserTypeCode = $("#SessionUserTypeID").val();
            if (IS == "Approved" || IS == "Rejected") {
                if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
                }
                else {
                    return;
                }
            }

            $("#BISP_id").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[0].innerHTML);
            $("#BISP_Product").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[1].innerHTML);
            $("#BISP_Size").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[2].innerHTML);
            $("#BISP_Batch_No").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[3].innerHTML);
            $("#BISP_Defect_Type").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[4].innerHTML);
            $("#BISP_Recovery_Product").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[5].innerHTML);
            $("#BISP_Recovery").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[6].innerHTML);


            $("#BISP_Defect_Type_ID").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[7].innerHTML);
            $("#BISP_Defect_Type_CODE").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[8].innerHTML);

            $("#BISP_Recovery_Product_ID").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[9].innerHTML);
            $("#BISP_Recovery_Product_CODE").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[10].innerHTML);

            $("#BISP_GrossWeight").val($("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[11].innerHTML);

            $("#BreakageInspectionSheetModal").modal('show');
            $("#BISP_Delete").show();
            $("#BISP_Save").text("Update");

        }
        catch (e) {
            alert("Error : EditBISP : " + e);
        }

    }


    function DeleteBISSD() {
        try {
            var BISP_id = $("#BISP_id").val();

            $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + BISP_id + "").remove();

            $("#BISP_id").val("");
            $("#BISP_Product").val("");
            $("#BISP_Size").val("");
            $("#BISP_Batch_No").val("");
            $("#BISP_Defect_Type").val("");
            $("#BISP_Recovery_Product").val("");
            $("#BISP_Recovery").val("");


            $("#BISP_Defect_Type_ID").val("");
            $("#BISP_Defect_Type_CODE").val("");

            $("#BISP_Recovery_Product_ID").val("");
            $("#BISP_Recovery_Product_CODE").val("");

            $("#BISP_GrossWeight").val("");

            var i = 1;

            $("#Breakage_Inspection_Sheet_Table tbody tr").each(function () {
                $(this).attr("id", "BISP_" + i);
                $("#Breakage_Inspection_Sheet_Table tbody #BISP_" + i + " td")[0].innerHTML = i;
                i = i + 1;
            });

            $("#BreakageInspectionSheetModal").modal("hide");
            SaveDataToServerInvestigation('Breakage_Inspection_Sheet');
            BreakageInspectionSheetAdd();
        }
        catch (e) {
            alert("Error : DeleteSD : " + e);
        }

    }

    /*        Breakage Inspection Sheet      */







    /*       Supply Detail       */
    /*
   The Below functions are for Open Save Edit Delete operations on the Supply Detail table (Sheeting)
   */

    function OpenSupDetModel() {
        try {

            //svprasadk 04-05-2020 SBU 1 requirement to get supply details based on customer and product type start
            var Product_Type = $("#Product_Type_CODE").val();
            var Product_CategoryCode = $("#Product_CategoryCode").val();
            var Customer_Code = $("#Customer_Code").val();
            var InvDateSupplyFrom = $("#InvDateSupplyFrom").val();
            var InvDateSupplyTo = $("#InvDateSupplyTo").val();
            //svprasadk 04-05-2020 SBU 1 requirement to get supply details based on customer and product type end

            var CNO = $("#Complaint_No").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }

            //svprasadk 04-05-2020 SBU 1 requirement to get supply details based on customer and product type start
            //alert($("#Period_Based").is(':checked'));
            //alert($("#Invoice_Based").is(':checked'))
            if (Product_Type == "") {
                alert("Please Provide Product Type");
                return;
            } else if (Product_CategoryCode == "") {
                alert("Please Provide Product Type");
                return;
            } else if (Customer_Code == "") {
                alert("Please Provide Customer");
                return;
            } else if (!$("#Period_Based").is(':checked') && !$("#Invoice_Based").is(':checked')) {
                alert("Please select either period based or invoice based");
                return;
            } else if ($("#Period_Based").is(':checked') && InvDateSupplyFrom == "") {
                alert("Please Provide From Date");
                return;
            } else if ($("#Period_Based").is(':checked') && InvDateSupplyTo == "") {
                alert("Please Provide To Date");
                return;
            }
            //svprasadk 04-05-2020 SBU 1 requirement to get supply details based on customer and product type end

            $("#SD_id").val("");

            $("#SD_Item_Type_Product_Name").val("");
            $("#SD_Item_Type_GrossWeight").val("");
            $("#SD_Size_M").val("");
            $("#SD_Supplied_Qty_Nos").val("");
            $("#SD_Supplied_Qty_M").val("");
            $("#SD_Breakage_Qty_Nos").val("");
            $("#SD_Breakage_Qty_M").val("");
            $("#SD_Breakage_Per").val("");
            $("#SD_Defect_Type").val("");
            $("#SD_Remarks").val("");


            $("#SD_Item_Type_Product_Name_ID").val("");
            $("#SD_Item_Type_Product_Name_CODE").val("");

            $("#SD_Defect_Type_ID").val("");
            $("#SD_Defect_Type_CODE").val("");



            $("#SD_Delete").hide();
            $("#SD_Save").text("Save");

            $("#SupplyDetailModal").modal('show');
        }
        catch (e) {
            alert("Error : SupplyDetailModal :" + e);
        }
    }


    function SaveSDData() {
        try {
            debugger
            var SD_id = $("#SD_id").val();

            var SD_Item_Type_Product_Name = $("#SD_Item_Type_Product_Name").val();
            var SD_Item_Type_GrossWeight = $("#SD_Item_Type_GrossWeight").val();
            var SD_Size_M = $("#SD_Size_M").val();
            var SD_Supplied_Qty_Nos = $("#SD_Supplied_Qty_Nos").val();
            var SD_Supplied_Qty_M = $("#SD_Supplied_Qty_M").val();
            var SD_Breakage_Qty_Nos = $("#SD_Breakage_Qty_Nos").val();
            var SD_Breakage_Qty_M = $("#SD_Breakage_Qty_M").val();
            var SD_Breakage_Per = $("#SD_Breakage_Per").val();
            var SD_Defect_Type = $("#SD_Defect_Type").val();
            var SD_Remarks = $("#SD_Remarks").val();


            var SD_Item_Type_Product_Name_ID = $("#SD_Item_Type_Product_Name_ID").val();
            var SD_Item_Type_Product_Name_CODE = $("#SD_Item_Type_Product_Name_CODE").val();

            var SD_Defect_Type_ID = $("#SD_Defect_Type_ID").val();
            var SD_Defect_Type_CODE = $("#SD_Defect_Type_CODE").val();


            var Flag = 0;

            if (SD_Item_Type_Product_Name == "") {
                Flag = Flag + 1;
                $("#SD_Item_Type_Product_Name").css("border-color", "red");
            }
            else {
                $("#SD_Item_Type_Product_Name").css("border-color", "#d2d6de");
            }

            if (SD_Size_M == "") {
                Flag = Flag + 1;
                $("#SD_Size_M").css("border-color", "red");
            }
            else {
                $("#SD_Size_M").css("border-color", "#d2d6de");
            }

            if (SD_Supplied_Qty_Nos == "") {
                Flag = Flag + 1;
                $("#SD_Supplied_Qty_Nos").css("border-color", "red");
            }
            else {
                $("#SD_Supplied_Qty_Nos").css("border-color", "#d2d6de");
            }

            if (SD_Supplied_Qty_M == "") {
                Flag = Flag + 1;
                $("#SD_Supplied_Qty_M").css("border-color", "red");
            }
            else {
                $("#SD_Supplied_Qty_M").css("border-color", "#d2d6de");
            }

            if (SD_Breakage_Qty_Nos == "") {
                Flag = Flag + 1;
                $("#SD_Breakage_Qty_Nos").css("border-color", "red");
            }
            else {
                $("#SD_Breakage_Qty_Nos").css("border-color", "#d2d6de");
            }

            if (SD_Breakage_Qty_M == "") {
                Flag = Flag + 1;
                $("#SD_Breakage_Qty_M").css("border-color", "red");
            }
            else {
                $("#SD_Breakage_Qty_M").css("border-color", "#d2d6de");
            }

            if (SD_Breakage_Per == "") {
                Flag = Flag + 1;
                $("#SD_Breakage_Per").css("border-color", "red");
            }
            else {
                $("#SD_Breakage_Per").css("border-color", "#d2d6de");
            }

            if (SD_Defect_Type == "") {
                Flag = Flag + 1;
                $("#SD_Defect_Type").css("border-color", "red");
            }
            else {
                $("#SD_Defect_Type").css("border-color", "#d2d6de");
            }




            if (Flag > 0) {
                return;
            }
            else {
                var TRCode = "";

                //if (parseFloat(SD_Supplied_Qty_Nos) < parseFloat(SD_Breakage_Qty_Nos)) {
                //    alert("Breakage Quantity Cannot be morethan Supply Quantity");
                //    return;
                //}
                //else {
                //}


                TRCode = TRCode + "<td>" + SD_Item_Type_Product_Name + "</td>";
                TRCode = TRCode + "<td>" + SD_Size_M + "</td>";
                TRCode = TRCode + "<td>" + SD_Item_Type_GrossWeight + "</td>";
                TRCode = TRCode + "<td>" + SD_Supplied_Qty_Nos + "</td>";
                TRCode = TRCode + "<td>" + SD_Supplied_Qty_M + "</td>";
                TRCode = TRCode + "<td style='display:none;'></td>";
                TRCode = TRCode + "<td>" + SD_Breakage_Qty_Nos + "</td>";
                TRCode = TRCode + "<td>" + SD_Breakage_Qty_M + "</td>";
                TRCode = TRCode + "<td style='display:none;'></td>";
                TRCode = TRCode + "<td>" + SD_Breakage_Per + "</td>";
                TRCode = TRCode + "<td>" + SD_Defect_Type + "</td>";
                TRCode = TRCode + "<td>" + SD_Remarks + "</td>";

                TRCode = TRCode + "<td style='display:none;'>" + SD_Item_Type_Product_Name_ID + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + SD_Item_Type_Product_Name_CODE + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + SD_Defect_Type_ID + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + SD_Defect_Type_CODE + "</td>";


                if (SD_id == "") {
                    SD_id = $("#Supply_Details_Table tbody tr").length + 1;

                    TRCode = "<tr class='MousePointer' id='SD_" + SD_id + "' onclick='EditSD(this.id)'><td>" + SD_id + "</td>" + TRCode + "</tr>";
                    $("#Supply_Details_Table tbody").append(TRCode);
                }
                else {
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[0].innerHTML = SD_id;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[1].innerHTML = SD_Item_Type_Product_Name;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[2].innerHTML = SD_Size_M;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[3].innerHTML = SD_Item_Type_GrossWeight
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[4].innerHTML = SD_Supplied_Qty_Nos;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[5].innerHTML = SD_Supplied_Qty_M;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[7].innerHTML = SD_Breakage_Qty_Nos;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[8].innerHTML = SD_Breakage_Qty_M;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[10].innerHTML = SD_Breakage_Per;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[11].innerHTML = SD_Defect_Type;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[12].innerHTML = SD_Remarks;


                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[13].innerHTML = SD_Item_Type_Product_Name_ID;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[14].innerHTML = SD_Item_Type_Product_Name_CODE;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[15].innerHTML = SD_Defect_Type_ID;
                    $("#Supply_Details_Table tbody #SD_" + SD_id + " td")[16].innerHTML = SD_Defect_Type_CODE;

                }


                $("#SD_id").val("");
                $("#SD_Item_Type_Product_Name").val("");
                $("#SD_Item_Type_GrossWeight").val("");
                $("#SD_Size_M").val("");
                $("#SD_Supplied_Qty_Nos").val("");
                $("#SD_Supplied_Qty_M").val("");
                $("#SD_Breakage_Qty_Nos").val("");
                $("#SD_Breakage_Qty_M").val("");
                $("#SD_Breakage_Per").val("");
                $("#SD_Defect_Type").val("");
                $("#SD_Remarks").val("");


                $("#SD_Item_Type_Product_Name_ID").val("");
                $("#SD_Item_Type_Product_Name_CODE").val("");

                $("#SD_Defect_Type_ID").val("");
                $("#SD_Defect_Type_CODE").val("");


                SaveDataToServerInvestigation('Supply_Details');
                $("#SupplyDetailModal").modal("hide");
                AddThingsToProductDetails();
                MakeTotalsForSheetingTable()

            }
            //OpenSupDetModel();
        }
        catch (e) {
            alert("Error : SaveSDData :" + e);
        }
    }


    function EditSD(RowId) {
        try {

            var IS = $("#Investigation_Status").val();
            var UserTypeCode = $("#SessionUserTypeID").val();
            if (IS == "Approved" || IS == "Rejected") {
                if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
                }
                else {
                    return;
                }
            }



            $("#SD_id").val($("#Supply_Details_Table tbody #" + RowId + " td")[0].innerHTML);
            $("#SD_Item_Type_Product_Name").val($("#Supply_Details_Table tbody #" + RowId + " td")[1].innerHTML);
            $("#SD_Size_M").val($("#Supply_Details_Table tbody #" + RowId + " td")[2].innerHTML);
            $("#SD_Item_Type_GrossWeight").val($("#Supply_Details_Table tbody #" + RowId + " td")[3].innerHTML);
            $("#SD_Supplied_Qty_Nos").val($("#Supply_Details_Table tbody #" + RowId + " td")[4].innerHTML);
            $("#SD_Supplied_Qty_M").val($("#Supply_Details_Table tbody #" + RowId + " td")[5].innerHTML);
            $("#SD_Breakage_Qty_Nos").val($("#Supply_Details_Table tbody #" + RowId + " td")[7].innerHTML);
            $("#SD_Breakage_Qty_M").val($("#Supply_Details_Table tbody #" + RowId + " td")[8].innerHTML);
            $("#SD_Breakage_Per").val($("#Supply_Details_Table tbody #" + RowId + " td")[10].innerHTML);
            $("#SD_Defect_Type").val($("#Supply_Details_Table tbody #" + RowId + " td")[11].innerHTML);
            $("#SD_Remarks").val($("#Supply_Details_Table tbody #" + RowId + " td")[12].innerHTML);

            $("#SD_Item_Type_Product_Name_ID").val($("#Supply_Details_Table tbody #" + RowId + " td")[13].innerHTML);
            $("#SD_Item_Type_Product_Name_CODE").val($("#Supply_Details_Table tbody #" + RowId + " td")[14].innerHTML);

            $("#SD_Defect_Type_ID").val($("#Supply_Details_Table tbody #" + RowId + " td")[15].innerHTML);
            $("#SD_Defect_Type_CODE").val($("#Supply_Details_Table tbody #" + RowId + " td")[16].innerHTML);


            $("#SupplyDetailModal").modal('show');
            $("#SD_Delete").show();
            $("#SD_Save").text("Update");


        }
        catch (e) {
            alert("Error : EditSD : " + e);
        }

    }


    function DeleteSD() {
        try {
            var SD_id = $("#SD_id").val();

            $("#Supply_Details_Table tbody #SD_" + SD_id + "").remove();

            $("#SD_id").val("");
            $("#SD_Item_Type_Product_Name").val("");
            $("#SD_Item_Type_GrossWeight").val("");
            $("#SD_Size_M").val("");
            $("#SD_Supplied_Qty_Nos").val("");
            $("#SD_Supplied_Qty_M").val("");
            $("#SD_Breakage_Qty_Nos").val("");
            $("#SD_Breakage_Qty_M").val("");
            $("#SD_Breakage_Per").val("");
            $("#SD_Defect_Type").val("");
            $("#SD_Remarks").val("");

            $("#SD_Item_Type_Product_Name_ID").val("");
            $("#SD_Item_Type_Product_Name_CODE").val("");

            $("#SD_Defect_Type_ID").val("");
            $("#SD_Defect_Type_CODE").val("");


            var i = 1;

            $("#Supply_Details_Table tbody tr").each(function () {
                $(this).attr("id", "SD_" + i);
                $("#Supply_Details_Table tbody #SD_" + i + " td")[0].innerHTML = i;
                i = i + 1;
            });

            $("#SupplyDetailModal").modal("hide");
            AddThingsToProductDetails();
            SaveDataToServerInvestigation('Supply_Details');
            MakeTotalsForSheetingTable();
        }
        catch (e) {
            alert("Error : DeleteSD : " + e);
        }

    }


    /*
    The Below functions are for Open Save Edit Delete operations on the Supply Detail table (Aerocon and Insulation)
   */

    function OpenSupDetModelB() {
        try {
            var CNO = $("#Complaint_No").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }


            $("#SD_idB").val("");
            $("#SD_Item_Type_Product_NameB").val("");
            $("#SD_Item_Type_Product_Name_IDB").val("");
            $("#SD_Item_Type_Product_Name_CODEB").val("");
            $("#InvoiceNoB").val("");
            $("#InvoiceDateB").val("");
            $("#BatchNoB").val("");
            $("#SuppliedQtyNosB").val("");
            $("#BreakageQtyNosB").val("");
            $("#TransporterB").val("");
            $("#Defect_TypeB").val("");
            $("#Defect_Type_IDB").val("");
            $("#Defect_Type_CODEB").val("");
            $("#RemarksB").val("");
            $("#AttachmentsB").val("");



            $("#SD_DeleteB").hide();
            $("#SD_SaveB").text("Save");

            $("#SupplyDetailModalB").modal('show');
        }
        catch (e) {
            alert("Error : SupplyDetailModalB :" + e);
        }
    }


    function SaveSDDataB() {
        try {
            var SD_idB = $("#SD_idB").val();
            var SD_Item_Type_Product_NameB = $("#SD_Item_Type_Product_NameB").val();
            var SD_Item_Type_Product_Name_IDB = $("#SD_Item_Type_Product_Name_IDB").val();
            var SD_Item_Type_Product_Name_CODEB = $("#SD_Item_Type_Product_Name_CODEB").val();
            var InvoiceNoB = $("#InvoiceNoB").val();
            var InvoiceDateB = $("#InvoiceDateB").val();
            var BatchNoB = $("#BatchNoB").val();
            var SuppliedQtyNosB = $("#SuppliedQtyNosB").val();
            var BreakageQtyNosB = $("#BreakageQtyNosB").val();
            var TransporterB = $("#TransporterB").val();
            var Defect_TypeB = $("#Defect_TypeB").val();
            var Defect_Type_IDB = $("#Defect_Type_IDB").val();
            var Defect_Type_CODEB = $("#Defect_Type_CODEB").val();
            var RemarksB = $("#RemarksB").val();
            var AttachmentsB = $("#AttachmentsB").val();

            var Flag = 0;

            if (SD_Item_Type_Product_NameB == "") {
                Flag = Flag + 1;
                $("#SD_Item_Type_Product_NameB").css("border-color", "red");
            }
            else {
                $("#SD_Item_Type_Product_NameB").css("border-color", "#d2d6de");
            }

            if (SuppliedQtyNosB == "") {
                Flag = Flag + 1;
                $("#SuppliedQtyNosB").css("border-color", "red");
            }
            else {
                $("#SuppliedQtyNosB").css("border-color", "#d2d6de");
            }

            if (BreakageQtyNosB == "") {
                Flag = Flag + 1;
                $("#BreakageQtyNosB").css("border-color", "red");
            }
            else {
                $("#BreakageQtyNosB").css("border-color", "#d2d6de");
            }

            if (Defect_TypeB == "") {
                Flag = Flag + 1;
                $("#Defect_TypeB").css("border-color", "red");
            }
            else {
                $("#Defect_TypeB").css("border-color", "#d2d6de");
            }


            if (Flag > 0) {
                return;
            }
            else {
                if (InvoiceNoB == "") {
                }
                else if (InvoiceNoB.length == 10) {
                }
                else {
                    alert("Invalid Invoice Number");
                    return
                }

                var TRCode = "";

                TRCode = TRCode + "<td>" + SD_Item_Type_Product_Name_CODEB + "</td>";
                TRCode = TRCode + "<td>" + SD_Item_Type_Product_NameB + "</td>";
                TRCode = TRCode + "<td>" + InvoiceNoB + "</td>";
                TRCode = TRCode + "<td>" + InvoiceDateB + "</td>";
                TRCode = TRCode + "<td>" + BatchNoB + "</td>";
                TRCode = TRCode + "<td>" + SuppliedQtyNosB + "</td>";

                TRCode = TRCode + "<td>" + BreakageQtyNosB + "</td>";
                TRCode = TRCode + "<td>" + TransporterB + "</td>";
                TRCode = TRCode + "<td>" + Defect_TypeB + "</td>";
                TRCode = TRCode + "<td>" + RemarksB + "</td>";

                TRCode = TRCode + "<td style='display:none;'>" + Defect_Type_CODEB + "</td>";

                if (SD_idB == "") {
                    SD_idB = $("#Supply_Details_TableB tbody tr").length + 1;

                    TRCode = "<tr class='MousePointer' id='SDB_" + SD_idB + "' onclick='EditSDB(this.id)'><td>" + SD_idB + "</td>" + TRCode + "</tr>";
                    $("#Supply_Details_TableB tbody").append(TRCode);
                }
                else {
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[0].innerHTML = SD_idB;

                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[1].innerHTML = SD_Item_Type_Product_Name_CODEB;
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[2].innerHTML = SD_Item_Type_Product_NameB;
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[3].innerHTML = InvoiceNoB;
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[4].innerHTML = InvoiceDateB;
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[5].innerHTML = BatchNoB;
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[6].innerHTML = SuppliedQtyNosB;

                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[7].innerHTML = BreakageQtyNosB;
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[8].innerHTML = TransporterB;
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[9].innerHTML = Defect_TypeB;
                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[10].innerHTML = RemarksB;

                    $("#Supply_Details_TableB tbody #SDB_" + SD_idB + " td")[11].innerHTML = Defect_Type_CODEB;
                }


                $("#SD_idB").val("");
                $("#SD_Item_Type_Product_NameB").val("");
                $("#SD_Item_Type_Product_Name_IDB").val("");
                $("#SD_Item_Type_Product_Name_CODEB").val("");
                $("#InvoiceNoB").val("");
                $("#InvoiceDateB").val("");
                $("#BatchNoB").val("");
                $("#SuppliedQtyNosB").val("");
                $("#BreakageQtyNosB").val("");
                $("#TransporterB").val("");
                $("#Defect_TypeB").val("");
                $("#Defect_Type_IDB").val("");
                $("#Defect_Type_CODEB").val("");
                $("#RemarksB").val("");

                $("#SupplyDetailModalB").modal("hide");
                SaveDataToServerInvestigation('Supply_DetailsB');
                AddThingsToProductDetails();
            }
        }
        catch (e) {
            alert("Error : SaveSDDataB :" + e);
        }
    }


    function EditSDB(RowId) {
        try {

            var IS = $("#Investigation_Status").val();
            var UserTypeCode = $("#SessionUserTypeID").val();
            if (IS == "Approved" || IS == "Rejected") {
                if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
                }
                else {
                    return;
                }
            }

            $("#SD_idB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[0].innerHTML);

            $("#SD_Item_Type_Product_Name_CODEB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[1].innerHTML);
            $("#SD_Item_Type_Product_NameB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[2].innerHTML);
            $("#InvoiceNoB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[3].innerHTML);
            $("#InvoiceDateB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[4].innerHTML);
            $("#BatchNoB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[5].innerHTML);
            $("#SuppliedQtyNosB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[6].innerHTML);

            $("#BreakageQtyNosB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[7].innerHTML);
            $("#TransporterB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[8].innerHTML);
            $("#Defect_TypeB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[9].innerHTML);
            $("#RemarksB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[10].innerHTML);

            $("#Defect_Type_CODEB").val($("#Supply_Details_TableB tbody #" + RowId + " td")[11].innerHTML);


            $("#SupplyDetailModalB").modal('show');
            $("#SD_DeleteB").show();
            $("#SD_SaveB").text("Update");

        }
        catch (e) {
            alert("Error : EditSDB : " + e);
        }

    }


    function DeleteSDB() {
        try {
            var SD_idB = $("#SD_idB").val();

            $("#Supply_Details_TableB tbody #SDB_" + SD_idB + "").remove();


            $("#SD_idB").val("");
            $("#SD_Item_Type_Product_NameB").val("");
            $("#SD_Item_Type_Product_Name_IDB").val("");
            $("#SD_Item_Type_Product_Name_CODEB").val("");
            $("#InvoiceNoB").val("");
            $("#InvoiceDateB").val("");
            $("#BatchNoB").val("");
            $("#SuppliedQtyNosB").val("");
            $("#BreakageQtyNosB").val("");
            $("#TransporterB").val("");
            $("#Defect_TypeB").val("");
            $("#Defect_Type_IDB").val("");
            $("#Defect_Type_CODEB").val("");
            $("#RemarksB").val("");
            $("#AttachmentsB").val("");


            var i = 1;

            $("#Supply_Details_TableB tbody tr").each(function () {
                $(this).attr("id", "SDB_" + i);
                $("#Supply_Details_TableB tbody #SDB_" + i + " td")[0].innerHTML = i;
                i = i + 1;
            });

            $("#SupplyDetailModalB").modal("hide");

            SaveDataToServerInvestigation('Supply_DetailsB');
            AddThingsToProductDetails();
        }
        catch (e) {
            alert("Error : DeleteSDB : " + e);
        }

    }

    /*       Supply Detail       */



    //Delay checkbox validation
    function DelayClick() {
        if ($("#Delay").is(':checked') == true) {
            $(".DelayGroup").show();
            $(".DelayGroupDummy").hide();
            DelayCheckAutoCalcSBU3();
        }
        else {
            $(".DelayGroup").hide();
            $("#DelayDays").val("");
            $("#DelayReason").val("");
            $(".DelayGroupDummy").show();
        }
    }


    function DelayCheckAutoCalcSBU3() {
        try {

            var Division = $("#Product_CategoryCode").val();
            if ($("#Product_Type").val() == "SBU3" && Division != "36") {

                if (($("#Delay").is(':checked') == true)) {
                    var RecvDate = $("#Complaint_Received_Date").val();
                    var VisitDate = $("#Visited_Date").val();


                    if (RecvDate == "" || VisitDate == "") {
                        $("#DelayDays").val("");
                    }
                    else {
                        var StartDate = new Date(RecvDate.split('/')[1] + "/" + RecvDate.split('/')[0] + "/" + RecvDate.split('/')[2]);
                        var EndDate = new Date(VisitDate.split('/')[1] + "/" + VisitDate.split('/')[0] + "/" + VisitDate.split('/')[2]);
                        var DaysDiff = Math.round((EndDate - StartDate) / (1000 * 60 * 60 * 24));
                        if (isNaN(DaysDiff) || DaysDiff == null || DaysDiff == "") {
                            $("#DelayDays").val("");
                        }
                        else {
                            $("#DelayDays").val(DaysDiff);
                        }
                    }
                }
                else {
                    $("#DelayDays").val("");
                }
            }
        }
        catch (e) {
            alert("DelayCheckAutoCalcSBU3 : " + e);
        }
    }


    //Observation remarks Add button Click
    function Observation_Remarks_Adding() {
        try {

            var CNO = $("#Complaint_No").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }

            $("#ObservationLinesPopUp").modal('show');

            var Product_Type = $("#Product_Type_CODE").val();
            var SITEDETAIL_CODE = $("#SITEDETAIL_CODE").val();
            var COMPANYDETAIL_CODE = $("#COMPANYDETAIL_CODE").val();

            if (Product_Type == "") {
                return;
            }
            else {
                Product_Type = JSON.stringify({
                    Product_Type: Product_Type,
                    SITEDETAIL_CODE: SITEDETAIL_CODE,
                    COMPANYDETAIL_CODE: COMPANYDETAIL_CODE
                });

                $.ajax({
                    method: 'POST',
                    url: '../../ComplaintRegistration/GetObservationMaster',
                    async: false,
                    data: { Product_Type: Product_Type },
                }).then(function successCallback(response) {

                    if (response == "FALSE") {
                        $("#ObservationLinesTable").dataTable({
                            "bDestroy": true,
                            'scroll': true,
                            "paging": false,
                            "ordering": false,
                            "searching": false,
                            "info": false
                        });
                    }
                    else {
                        var Data = JSON.parse(response);

                        var TRCode = "";

                        $("#ObservationLinesTable tbody").empty();


                        for (var i = 0; i < Data.length; i++) {

                            TRCode = TRCode + "<tr id='OTR_" + (i + 1) + "' >";

                            TRCode = TRCode + "<td>" + (i + 1) + "</td>";
                            TRCode = TRCode + "<td>" + Data[i]["OBSERVATION_NAME"] + "</td>";
                            TRCode = TRCode + "<td><input type='checkbox' id='OTR_" + (i + 1) + "_CHBX' /></td>";
                            TRCode = TRCode + "<td style='display:none;'>" + Data[i]["OBSERVATION_CODE"] + "</td>";
                            TRCode = TRCode + "<td style='display:none;'>" + Data[i]["ID"] + "</td>";

                            TRCode = TRCode + "</tr>";
                        }

                        $("#ObservationLinesTable tbody").remove();
                        $("#ObservationLinesTable").append("<tbody>" + TRCode + "</<tbody>>");




                        $("#ObservationLinesTable").dataTable({
                            "bDestroy": true,
                            'scroll': true,
                            "paging": false,
                            "ordering": false,
                            "searching": false,
                            "info": false
                        });
                    }

                }, function errorCallback(response) {
                    alert("Error : " + response);
                });
            }
        }
        catch (e) {
            alert("Error : Observation_Remarks_Add " + e);
        }
    }




    /*******Observation Pop Up*******/


    function ObservationEditPopUp(RowId) {

        var IS = $("#Investigation_Status").val();
        var UserTypeCode = $("#SessionUserTypeID").val();
        if (IS == "Approved" || IS == "Rejected") {
            if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
            }
            else {
                return;
            }
        }


        $("#RowId_idObr").val(RowId);

        $("#ObserSLNO").val($("#Observation_Remarks_Table tbody #" + RowId + " td")[0].innerHTML);
        $("#ObserName").val($("#Observation_Remarks_Table tbody #" + RowId + " td")[1].innerHTML);

        $("#ObservationRemarksModel").modal('show');
    }


    function SaveObrData() {
        var ObserSLNO = $("#ObserSLNO").val();
        var ObserName = $("#ObserName").val();

        if (ObserName == "") {
            Flag = Flag + 1;
            $("#ObserName").css("border-color", "red");
        }
        else {
            $("#ObserName").css("border-color", "#d2d6de");

            var RowId = $("#RowId_idObr").val();

            $("#Observation_Remarks_Table tbody #" + RowId + " td")[1].innerHTML = ObserName;

            $("#ObservationRemarksModel").modal('hide');
        }
    }


    function DeleteObr() {
        var RowId = $("#RowId_idObr").val();

        $("#Observation_Remarks_Table tbody #" + RowId + "").remove();


        $("#ObserSLNO").val("");
        $("#ObserName").val("");
        $("#RowId_idObr").val("");

        $("#ObservationRemarksModel").modal("hide");


        var i = 1;
        $("#Observation_Remarks_Table tbody tr").each(function () {
            $(this).attr("id", "OLT_" + i);
            $("#Observation_Remarks_Table tbody #OLT_" + i + " td")[0].innerHTML = i;
            i = i + 1;
        });

    }



    /*******Observation Pop Up*******/


    //Observation remarks pop up Save click
    function SaveOLPUData() {
        try {

            var TRCode = "";
            var Count = 0;

            $("#Observation_Remarks_Table tbody").empty();

            $("#ObservationLinesTable tbody tr").each(function () {
                var RowId = ($(this).attr("id"));

                if ($("#" + RowId + "_CHBX").is(':checked')) {
                    Count = Count + 1;
                    TRCode = TRCode + "<tr id='OLT_" + Count + "' onclick='ObservationEditPopUp(this.id)' >";

                    TRCode = TRCode + "<td>" + Count + "</td>";
                    TRCode = TRCode + "<td>" + $("#ObservationLinesTable tbody #" + RowId + " td")[1].innerHTML + "</td>";
                    TRCode = TRCode + "<td style='display:none;'>" + $("#ObservationLinesTable tbody #" + RowId + " td")[3].innerHTML + "</td>";
                    TRCode = TRCode + "<td style='display:none;'>" + $("#ObservationLinesTable tbody #" + RowId + " td")[4].innerHTML + "</td>";

                    TRCode = TRCode + "</tr>";
                }
                else {

                }
            });


            $("#Observation_Remarks_Table tbody").append(TRCode);
            $("#ObservationLinesPopUp").modal('hide');

            SaveDataToServerInvestigation('Observation_Remarks');

        }
        catch (e) {
            alert("Error : SaveOLPUData " + e);
        }
    }


    //Site Observation Sheet add click
    function Site_Observation_Sheet_Adding() {

        try {

            var CNO = $("#Complaint_No").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }


            $("#SiteObservationSheetPopUp").modal('show');
            $("#SiteObservationSheetTable").hide();

            $.ajax({
                method: 'POST',
                url: '../../ComplaintRegistration/GetBreakageCategoryNames',
                async: false,
                //data: { Product_Type: Product_Type },
            }).then(function successCallback(response) {

                if (response == "FALSE") { }
                else {
                    var Data = JSON.parse(response);

                    $("#ObservationType").children().remove();

                    var OptionCode = "<option value=''>Select Observation</option>";

                    for (var i = 0; i < Data.length; i++) {
                        var data = "";
                        OptionCode = OptionCode + "<option value='" + Data[i]["BREAKAGE_CATEGEORY_CODE"] + "'>" + Data[i]["BREAKAGE_CATEGEORY_NAME"] + "</option>";
                    }
                    $("#ObservationType").append(OptionCode);
                }
            }, function errorCallback(response) {
                alert("Error : " + response);
            });

        }
        catch (e) {
            alert("Error : Site_Observation_Sheet_Adding " + e);
        }
    }


    //Site Observation sheet pop up Observations by QAF representative change
    function ObservationTypeChange() {

        try {

            var ObservationType = $("#ObservationType").val();

            $("#SiteObservationSheetTable tbody").empty();

            if (ObservationType == "") {
                $("#SiteObservationSheetTable").hide();
            }
            else {

                var SITEDETAIL_CODE = $("#SITEDETAIL_CODE").val();
                var COMPANYDETAIL_CODE = $("#COMPANYDETAIL_CODE").val();

                var MyData = JSON.stringify({
                    ObservationType: ObservationType,
                    SITEDETAIL_CODE: SITEDETAIL_CODE,
                    COMPANYDETAIL_CODE: COMPANYDETAIL_CODE
                });

                $.ajax({
                    method: 'POST',
                    url: '../../ComplaintRegistration/GetSurveyList',
                    async: false,
                    data: { MyData: MyData },
                }).then(function successCallback(response) {
                    if (response == "FALSE" || response == "[]") {
                        $("#SiteObservationSheetTable tbody").empty();
                    }
                    else {
                        $("#SiteObservationSheetTable").show();

                        $("#SiteObservationSheetTable tbody").empty();

                        var Resp = JSON.parse(response);

                        var TRCode = "";

                        for (var i = 0; i < Resp.length; i++) {
                            TRCode = TRCode + "<tr id='SOTR_" + (i + 1) + "'>";

                            TRCode = TRCode + "<td>" + (i + 1) + "</td>";
                            TRCode = TRCode + "<td>" + Resp[i]["SURVEY_CRITERIA_NAME"] + "</td>";
                            TRCode = TRCode + "<td>";
                            TRCode = TRCode + "<input type='radio' value='Yes' id='Yes_" + (i + 1) + "' name='CHK_" + (i + 1) + "' >Yes";
                            TRCode = TRCode + "<input type='radio' value='No' id='No_" + (i + 1) + "' name='CHK_" + (i + 1) + "' >No";
                            TRCode = TRCode + "<input type='radio' value='NA' id='NA_" + (i + 1) + "' name='CHK_" + (i + 1) + "' >NA";
                            TRCode = TRCode + " </td>";
                            TRCode = TRCode + "<td><input type='text' id='Comments_" + (i + 1) + "'></td>";

                            TRCode = TRCode + "</tr>";
                        }


                        $("#SiteObservationSheetTable tbody").remove();
                        $("#SiteObservationSheetTable").append("<tbody>" + TRCode + "</<tbody>>");




                        $("#SiteObservationSheetTable").dataTable({
                            "bDestroy": true,
                            'scroll': true,
                            "paging": false,
                            "ordering": false,
                            "searching": false,
                            "info": false
                        });

                        var Count = 0;

                        $("#SiteObservationSheetTable tbody tr").each(function () {
                            var RowId = ($(this).attr("id"));
                            Count = Count + 1;
                            $("#" + RowId + " #Yes_" + Count + "").attr('checked', 'checked');
                        });

                    }
                }, function errorCallback(response) {
                    alert("Error : " + response);
                });
            }

        }
        catch (e) {
            alert("Error : ObservationTypeChange " + e);
        }
    }





    //Save Site Observation Sheet save data.
    function SaveSOSPData() {
        try {
            //$("#Site_Observation_Sheet_Table tbody").empty();

            var Count = 0;

            Count = $("#Site_Observation_Sheet_Table tbody tr").length;

            var TRCode = "";

            var Iterator = 0;

            $("#SiteObservationSheetTable tbody tr").each(function () {
                var RowId = ($(this).attr("id"));
                Count = Count + 1;
                Iterator = Iterator + 1;
                TRCode = TRCode + "<tr id='SOST_" + Count + "' onclick='SiteObservationEdit(this.id)' >";
                TRCode = TRCode + "<td>" + Count + "</td>";
                TRCode = TRCode + "<td>" + $("#SiteObservationSheetTable tbody #" + RowId + " td")[1].innerHTML + "</td>";
                var RadioData = "";

                if ($("#" + RowId + " #Yes_" + Iterator + "").prop("checked")) {
                    RadioData = "Yes";
                }
                else if ($("#" + RowId + " #No_" + Iterator + "").prop("checked")) {
                    RadioData = "No";
                }
                else if ($("#" + RowId + " #NA_" + Iterator + "").prop("checked")) {
                    RadioData = "NA";
                }
                else {
                    RadioData = "NA";
                }


                TRCode = TRCode + "<td>" + RadioData + "</td>";
                TRCode = TRCode + "<td>" + $("#" + RowId + " #Comments_" + Iterator + "").val() + "</td>"
                TRCode = TRCode + "</tr>";
            });

            $("#Site_Observation_Sheet_Table tbody").append(TRCode);

            $("#SiteObservationSheetPopUp").modal('hide');
            SaveDataToServerInvestigation('Site_Observation_Sheet');
        }
        catch (e) {
            alert("Error : SaveSOSPData :" + e);
        }
    }


    function SiteObservationEdit(RowId) {

        var IS = $("#Investigation_Status").val();
        var UserTypeCode = $("#SessionUserTypeID").val();
        if (IS == "Approved" || IS == "Rejected") {
            if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
            }
            else {
                return;
            }
        }

        var VarifiedOrNot = $("#Site_Observation_Sheet_Table tbody #" + RowId + " td")[2].innerHTML;

        $("#RowId_idSOS").val(RowId);
        $("#SOSSLNO").val($("#Site_Observation_Sheet_Table tbody #" + RowId + " td")[0].innerHTML);
        $("#SOS_Observation_Name").val($("#Site_Observation_Sheet_Table tbody #" + RowId + " td")[1].innerHTML);
        $("#SOS_Comments").val($("#Site_Observation_Sheet_Table tbody #" + RowId + " td")[3].innerHTML);

        if (VarifiedOrNot == "Yes") {
            $("#PopUp_Yes").prop("checked", true);
            $("#PopUp_No").prop("checked", false);
            $("#PopUp_NA").prop("checked", false);
        }
        else if (VarifiedOrNot == "No") {
            $("#PopUp_Yes").prop("checked", false);
            $("#PopUp_No").prop("checked", true);
            $("#PopUp_NA").prop("checked", false);
        }
        else if (VarifiedOrNot == "NA") {
            $("#PopUp_Yes").prop("checked", false);
            $("#PopUp_No").prop("checked", false);
            $("#PopUp_NA").prop("checked", true);
        }

        $("#SiteObservationModelPopUp").modal('show');
        SaveDataToServerInvestigation('Site_Observation_Sheet');
    }



    function SaveSOSData() {

        var RowId_idSOS = $("#RowId_idSOS").val();
        var SOSSLNO = $("#SOSSLNO").val();
        var SOS_Observation_Name = $("#SOS_Observation_Name").val();
        var SOS_Comments = $("#SOS_Comments").val();

        var RadioData = "";
        if ($("#PopUp_Yes").prop("checked")) {
            RadioData = "Yes";
        }
        else if ($("#PopUp_No").prop("checked")) {
            RadioData = "No";
        }
        else if ($("#PopUp_NA").prop("checked")) {
            RadioData = "NA";
        }
        else {
            RadioData = "NA";
        }

        if (SOS_Observation_Name == "") {
            alert("Cannot Insert Empty Observation Name");
        }
        else {

            $("#Site_Observation_Sheet_Table tbody #" + RowId_idSOS + " td")[1].innerHTML = SOS_Observation_Name;
            $("#Site_Observation_Sheet_Table tbody #" + RowId_idSOS + " td")[2].innerHTML = RadioData;
            $("#Site_Observation_Sheet_Table tbody #" + RowId_idSOS + " td")[3].innerHTML = SOS_Comments;

            $("#SiteObservationModelPopUp").modal('hide');
            SaveDataToServerInvestigation('Site_Observation_Sheet');
        }
    }



    function SaveSOSRemove() {
        var RowId = $("#RowId_idSOS").val();

        $("#Site_Observation_Sheet_Table tbody #" + RowId + "").remove();

        $("#SiteObservationModelPopUp").modal("hide");


        var i = 1;
        $("#Site_Observation_Sheet_Table tbody tr").each(function () {
            $(this).attr("id", "SOST_" + i);
            $("#Site_Observation_Sheet_Table tbody #SOST_" + i + " td")[0].innerHTML = i;
            i = i + 1;
        });
    }




    //Supply Details Period and Invoice Based validations
    function PeriodOrInvoiceBased(Based) {
        try {

            //$("#SD_InvoiceDetails").val("");
            //$("#SD_ProductDetails").val("");
            //$("#InvDateSupplyTo").val("");
            //$("#InvDateSupplyFrom").val("");

            //HiddenInvoiceDetails

            if (Based == "P") {
                $("#Invoice_List_Division").css('display', 'none');
                if ($("#Period_Based").is(':checked')) {
                    $("#Invoice_Based").prop('checked', false);
                    $("#PeriodBasedDates").show();
                    $("#InvoiceBasedDiv").hide();
                    SupplyDatesChange();
                }
                else {
                    $("#PeriodBasedDates").hide();
                    $("#InvDateSupplyTo").val("");
                    $("#InvDateSupplyFrom").val("");
                    $("#InvoiceBasedDiv").show();
                }
            }
            else if (Based == "I") {
                if ($("#Invoice_Based").is(':checked')) {
                    $("#Period_Based").prop('checked', false);
                    $("#PeriodBasedDates").hide();
                    $("#PeriodBasedDiv").hide();
                    InvoiceBasedFun();

                    $("#Invoice_List_Division").css('display', 'block');

                }
                else {
                    $("#PeriodBasedDiv").show();
                    $("#Invoice_List_Division").css('display', 'none');

                }
            }
        }
        catch (e) {
            alert("Error : PeriodOrInvoiceBased : " + e);
        }
    }


    //Supply Details Invoice Based validations
    function InvoiceBasedFun() {
        if ($("#Invoice_Based").is(':checked')) {

            var RowId = "";
            var PD = "";
            $("#Supply_Details_TableSBU3 tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                if (PD == "") {
                    PD = "(" + $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[3].innerHTML + "," + $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[4].innerHTML + ")";
                } else {
                    PD = PD + "-(" + $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[3].innerHTML + "," + $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[4].innerHTML + ")";
                }
            });
            if (PD != "") {
                //PD = PD.substr(0, PD.length - 1);
                //PD = $("#HiddenInvoiceDetails").val() + "-" + PD;
                $("#SD_InvoiceDetails").val(PD);
            }
            else {
                $("#SD_InvoiceDetails").val($("#HiddenInvoiceDetails").val());
            }
            //$("#Invoice_List_Table tbody tr").each(function () {
            //    RowId = ($(this).attr("id"));
            //    PD = PD + "(" + $("#Invoice_List_Table tbody #" + RowId + " td")[2].innerHTML + "," + $("#Invoice_List_Table tbody #" + RowId + " td")[3].innerHTML + ")-";
            //});
            //if (PD != "") {
            //    PD = PD.substr(0, PD.length - 1);
            //    PD = $("#HiddenInvoiceDetails").val() + "-" + PD;
            //    $("#SD_InvoiceDetails").val(PD);
            //}
            //else {
            //    $("#SD_InvoiceDetails").val($("#HiddenInvoiceDetails").val());
            //}
        }
    }


    //Supply Details Dates Change validations
    function SupplyDatesChange() {
        if ($("#Period_Based").is(':checked')) {
            var DSFrom = $("#InvDateSupplyFrom").val();
            var DSTo = $("#InvDateSupplyTo").val();
            $("#SD_InvoiceDetails").val(DSFrom + " TO " + DSTo);
        }
    }



    //Product details tables populating of Sheeting and Aerocon, Insualtion
    function AddThingsToProductDetails() {

        $("#SD_ProductDetails").val("");
        var ProdType = $("#Product_Type_CODE").val();
        var PD = "";
        var RowID = "";
        var Division = $("#Product_CategoryCode").val();
        if (ProdType == "SBU1") {

            $("#Supply_Details_Table tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                PD = PD + "(" + $("#Supply_Details_Table tbody #" + RowId + " td")[1].innerHTML + "),";
            });
        }
        else if (ProdType == "SBU2" || (ProdType == "SBU3" && Division == "36")) {
            $("#Supply_Details_TableB tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                PD = PD + "(" + $("#Supply_Details_TableB tbody #" + RowId + " td")[2].innerHTML + "),";
            });
        }
        else if (ProdType == "SBU3") {
            $("#Supply_Details_TableSBU3 tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                PD = PD + "(" + $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[2].innerHTML + "),";
            });
        }

        PD = PD.substr(0, PD.length - 1);
        $("#SD_ProductDetails").val(PD);
    }


    //Sheeting Products Adding the Qauntities and populationg to the Textboxes
    function MakeTotalsForSheetingTable() {
        try {
            var RowId = "";

            var SuppliedQtyM = "";
            var BreakageQtyM = "";
            var fortune20 = "";
            var Size = "";
            var GrossWeight = "";

            var Division = $("#Product_CategoryCode").val();
            if (Division == "11") {

                $("#Supply_Details_Table tbody tr").each(function () {
                    RowId = ($(this).attr("id"));

                    if (SuppliedQtyM == "") {
                        SuppliedQtyM = 0;
                    }
                    if (BreakageQtyM == "") {
                        BreakageQtyM = 0;
                    }
                    SuppliedQtyM = parseFloat(SuppliedQtyM) + parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[5].innerHTML);
                    BreakageQtyM = parseFloat(BreakageQtyM) + parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[8].innerHTML);
                });

                //$("#Total_Supply_Oty_Mtrs").val(SuppliedQtyM);
                $("#Total_Breakage_Qty_Mtrs").val(BreakageQtyM);

                var TotSupTons = parseFloat((parseFloat(SuppliedQtyM)) * (0.01269));
                var TotBrkTons = parseFloat((parseFloat(BreakageQtyM)) * (0.01269));

                SuppliedQtyM = Math.round(SuppliedQtyM * 10000) / 10000;
                BreakageQtyM = Math.round(BreakageQtyM * 10000) / 10000;

                TotSupTons = Math.round(TotSupTons * 10000) / 10000;
                TotBrkTons = Math.round(TotBrkTons * 10000) / 10000;

                if (SuppliedQtyM == "" || isNaN(SuppliedQtyM)) {
                    SuppliedQtyM = 0;
                }
                if (BreakageQtyM == "" || isNaN(BreakageQtyM)) {
                    BreakageQtyM = 0;
                }
                if (TotSupTons == "" || isNaN(TotSupTons)) {
                    TotSupTons = 0;
                }
                if (TotBrkTons == "" || isNaN(TotBrkTons)) {
                    TotBrkTons = 0;
                }

                //$("#Total_Supply_Oty_Mtrs").val(SuppliedQtyM);
                $("#Total_Breakage_Qty_Mtrs").val(BreakageQtyM);

                //$("#Total_Supply_Qty_Tons").val(TotSupTons);
                $("#Total_Breakage_Qty_Tons").val(TotBrkTons);

            }
            else if (Division == "15") {
                //svprasadk 02-03-2021 fortune20 check start
                var fortune20_product_category_code = $("#fortune20_product_category_code").val();
                var fortune20_check = "FALSE";

                var MyData = JSON.stringify({
                    fortune20_product_category_code: fortune20_product_category_code,
                    Complaint_Tracking_No: $("#Complaint_Tracking_No").val(),
                });

                $.ajax({
                    method: 'POST',
                    url: '../../ComplaintRegistration/checkFortune20',
                    async: false,
                    data: { MyData: MyData },
                }).then(function successCallback(response) {
                    //if (response == "FALSE" || response == "[]") {
                    //    fortune20_check = response;
                    //}
                    //else {
                    //    fortune20_check = response;
                    //}
                    fortune20_check = response;
                    $('#fortune20_check').val(response);
                }, function errorCallback(response) {
                    alert("Error : " + response);
                });
                //svprasadk 02-03-2021 fortune20 check end
                $("#Supply_Details_Table tbody tr").each(function () {
                    RowId = ($(this).attr("id"));

                    if (SuppliedQtyM == "") {
                        SuppliedQtyM = 0;
                    }
                    if (BreakageQtyM == "") {
                        BreakageQtyM = 0;
                    }
                    SuppliedQtyM = parseFloat(SuppliedQtyM) + parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[5].innerHTML);
                    BreakageQtyM = parseFloat(BreakageQtyM) + parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[8].innerHTML);
                    //fortune20 = $("#Supply_Details_Table tbody #" + RowId + " td")[1].innerHTML.toLowerCase();
                });

                $("#Total_Supply_Oty_Mtrs").val(SuppliedQtyM);
                $("#Total_Breakage_Qty_Mtrs").val(BreakageQtyM);
                if ($('#fortune20_check').val() == "TRUE") {
                    var TotSupTons = parseFloat((parseFloat(SuppliedQtyM)) * (0.0123));
                    var TotBrkTons = parseFloat((parseFloat(BreakageQtyM)) * (0.0123));
                } else {
                    var TotSupTons = parseFloat((parseFloat(SuppliedQtyM)) * (0.0105));
                    var TotBrkTons = parseFloat((parseFloat(BreakageQtyM)) * (0.0105));
                }

                SuppliedQtyM = Math.round(SuppliedQtyM * 10000) / 10000;
                BreakageQtyM = Math.round(BreakageQtyM * 10000) / 10000;

                TotSupTons = Math.round(TotSupTons * 10000) / 10000;
                TotBrkTons = Math.round(TotBrkTons * 10000) / 10000;

                if (SuppliedQtyM == "" || isNaN(SuppliedQtyM)) {
                    SuppliedQtyM = 0;
                }
                if (BreakageQtyM == "" || isNaN(BreakageQtyM)) {
                    BreakageQtyM = 0;
                }
                if (TotSupTons == "" || isNaN(TotSupTons)) {
                    TotSupTons = 0;
                }
                if (TotBrkTons == "" || isNaN(TotBrkTons)) {
                    TotBrkTons = 0;
                }

                $("#Total_Supply_Oty_Mtrs").val(SuppliedQtyM);
                $("#Total_Breakage_Qty_Mtrs").val(BreakageQtyM);

                $("#Total_Supply_Qty_Tons").val(TotSupTons);
                $("#Total_Breakage_Qty_Tons").val(TotBrkTons);

            }
            else if (Division == "14") {

                var SupplyLength = 0;
                var SupplyWeight = 0;
                var BreakageLength = 0;
                var BreakageWeight = 0;

                $("#Supply_Details_Table tbody tr").each(function () {
                    RowId = ($(this).attr("id"));

                    Size = 0;
                    GrossWeight = 0;

                    Size = parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[2].innerHTML);
                    GrossWeight = parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[3].innerHTML);

                    SupplyLength = parseFloat(SupplyLength) + (parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[4].innerHTML) * Size);
                    SupplyWeight = parseFloat(SupplyWeight) + (parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[4].innerHTML) * GrossWeight);

                    BreakageLength = parseFloat(BreakageLength) + (parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[7].innerHTML) * Size);
                    BreakageWeight = parseFloat(BreakageWeight) + (parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[7].innerHTML) * GrossWeight);

                });
                SupplyWeight = parseFloat(SupplyWeight) / 1000;
                BreakageWeight = parseFloat(BreakageWeight) / 1000;

                SupplyLength = Math.round((parseFloat(SupplyLength)) * 10000) / 10000;
                SupplyWeight = Math.round((parseFloat(SupplyWeight)) * 10000) / 10000;
                BreakageLength = Math.round((parseFloat(BreakageLength)) * 10000) / 10000;
                BreakageWeight = Math.round((parseFloat(BreakageWeight)) * 10000) / 10000;

                $("#Total_Supply_Oty_Mtrs").val(SupplyLength);
                $("#Total_Breakage_Qty_Mtrs").val(BreakageLength);

                $("#Total_Supply_Qty_Tons").val(SupplyWeight);
                $("#Total_Breakage_Qty_Tons").val(BreakageWeight);

            }
            Total_Recovery_MtrsChange();

        }
        catch (e) {
            alert("Error : MakeTotalsForSheetingTable : " + e);
        }
    }


    //Supply Deatils Business Validation
    function SupplyQuantityNosChange() {

        try {
            var Size = $("#SD_Size_M").val();

            if (Size == "" || Size == undefined) {
                //alert("Please Enter Size");
                //$("#SD_Supplied_Qty_Nos").val("");
                //$("#SD_Supplied_Qty_M").val("");
                //$("#SD_Breakage_Qty_Nos").val("");
                //$("#SD_Breakage_Qty_M").val("");
                //$("#SD_Breakage_Per").val("");
                //return;
            }
            else {
                var Supplied_Qty_Nos = $("#SD_Supplied_Qty_Nos").val();

                //$("#SD_Supplied_Qty_M").val("");
                //$("#SD_Breakage_Qty_Nos").val("");
                //$("#SD_Breakage_Qty_M").val("");
                //$("#SD_Breakage_Per").val("");

                if (isNaN(Supplied_Qty_Nos)) {
                    $("#SD_Supplied_Qty_Nos").val("");
                }
                else {
                    var Supplied_Qty_M = parseFloat(Supplied_Qty_Nos) * parseFloat(Size);
                    Supplied_Qty_Nos = Math.round(Supplied_Qty_Nos * 10000) / 10000;
                    Supplied_Qty_M = Math.round(Supplied_Qty_M * 10000) / 10000;
                    $("#SD_Supplied_Qty_M").val(Supplied_Qty_M);
                    $("#SD_Supplied_Qty_Nos").val(Supplied_Qty_Nos);


                    var SD_Breakage_Qty_Nos = $("#SD_Breakage_Qty_Nos").val();

                    if (parseFloat(SD_Breakage_Qty_Nos) > parseFloat(Supplied_Qty_Nos)) {
                        //alert("Supply Quantity is less than Breakage Quantity");
                        $("#SD_Breakage_Qty_Nos").focus();
                    }
                    else {

                        var Supply = $("#SD_Supplied_Qty_Nos").val();
                        var Breakage = $("#SD_Breakage_Qty_Nos").val();

                        if (Supply == "" || Supply == null || Breakage == "" || Breakage == null) {
                            $("#SD_Breakage_Per").val("");
                        }
                        else {
                            var Percent = (parseFloat(Breakage) / parseFloat(Supply)) * 100;
                            Percent = Math.round(Percent * 100) / 100;
                            $("#SD_Breakage_Per").val(Percent);
                        }

                    }
                }


            }
        }
        catch (e) {
            alert("Error : SupplyQuantityNosChange : " + e);
        }

    }


    //Supply Deatils Business Validation
    function BreakageQuantityNosChange() {
        try {
            var Size = $("#SD_Size_M").val();

            if (Size == "" || Size == undefined) {
                //alert("Please Enter Size");
                //$("#SD_Breakage_Qty_Nos").val("");
                //$("#SD_Breakage_Qty_M").val("");
                //$("#SD_Breakage_Per").val("");
            }
            else {
                var BreakageQtyNos = $("#SD_Breakage_Qty_Nos").val();
                $("#SD_Breakage_Qty_M").val("");
                $("#SD_Breakage_Per").val("");

                if (isNaN(BreakageQtyNos)) {
                    $("#SD_Breakage_Qty_Nos").val("");
                }
                else {
                    var Supplied_Qty_Nos = $("#SD_Supplied_Qty_Nos").val();


                    if (parseFloat(BreakageQtyNos) > parseFloat(Supplied_Qty_Nos)) {
                        //$("#SD_Breakage_Qty_Nos").val("");
                        //$("#SD_Breakage_Qty_M").val("");
                        //$("#SD_Breakage_Per").val("");
                        //alert("Breakage Quantity cannot be morethan Supply Quantity");
                    }
                    else {

                    }

                    var BreakageQty_M = parseFloat(BreakageQtyNos) * Size;
                    BreakageQtyNos = Math.round(BreakageQtyNos * 10000) / 10000;
                    BreakageQty_M = Math.round(BreakageQty_M * 10000) / 10000;
                    $("#SD_Breakage_Qty_Nos").val(BreakageQtyNos);
                    $("#SD_Breakage_Qty_M").val(BreakageQty_M);

                    Supplied_Qty_Nos = Math.round(Supplied_Qty_Nos * 10000) / 10000;

                    var BreakagePercent = (parseFloat(BreakageQtyNos) / parseFloat(Supplied_Qty_Nos)) * 100;


                    if (isNaN(BreakagePercent) || BreakagePercent == Infinity) {
                        $("#SD_Breakage_Per").val("0");
                    }
                    else {
                        BreakagePercent = Math.round(BreakagePercent * 100) / 100;
                        $("#SD_Breakage_Per").val(BreakagePercent);
                    }
                }
            }
        }
        catch (e) {
            alert("Error : BreakageQuantityNosChange : " + e);
        }

    }




    //Supply Deatils Business Validation
    function SizeChangeDangers() {

        var SD_Size_M = $("#SD_Size_M").val();

        if (SD_Size_M == "" || isNaN(SD_Size_M)) {
            alert("Enter valid Size");
            $("#SD_Size_M").val("");
            return;
        }
        else {

            SD_Size_M = Math.round(SD_Size_M * 10000) / 10000;
            $("#SD_Size_M").val(SD_Size_M);

            var SupNos = $("#SD_Supplied_Qty_Nos").val();
            if (SupNos == "") {
            }
            else {
                SupNos = Math.round(SupNos * 10000) / 10000;
                $("#SD_Supplied_Qty_Nos").val(SupNos);
                var SupM = parseFloat(SupNos) * parseFloat(SD_Size_M);
                SupM = Math.round(SupM * 10000) / 10000;
                $("#SD_Supplied_Qty_M").val(SupM);
            }

            var Breakage = $("#SD_Breakage_Qty_Nos").val();

            if (Breakage == "") {
            }
            else {
                Breakage = Math.round(Breakage * 10000) / 10000;
                $("#SD_Breakage_Qty_Nos").val(Breakage);
                var BreakM = parseFloat(Breakage) * parseFloat(SD_Size_M);
                BreakM = Math.round(BreakM * 10000) / 10000;
                $("#SD_Breakage_Qty_M").val(BreakM);
            }


            var SupNos = $("#SD_Supplied_Qty_Nos").val();
            var BrkNos = $("#SD_Breakage_Qty_Nos").val();

            if (SupNos == "" || BrkNos == "") {
                $("#SD_Breakage_Per").val("");
            }
            else {
                var Percent = (((parseFloat(BrkNos)) / (parseFloat(SupNos))) * 100);
                Percent = Math.round(Percent * 100) / 100;
                $("#SD_Breakage_Per").val(Percent);
            }

        }
    }




    //Supply Deatils Business Validation
    function Total_Supply_Oty_MtrsChange() {
        try {

            if ($("#Product_CategoryCode").val() == "11") {

                var A1 = $("#Total_Supply_Oty_Mtrs").val();

                if (A1 == "" || isNaN(A1)) {
                    $("#Total_Supply_Oty_Mtrs").val("");
                    $("#Total_Supply_Qty_Tons").val("");
                }
                else {
                    A1 = Math.round(A1 * 10000) / 10000;
                    $("#Total_Supply_Oty_Mtrs").val(A1);
                    A1 = parseFloat(A1) * 0.01269;
                    A1 = Math.round(A1 * 10000) / 10000;
                    $("#Total_Supply_Qty_Tons").val(A1);


                    var A2 = $("#Total_Breakage_Qty_Mtrs").val();
                    A1 = $("#Total_Supply_Oty_Mtrs").val();


                    if (parseFloat(A2) > parseFloat(A1)) {
                        alert("Total Supply cannot be morethan Total Breakage");

                        $("#Total_Supply_Oty_Mtrs").val("");
                        $("#Total_Supply_Qty_Tons").val("");
                        $("#Total_Supply_Oty_Mtrs").focus();

                        //$("#Total_Breakage_Qty_Mtrs").val("");
                        //$("#Total_Breakage_Qty_Tons").val("");
                        //$("#Total_Breakage_Qty_Mtrs").focus();
                    }
                    else {
                    }
                    //Total_Breakage_Qty_MtrsChange();
                }
            }
            else if ($("#Product_CategoryCode").val() == "15") {
                var A1 = $("#Total_Supply_Oty_Mtrs").val();

                if (A1 == "" || isNaN(A1)) {
                    $("#Total_Supply_Oty_Mtrs").val("");
                    $("#Total_Supply_Qty_Tons").val("");
                }
                else {
                    A1 = Math.round(A1 * 10000) / 10000;
                    $("#Total_Supply_Oty_Mtrs").val(A1);
                    //if ($("#Product_Category").val() != "Fortune20") {
                    //    A1 = parseFloat(A1) * 0.0105;
                    //} else {
                    //    A1 = parseFloat(A1) * 0.0123;
                    //}
                    if ($('#fortune20_check').val() == "TRUE") {
                        A1 = parseFloat(A1) * (0.0123);
                    } else {
                        A1 = parseFloat(A1) * (0.0105);
                    }
                    A1 = Math.round(A1 * 10000) / 10000;
                    $("#Total_Supply_Qty_Tons").val(A1);


                    var A2 = $("#Total_Breakage_Qty_Mtrs").val();
                    A1 = $("#Total_Supply_Oty_Mtrs").val();


                    if (parseFloat(A2) > parseFloat(A1)) {
                        alert("Total Supply cannot be morethan Total Breakage");
                        $("#Total_Supply_Oty_Mtrs").val("");
                        $("#Total_Supply_Qty_Tons").val("");
                        $("#Total_Supply_Oty_Mtrs").focus();

                        //$("#Total_Breakage_Qty_Mtrs").val("");
                        //$("#Total_Breakage_Qty_Tons").val("");
                        //$("#Total_Breakage_Qty_Mtrs").focus();
                    }
                    else {
                    }
                    //Total_Breakage_Qty_MtrsChange();
                }
            }
        }
        catch (e) {
            alert("Error : Total_Supply_Oty_MtrsChange : " + e);
        }
    }


    //Supply Deatils Business Validation
    function Total_Supply_Qty_TonsChange() {
        try {
            var B1 = $("#Total_Supply_Qty_Tons").val();

            if (B1 == "" || isNaN(B1)) {
                $("#Total_Supply_Oty_Mtrs").val("");
                $("#Total_Supply_Qty_Tons").val("");
            }
            else {
                B1 = Math.round(B1 * 10000) / 10000;
                $("#Total_Supply_Qty_Tons").val(B1);
                B1 = ((parseFloat(B1)) * (1 / 0.01269));
                B1 = Math.round(B1 * 10000) / 10000;
                $("#Total_Supply_Oty_Mtrs").val(B1);
            }

            $("#Total_Breakage_Qty_Mtrs").val("");
            $("#Total_Recovery_Mtrs").val("");
            $("#Net_Loss_Mtrs").val("");

            $("#Total_Breakage_Qty_Tons").val("");
            $("#Total_Recovery_Tons").val("");
            $("#Net_Loss_Tons").val("");
        }
        catch (e) {
            alert("Error Total_Supply_Qty_TonsChange : " + e);
        }
    }


    //Supply Deatils Business Validation
    function Total_Breakage_Qty_MtrsChange() {
        try {
            if ($("#Product_CategoryCode").val() == "11") {
                var A1 = $("#Total_Supply_Oty_Mtrs").val();

                if (A1 == "") {
                    alert("Please Enter Supply Quantity");
                    $("#Total_Breakage_Qty_Mtrs").val("");
                    $("#Total_Breakage_Qty_Tons").val("");
                }
                else {
                    var A2 = $("#Total_Breakage_Qty_Mtrs").val();

                    if (A2 == "" || isNaN(A2)) {
                        $("#Total_Breakage_Qty_Mtrs").val("");
                        $("#Total_Breakage_Qty_Tons").val("");
                        alert("Invalid Entry");
                    }
                    else {
                        A2 = Math.round(A2 * 10000) / 10000;


                        if (parseFloat(A2) > parseFloat(A1)) {
                            alert("Breakage Quantity has to be lessthan Supply Quantity");
                            $("#Total_Breakage_Qty_Mtrs").val("");
                            $("#Total_Breakage_Qty_Tons").val("");
                            $("#Total_Breakage_Qty_Mtrs").focus();
                        }
                        else {

                            var A3 = $("#Total_Recovery_Mtrs").val();

                            if (A3 > A2) {
                                alert("Total Breakage should be morethan Total Recovery");
                                A2 = $("#Total_Breakage_Qty_Mtrs").val();
                                A2 = parseFloat(A2) * 0.01269;
                                A2 = Math.round(A2 * 10000) / 10000;
                                $("#Total_Breakage_Qty_Tons").val(A2);
                                $("#Total_Recovery_Mtrs").val("");
                                $("#Total_Recovery_Tons").val("");
                                $("#Total_Recovery_Mtrs").focus();

                                return;
                            }
                            else {

                                console.clear();

                                $("#Total_Breakage_Qty_Mtrs").val(A2);
                                A2 = parseFloat(A2) * 0.01269;
                                A2 = Math.round(A2 * 10000) / 10000;
                                $("#Total_Breakage_Qty_Tons").val(A2);

                                A2 = $("#Total_Breakage_Qty_Mtrs").val();
                                A3 = $("#Total_Recovery_Mtrs").val();

                                if (A2 == "" || A3 == "") {
                                    $("#Net_Loss_Mtrs").val("");
                                    $("#Net_Loss_Tons").val("");
                                }
                                else {
                                    var A4 = parseFloat(A2) - parseFloat(A3);
                                    A4 = Math.round(A4 * 10000) / 10000;

                                    $("#Net_Loss_Mtrs").val(A4);
                                    A4 = parseFloat(A4) * 0.01269;
                                    A4 = Math.round(A4 * 10000) / 10000;
                                    $("#Net_Loss_Tons").val(A4);
                                }

                            }
                        }
                    }
                }
            }
            else if ($("#Product_CategoryCode").val() == "15") {
                var A1 = $("#Total_Supply_Oty_Mtrs").val();
                if (A1 == "") {
                    alert("Please Enter Supply Quantity");
                    $("#Total_Breakage_Qty_Mtrs").val("");
                    $("#Total_Breakage_Qty_Tons").val("");
                }
                else {
                    var A2 = $("#Total_Breakage_Qty_Mtrs").val();

                    if (A2 == "" || isNaN(A2)) {
                        $("#Total_Breakage_Qty_Mtrs").val("");
                        $("#Total_Breakage_Qty_Tons").val("");
                        alert("Invalid Entry");
                    }
                    else {
                        A2 = Math.round(A2 * 10000) / 10000;


                        if (parseFloat(A2) > parseFloat(A1)) {
                            alert("Breakage Quantity has to be lessthan Supply Quantity");
                            $("#Total_Breakage_Qty_Mtrs").val("");
                            $("#Total_Breakage_Qty_Tons").val("");
                            $("#Total_Breakage_Qty_Mtrs").focus();
                        }
                        else {

                            var A3 = $("#Total_Recovery_Mtrs").val();

                            if (A3 > A2) {
                                alert("Total Breakage should be morethan Total Recovery");
                                A2 = $("#Total_Breakage_Qty_Mtrs").val();
                                //if ($("#Product_Category").val() != "Fortune20") {
                                //    A2 = parseFloat(A2) * 0.0105;
                                //} else {
                                //    A2 = parseFloat(A2) * 0.0123;
                                //}

                                if ($('#fortune20_check').val() == "TRUE") {
                                    A2 = parseFloat(A2) * (0.0123);
                                } else {
                                    A2 = parseFloat(A2) * (0.0105);
                                }

                                A2 = Math.round(A2 * 10000) / 10000;
                                $("#Total_Breakage_Qty_Tons").val(A2);
                                $("#Total_Recovery_Mtrs").val("");
                                $("#Total_Recovery_Tons").val("");
                                $("#Total_Recovery_Mtrs").focus();

                                return;
                            }
                            else {

                                console.clear();

                                $("#Total_Breakage_Qty_Mtrs").val(A2);
                                //if ($("#Product_Category").val() != "Fortune20") {
                                //    A2 = parseFloat(A2) * 0.0105;
                                //} else {
                                //    A2 = parseFloat(A2) * 0.0123;
                                //}

                                if ($('#fortune20_check').val() == "TRUE") {
                                    A2 = parseFloat(A2) * (0.0123);
                                } else {
                                    A2 = parseFloat(A2) * (0.0105);
                                }

                                A2 = Math.round(A2 * 10000) / 10000;
                                $("#Total_Breakage_Qty_Tons").val(A2);

                                A2 = $("#Total_Breakage_Qty_Mtrs").val();
                                A3 = $("#Total_Recovery_Mtrs").val();

                                if (A2 == "" || A3 == "") {
                                    $("#Net_Loss_Mtrs").val("");
                                    $("#Net_Loss_Tons").val("");
                                }
                                else {
                                    var A4 = parseFloat(A2) - parseFloat(A3);
                                    A4 = Math.round(A4 * 10000) / 10000;

                                    $("#Net_Loss_Mtrs").val(A4);
                                    //if ($("#Product_Category").val() != "Fortune20") {
                                    //    A4 = parseFloat(A4) * 0.0105;
                                    //} else {
                                    //    A4 = parseFloat(A4) * 0.0123;
                                    //}

                                    if ($('#fortune20_check').val() == "TRUE") {
                                        A4 = parseFloat(A4) * (0.0123);
                                    } else {
                                        A4 = parseFloat(A4) * (0.0105);
                                    }

                                    A4 = Math.round(A4 * 10000) / 10000;
                                    $("#Net_Loss_Tons").val(A4);
                                }

                            }
                        }
                    }
                }
            }
            else if ($("#Product_CategoryCode").val() == "14") {
                var A1 = $("#Total_Supply_Oty_Mtrs").val();

                if (A1 == "") {
                    alert("Please Enter Supply Quantity");
                    $("#Total_Breakage_Qty_Mtrs").val("");
                    $("#Total_Breakage_Qty_Tons").val("");
                }
                else {
                    var A2 = $("#Total_Breakage_Qty_Mtrs").val();

                    if (A2 == "" || isNaN(A2)) {
                        $("#Total_Breakage_Qty_Mtrs").val("");
                    }
                    else {
                        A2 = Math.round(A2 * 10000) / 10000;
                        $("#Total_Breakage_Qty_Mtrs").val(A2);

                        if (parseFloat(A2) > parseFloat(A1)) {
                            alert("Breakage Quantity has to be lessthan Supply Quantity");
                            $("#Total_Breakage_Qty_Mtrs").val("");
                            $("#Total_Breakage_Qty_Mtrs").focus();
                        }
                        else {

                            var A3 = $("#Total_Recovery_Mtrs").val();

                            if (A3 == "") {

                            }
                            else if (A3 > A2) {
                                alert("Total Breakage should be morethan Total Recovery");
                                $("#Total_Breakage_Qty_Mtrs").val("");
                                $("#Total_Breakage_Qty_Mtrs").focus();
                                return;
                            }
                            CalculateNetLoss();

                        }
                    }
                }
            }
        }
        catch (e) {
            alert("Error : Total_Breakage_Qty_MtrsChange : " + e);
        }
    }


    //Supply Deatils Business Validation
    function Total_Breakage_Qty_TonsChange() {

        try {

            if ($("#Product_CategoryCode").val() == "11") {
                var B1 = $("#Total_Supply_Qty_Tons").val();

                if (B1 == "") {
                    alert("Please Enter Supply Quantity");
                    $("#Total_Breakage_Qty_Mtrs").val("");
                    $("#Total_Breakage_Qty_Tons").val("");
                }
                else {
                    var B2 = $("#Total_Breakage_Qty_Tons").val();
                    $("#Total_Breakage_Qty_Mtrs").val("");

                    if (B2 == "" || isNaN(B2)) {
                        $("#Total_Breakage_Qty_Mtrs").val("");
                        $("#Total_Breakage_Qty_Tons").val("");
                    }
                    else {
                        B2 = Math.round(B2 * 10000) / 10000;
                        if (B2 > B1) {
                            alert("Breakage Quantity has to be lessthan Supply Quantity");
                            $("#Total_Breakage_Qty_Mtrs").val("");
                            $("#Total_Breakage_Qty_Tons").val("");
                        }
                        else {
                            $("#Total_Breakage_Qty_Tons").val(B2);
                            B2 = parseFloat(B2) * (1 / 0.01269);
                            B2 = Math.round(B2 * 10000) / 10000;
                            $("#Total_Breakage_Qty_Mtrs").val(B2);
                        }
                    }
                }
            }
            if ($("#Product_CategoryCode").val() == "15") {
                var B1 = $("#Total_Supply_Qty_Tons").val();
                if (B1 == "") {
                    alert("Please Enter Supply Quantity");
                    $("#Total_Breakage_Qty_Mtrs").val("");
                    $("#Total_Breakage_Qty_Tons").val("");
                }
                else {
                    var B2 = $("#Total_Breakage_Qty_Tons").val();
                    $("#Total_Breakage_Qty_Mtrs").val("");

                    if (B2 == "" || isNaN(B2)) {
                        $("#Total_Breakage_Qty_Mtrs").val("");
                        $("#Total_Breakage_Qty_Tons").val("");
                    }
                    else {
                        B2 = Math.round(B2 * 10000) / 10000;
                        if (B2 > B1) {
                            alert("Breakage Quantity has to be lessthan Supply Quantity");
                            $("#Total_Breakage_Qty_Mtrs").val("");
                            $("#Total_Breakage_Qty_Tons").val("");
                        }
                        else {
                            $("#Total_Breakage_Qty_Tons").val(B2);
                            //if ($("#Product_Category").val() != "Fortune20") {
                            //    B2 = parseFloat(B2) * (1 / 0.0105);
                            //} else {
                            //    B2 = parseFloat(B2) * (1 / 0.0123);
                            //}

                            if ($('#fortune20_check').val() == "TRUE") {
                                B2 = parseFloat(B2) * (1 / 0.0123)
                            } else {
                                B2 = parseFloat(B2) * (1 / 0.0105)
                            }

                            B2 = Math.round(B2 * 10000) / 10000;
                            $("#Total_Breakage_Qty_Mtrs").val(B2);
                        }
                    }
                }
            }
            if ($("#Product_CategoryCode").val() == "14") {

                var B1 = $("#Total_Supply_Qty_Tons").val();
                var B2 = $("#Total_Breakage_Qty_Tons").val();

                if (parseFloat(B1) <= parseFloat(B2)) {
                    alert("Breakage Tons Cannot Be Morethan Supply Tons");
                    $("#Total_Breakage_Qty_Tons").val("");
                    return;
                }
                else {
                    if ($("#Total_Recovery_Tons").val() == "") {

                    }
                    else {
                        var B3 = $("#Total_Recovery_Tons").val();

                        if (B3 > B2) {

                        }
                        else {
                            CalculateNetLoss();
                        }
                    }

                }
            }
        }


        catch (e) {
            alert("Error : Total_Breakage_Qty_TonsChange : " + e);
        }

    }


    //Supply Deatils Business Validation
    function Total_Recovery_MtrsChange() {
        debugger
        try {
            if ($("#Product_CategoryCode").val() == "11") {
                var A3 = $("#Total_Recovery_Mtrs").val();
                var A2 = $("#Total_Breakage_Qty_Mtrs").val();

                if (A2 == "") {
                    alert("Please enter Supply and Breakage Quantities");
                    $("#Total_Recovery_Mtrs").val("");
                    $("#Total_Recovery_Tons").val("");
                }
                else {
                    if (A3 == "" || isNaN(A3)) {
                        $("#Total_Recovery_Mtrs").val("");
                        $("#Total_Recovery_Tons").val("");
                    }
                    else {
                        A3 = Math.round(A3 * 10000) / 10000;
                        if (parseFloat(A3) > parseFloat(A2)) {
                            alert("Recovery Quantity cannot be more than Breakage Quantity");
                            $("#Total_Recovery_Mtrs").val("");
                            $("#Total_Recovery_Tons").val("");
                        }
                        else {
                            $("#Total_Recovery_Mtrs").val(A3);
                            A3 = parseFloat(A3) * 0.01269;
                            A3 = Math.round(A3 * 10000) / 10000;
                            $("#Total_Recovery_Tons").val(A3);
                        }
                    }
                }
                $("#Net_Loss_Mtrs").val("");
                $("#Net_Loss_Tons").val("");
            }
            else if ($("#Product_CategoryCode").val() == "15") {
                var A3 = $("#Total_Recovery_Mtrs").val();
                var A2 = $("#Total_Breakage_Qty_Mtrs").val();
                if (A2 == "") {
                    alert("Please enter Supply and Breakage Quantities");
                    $("#Total_Recovery_Mtrs").val("");
                    $("#Total_Recovery_Tons").val("");
                }
                else {
                    if (A3 == "" || isNaN(A3)) {
                        $("#Total_Recovery_Mtrs").val("");
                        $("#Total_Recovery_Tons").val("");
                    }
                    else {
                        A3 = Math.round(A3 * 10000) / 10000;
                        if (parseFloat(A3) > parseFloat(A2)) {
                            alert("Recovery Quantity cannot be more than Breakage Quantity");
                            $("#Total_Recovery_Mtrs").val("");
                            $("#Total_Recovery_Tons").val("");
                        }
                        else {
                            $("#Total_Recovery_Mtrs").val(A3);
                            //if ($("#Product_Category").val() != "Fortune20") {
                            //    A3 = parseFloat(A3) * 0.0105;
                            //} else {
                            //    A3 = parseFloat(A3) * 0.0123;
                            //}

                            if ($('#fortune20_check').val() == "TRUE") {
                                A3 = parseFloat(A3) * (0.0123);
                            } else {
                                A3 = parseFloat(A3) * (0.0105);
                            }

                            A3 = Math.round(A3 * 10000) / 10000;
                            $("#Total_Recovery_Tons").val(A3);
                        }
                    }
                }
                $("#Net_Loss_Mtrs").val("");
                $("#Net_Loss_Tons").val("");
            }
            else {
                var A3 = $("#Total_Recovery_Mtrs").val();
                var A2 = $("#Total_Breakage_Qty_Mtrs").val();

                if (A2 == "") {
                    alert("Please enter Supply and Breakage Quantities");
                    $("#Total_Recovery_Mtrs").val("");
                }
                else {
                    if (A3 == "" || isNaN(A3)) {
                        $("#Total_Recovery_Mtrs").val("");
                    }
                    else {
                        A3 = Math.round(A3 * 10000) / 10000;
                        if (parseFloat(A3) > parseFloat(A2)) {
                            alert("Recovery Quantity cannot be more than Breakage Quantity");
                            $("#Total_Recovery_Mtrs").val("");
                        }
                        else {
                            $("#Total_Recovery_Mtrs").val(A3);
                            A2 = $("#Total_Breakage_Qty_Mtrs").val();
                        }
                    }
                }
            }
            CalculateNetLoss();
        }
        catch (e) {
            alert("Error : Total_Recovery_MtrsChange : " + e);
        }

    }


    //Supply Deatils Business Validation
    function Total_Recovery_TonsChange() {
        try {

            if ($("#Product_CategoryCode").val() == "11") {

                var B3 = $("#Total_Recovery_Tons").val();
                var B2 = $("#Total_Breakage_Qty_Tons").val();

                if (B2 == "") {
                    alert("Please enter Supply and Breakage Quantities");
                    $("#Total_Recovery_Tons").val("");
                    $("#Total_Recovery_Mtrs").val("");
                }
                else {
                    if (B3 == "" || isNaN(B3)) {
                        $("#Total_Recovery_Tons").val("");
                        $("#Total_Recovery_Mtrs").val("");
                    }
                    else {
                        B3 = Math.round(B3 * 10000) / 10000;
                        if (B3 > B2) {
                            alert("Recovery Quantity cannot be more than Breakage Quantity");
                            $("#Total_Recovery_Tons").val("");
                            $("#Total_Recovery_Mtrs").val("");
                        }
                        else {
                            $("#Total_Recovery_Tons").val(B3);
                            B3 = (parseFloat(B3) * (1 / 0.01269));
                            B3 = Math.round(B3 * 10000) / 10000;
                            $("#Total_Recovery_Mtrs").val(B3);
                        }
                    }
                }
                $("#Net_Loss_Mtrs").val("");
                $("#Net_Loss_Tons").val("");
            }
            else if ($("#Product_CategoryCode").val() == "15") {
                var B3 = $("#Total_Recovery_Tons").val();
                var B2 = $("#Total_Breakage_Qty_Tons").val();

                if (B2 == "") {
                    alert("Please enter Supply and Breakage Quantities");
                    $("#Total_Recovery_Tons").val("");
                    $("#Total_Recovery_Mtrs").val("");
                }
                else {
                    if (B3 == "" || isNaN(B3)) {
                        $("#Total_Recovery_Tons").val("");
                        $("#Total_Recovery_Mtrs").val("");
                    }
                    else {
                        B3 = Math.round(B3 * 10000) / 10000;
                        if (B3 > B2) {
                            alert("Recovery Quantity cannot be more than Breakage Quantity");
                            $("#Total_Recovery_Tons").val("");
                            $("#Total_Recovery_Mtrs").val("");
                        }
                        else {
                            $("#Total_Recovery_Tons").val(B3);
                            //if ($("#Product_Category").val() != "Fortune20") {
                            //    B3 = (parseFloat(B3) * (1 / 0.0105));
                            //} else {
                            //    B3 = (parseFloat(B3) * (1 / 0.0123));
                            //}

                            if ($('#fortune20_check').val() == "TRUE") {
                                B3 = (parseFloat(B3) * (1 / 0.0123));
                            } else {
                                B3 = (parseFloat(B3) * (1 / 0.0105));
                            }

                            B3 = Math.round(B3 * 10000) / 10000;
                            $("#Total_Recovery_Mtrs").val(B3);
                        }
                    }
                }
                $("#Net_Loss_Mtrs").val("");
                $("#Net_Loss_Tons").val("");
            }
            else if ($("#Product_CategoryCode").val() == "14") {

                var B2 = $("#Total_Breakage_Qty_Tons").val();
                var B3 = $("#Total_Recovery_Tons").val();

                if (parseFloat(B2) < parseFloat(B3)) {
                    alert("Breakage Tons Cannot be Morethan Recovery Tons");
                    $("#Total_Recovery_Tons").val("");
                    return;
                }
                else {
                    B3 = Math.round(B3 * 10000) / 10000;
                    $("#Total_Recovery_Tons").val(B3);
                    var B4 = parseFloat(B2) - parseFloat(B3);
                    $("#Net_Loss_Tons").val(B4);
                }
                CalculateNetLoss();
            }


        }
        catch (e) {
            alert("Error : Total_Recovery_TonsChange : " + e);
        }

    }




    //Supply Deatils Business Validation
    function CalculateNetLoss() {
        debugger
        try {
            if ($("#Product_CategoryCode").val() == "11") {
                var A2 = $("#Total_Breakage_Qty_Mtrs").val();
                var A3 = $("#Total_Recovery_Mtrs").val();

                if (A2 == "" || A3 == "") {
                    $("#Net_Loss_Mtrs").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Running_Meters").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
                else {
                    var A = parseFloat(A2) - parseFloat(A3);
                    A = Math.round(A * 10000) / 10000;
                    $("#Net_Loss_Mtrs").val(A);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Running_Meters").val(A);
                    $("#Compensation_In_Running_Meter_Words").val(toWords1($("#Compensation_In_Running_Meters").val()));
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }

                var B2 = $("#Total_Breakage_Qty_Tons").val();
                var B3 = $("#Total_Recovery_Tons").val();

                if (B2 == "" || B3 == "") {
                    $("#Net_Loss_Tons").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Tons").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
                else {
                    var B = parseFloat(B2) - parseFloat(B3);
                    B = Math.round(B * 10000) / 10000;
                    $("#Net_Loss_Tons").val(B);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Tons").val(B);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
            }
            else if ($("#Product_CategoryCode").val() == "15") {
                var A2 = $("#Total_Breakage_Qty_Mtrs").val();
                var A3 = $("#Total_Recovery_Mtrs").val();
                if (A2 == "" || A3 == "") {
                    $("#Net_Loss_Mtrs").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Running_Meters").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
                else {
                    var A = parseFloat(A2) - parseFloat(A3);
                    A = Math.round(A * 10000) / 10000;
                    $("#Net_Loss_Mtrs").val(A);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Running_Meters").val(A);
                    $("#Compensation_In_Running_Meter_Words").val(toWords1($("#Compensation_In_Running_Meters").val()));
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }

                var B2 = $("#Total_Breakage_Qty_Tons").val();
                var B3 = $("#Total_Recovery_Tons").val();

                if (B2 == "" || B3 == "") {
                    $("#Net_Loss_Tons").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Tons").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
                else {
                    var B = parseFloat(B2) - parseFloat(B3);
                    B = Math.round(B * 10000) / 10000;
                    $("#Net_Loss_Tons").val(B);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Tons").val(B);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
            }
            else if ($("#Product_CategoryCode").val() == "14") {

                var A2 = $("#Total_Breakage_Qty_Mtrs").val();
                var A3 = $("#Total_Recovery_Mtrs").val();

                //alert(A2 + "\t" + A3);

                var A4 = $("#Net_Loss_Mtrs").val();

                if (A2 == "" || A3 == "") {
                    $("#Net_Loss_Mtrs").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Running_Meters").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
                else {
                    A4 = parseFloat(A2) - parseFloat(A3);

                    A4 = Math.round(parseFloat(A4) * 10000) / 10000;
                    $("#Net_Loss_Mtrs").val(A4);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Running_Meters").val(A4);
                    $("#Compensation_In_Running_Meter_Words").val(toWords1($("#Compensation_In_Running_Meters").val()));
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }

                var B2 = $("#Total_Breakage_Qty_Tons").val();
                var B3 = $("#Total_Recovery_Tons").val();
                var B4 = $("#Net_Loss_Tons").val();

                if (B2 == "" || B3 == "") {
                    $("#Net_Loss_Tons").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Tons").val("");
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
                else {
                    B4 = parseFloat(B2) - parseFloat(B3);
                    B4 = Math.round(parseFloat(B4) * 10000) / 10000;
                    $("#Net_Loss_Tons").val(B4);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                    $("#Compensation_In_Tons").val(B4);
                    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                }
            }
            setNo_of_36value();
            //svprasadk 05-10-2020 SBU 1 requirement to get data from supply details to material supply details start
            sdtomsd();
            //svprasadk 05-10-2020 SBU 1 requirement to get data from supply details to material supply details end
        }
        catch (e) {
            alert("Error : CalculateNetLoss : " + e);
        }
    }


    //Quantity Change Validations in Material Supply Details
    function MSD_QuantityChanges(Identity) {
        try {
            var IPData = $("#" + Identity).val();

            if (IPData == "" || IPData == null || IPData == undefined || isNaN(IPData)) {
                $("#" + Identity).val("");
            }
            else {
                $("#" + Identity).val(Math.round(IPData * 10000) / 10000);
            }
        }
        catch (e) {
            alert("Error : MSD_QuantityChanges : " + e);
        }
    }


    function MSD_QuantityChangesBU3(Identity) {
        try {
            var IPData = $("#" + Identity).val();

            if (IPData == "" || IPData == null || IPData == undefined || isNaN(IPData)) {
                $("#" + Identity).val("");
            }
            else {
                $("#" + Identity).val(parseInt(IPData));
            }
        }
        catch (e) {
            alert("Error : MSD_QuantityChanges : " + e);
        }
    }



    //Supply Details Quantity Changes for Aerocon and Insulation
    function SDMBSuppliedBreakageQtyChange(Identity) {
        try {

            var Supplied = $("#SuppliedQtyNosB").val();
            var Breakage = $("#BreakageQtyNosB").val();

            if (Supplied == "" || Supplied == undefined || Supplied == null || isNaN(Supplied)) {
                $("#SuppliedQtyNosB").val("");
                Supplied = "";
            }
            else {
                $("#SuppliedQtyNosB").val(parseInt(Supplied));
            }

            if (Breakage == "" || Breakage == undefined || Breakage == null || isNaN(Breakage)) {
                $("#BreakageQtyNosB").val("");
                Breakage = "";
            }
            else {
                $("#BreakageQtyNosB").val(parseInt(Breakage));
            }

            if (Supplied == "" || Breakage == "") {

            }
            else {
                if (parseInt(Breakage) > parseInt(Supplied)) {
                    alert("Breakage Quantity cannot be more than Supplied Quantity");
                    $("#BreakageQtyNosB").val("");
                }
            }
            var BU = $("#Product_Type_CODE").val();
            var Productcode = $("#Product_Category_CODE").val();

            var Supply = $("#SD_SuppliedQtyNos_BU8").val();
            var Breakage = $("#SD_BreakageQtyNos_BU8").val();
            var Defectprct = $("#SD_DefectPercnt_BU8").val();

            Defectprct = ((Breakage / Supply) * 100);
            var DefectPercentage = Math.round(Defectprct);
            var DefectPercentagenew = roundNumber(Defectprct, 3);

            $("#SD_DefectPercnt_BU8").val(DefectPercentagenew);

        }
        catch (e) {
            alert("Error : SDMBSuppliedBreakageQtyChange : " + e);
        }
    }

    function SDMB3SuppliedBreakageQtyChange(Identity) {
        try {
            debugger
            var Supplied = $("#SuppliedQtyNosBU3").val();
            var Breakage = $("#DefectiveQtyNosBU3").val();
            var Actual_Breakage = $("#ActDefectiveQtyNosBU3").val();
            if (Supplied == "" || Supplied == undefined || Supplied == null || isNaN(Supplied)) {
                $("#SuppliedQtyNosBU3").val("");
                Supplied = "";
            }
            else {
                $("#SuppliedQtyNosBU3").val(parseInt(Supplied));
            }

            if (Breakage == "" || Breakage == undefined || Breakage == null || isNaN(Breakage)) {
                $("#DefectiveQtyNosBU3").val("");
                Breakage = "";
            }
            else {
                $("#DefectiveQtyNosBU3").val(parseInt(Breakage));
            }
            if (Actual_Breakage == "" || Actual_Breakage == undefined || Actual_Breakage == null || isNaN(Actual_Breakage)) {
                $("#ActDefectiveQtyNosBU3").val("");
                Actual_Breakage = "";
            }
            else {
                $("#ActDefectiveQtyNosBU3").val(parseInt(Actual_Breakage));
            }

            if (Supplied == "" || Breakage == "") {

            }
            else {
                if (parseInt(Breakage) > parseInt(Supplied)) {
                    alert("Breakage Quantity cannot be more than Supplied Quantity");
                    $("#DefectiveQtyNosBU3").val("");
                }
            }
            if (Supplied == "" || Actual_Breakage == "") {

            }
            else {
                if (parseInt(Actual_Breakage) > parseInt(Supplied)) {
                    alert("Actual Breakage Quantity cannot be more than Supplied Quantity");
                    $("#ActDefectiveQtyNosBU3").val("");
                }
            }
            if (Actual_Breakage != "" || Actual_Breakage != undefined || Actual_Breakage != null) {
                var Supply = $("#SuppliedQtyNosBU3").val();
                var Breakage = $("#ActDefectiveQtyNosBU3").val();
                var Defectprct = $("#DefectprctBU8").val();

                Defectprct = ((Breakage / Supply) * 100);
                var DefectPercentage = Math.round(Defectprct);
                var DefectPercentagenew = roundNumber(Defectprct, 3);

                $("#DefectprctBU8").val(DefectPercentagenew);
            }
            else {
            }

        }
        catch (e) {
            alert("Error : SDMB3SuppliedBreakageQtyChange : " + e);
        }
    }




    //Supply Deatils Business Validation
    function SaveDataToServerInvestigation(TableName) {
        debugger
        try {

            var BusinessUnit = $("#Product_Type_CODE").val();
            var MaterialSupplyDetail = new Array();
            var Invoice_List = new Array();
            var Observation_Remarks = new Array();
            var Supply_Details = new Array();
            var Supply_DetailsB = new Array();
            var Breakage_Inspection_Sheet = new Array();
            var Site_Observation_Sheet = new Array();
            var Site_Observation_Sheet_SBU8 = "";
            console.log("BusinessUnit  : " + BusinessUnit)
            if (BusinessUnit == "SBU3") {
                var MSD_BU3 = new Array();
                $("#Material_Supply_Detail_Table_BU3 tbody tr").each(function () {
                    RowId = ($(this).attr("id"));
                    MSD_BU3.push({
                        SlNo: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[0].innerHTML,
                        ProdCode: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[1].innerHTML,
                        UOM: "EA",
                        SupQty: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[7].innerHTML,
                        DefQty: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[8].innerHTML,
                        ActDftQty: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[9].innerHTML,
                        PlantCode: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[10].innerHTML,
                        ProdSupFromCode: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[11].innerHTML,
                        NameCode: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[12].innerHTML
                    });
                });

            }
            else if (BusinessUnit == "SBU8") {
                var MSD_BU8 = new Array();
                $("#Material_Supply_Detail_Table_BU3 tbody tr").each(function () {
                    RowId = ($(this).attr("id"));
                    MSD_BU8.push({
                        SlNo: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[0].innerHTML,
                        ProdCode: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[1].innerHTML,
                        UOM: "EA",
                        SupQty: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[7].innerHTML,
                        DefQty: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[8].innerHTML,
                        ActDftQty: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[9].innerHTML,
                        PlantCode: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[10].innerHTML,
                        ProdSupFromCode: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[11].innerHTML,
                        NameCode: $("#Material_Supply_Detail_Table_BU3 tbody #" + RowId + " td")[12].innerHTML
                    });
                });

            }
            else if (BusinessUnit == "SBU1" || BusinessUnit == "SBU2") {
                MaterialSupplyDetail = new Array();
                $("#Material_Supply_Detail_Table tbody tr").each(function () {
                    RowId = ($(this).attr("id"));
                    MaterialSupplyDetail.push({
                        SlNo: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[0].innerHTML,
                        MaterialBelongsTo: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[1].innerHTML,
                        ProductSuppliedFrom: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[2].innerHTML,
                        Name: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[3].innerHTML,

                        UOM: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[4].innerHTML,
                        SupplyQty: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[5].innerHTML,
                        BreakageQty: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[6].innerHTML,
                        NetLossQty: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[7].innerHTML,


                        Material_Belongs_TO_ID: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[8].innerHTML,
                        Material_Belongs_TO_CODE: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[9].innerHTML,
                        Product_Supplied_From_ID: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[10].innerHTML,
                        Product_Supplied_From_CODE: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[11].innerHTML,

                        MSD_Name_ID: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[12].innerHTML,
                        MSD_Name_CODE: $("#Material_Supply_Detail_Table tbody #" + RowId + " td")[13].innerHTML

                    });
                });
            }
            Invoice_List = new Array();
            $("#Invoice_List_Table tbody tr").each(function () {
                RowId = ($(this).attr("id"));


                Invoice_List.push({
                    SlNo: $("#Invoice_List_Table tbody #" + RowId + " td")[0].innerHTML,
                    InvoiceNo: $("#Invoice_List_Table tbody #" + RowId + " td")[1].innerHTML,
                    InvoiceDate: $("#Invoice_List_Table tbody #" + RowId + " td")[2].innerHTML,
                    Remarks: $("#Invoice_List_Table tbody #" + RowId + " td")[3].innerHTML
                });

            });


            Observation_Remarks = new Array();
            $("#Observation_Remarks_Table tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                Observation_Remarks.push({
                    SlNo: $("#Observation_Remarks_Table tbody #" + RowId + " td")[0].innerHTML,
                    ObservationName: $("#Observation_Remarks_Table tbody #" + RowId + " td")[1].innerHTML,
                    ObservationCode: $("#Observation_Remarks_Table tbody #" + RowId + " td")[2].innerHTML,
                    ObservationId: $("#Observation_Remarks_Table tbody #" + RowId + " td")[3].innerHTML
                });
            });

            Supply_Details = new Array();
            $("#Supply_Details_Table tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                Supply_Details.push({
                    SlNo: $("#Supply_Details_Table tbody #" + RowId + " td")[0].innerHTML,
                    ItemTypeProductName: $("#Supply_Details_Table tbody #" + RowId + " td")[1].innerHTML,
                    Size_M: $("#Supply_Details_Table tbody #" + RowId + " td")[2].innerHTML,
                    GrossWtTons: $("#Supply_Details_Table tbody #" + RowId + " td")[3].innerHTML,

                    SuppliedQtyNos: $("#Supply_Details_Table tbody #" + RowId + " td")[4].innerHTML,
                    SuppliedQtyM: $("#Supply_Details_Table tbody #" + RowId + " td")[5].innerHTML,
                    SuppliedQtyTon: $("#Supply_Details_Table tbody #" + RowId + " td")[6].innerHTML,
                    BreakageQtyNos: $("#Supply_Details_Table tbody #" + RowId + " td")[7].innerHTML,

                    BreakageQtyM: $("#Supply_Details_Table tbody #" + RowId + " td")[8].innerHTML,
                    BreakageQtyTon: $("#Supply_Details_Table tbody #" + RowId + " td")[9].innerHTML,
                    BreakagePerc: $("#Supply_Details_Table tbody #" + RowId + " td")[10].innerHTML,
                    DefectType: $("#Supply_Details_Table tbody #" + RowId + " td")[11].innerHTML,

                    Remarks: $("#Supply_Details_Table tbody #" + RowId + " td")[12].innerHTML,


                    SD_Item_Type_Product_Name_ID: $("#Supply_Details_Table tbody #" + RowId + " td")[13].innerHTML,
                    SD_Item_Type_Product_Name_CODE: $("#Supply_Details_Table tbody #" + RowId + " td")[14].innerHTML,
                    SD_Defect_Type_ID: $("#Supply_Details_Table tbody #" + RowId + " td")[15].innerHTML,
                    SD_Defect_Type_CODE: $("#Supply_Details_Table tbody #" + RowId + " td")[16].innerHTML

                });
            });

            Supply_DetailsB = new Array();

            $("#Supply_Details_TableB tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                Supply_DetailsB.push({
                    SlNo: $("#Supply_Details_TableB tbody #" + RowId + " td")[0].innerHTML,

                    SD_Item_Type_Product_Name_CODEB: $("#Supply_Details_TableB tbody #" + RowId + " td")[1].innerHTML,
                    SD_Item_Type_Product_NameB: $("#Supply_Details_TableB tbody #" + RowId + " td")[2].innerHTML,
                    InvoiceNoB: $("#Supply_Details_TableB tbody #" + RowId + " td")[3].innerHTML,
                    InvoiceDateB: $("#Supply_Details_TableB tbody #" + RowId + " td")[4].innerHTML,
                    BatchNoB: $("#Supply_Details_TableB tbody #" + RowId + " td")[5].innerHTML,
                    SuppliedQtyNosB: $("#Supply_Details_TableB tbody #" + RowId + " td")[6].innerHTML,

                    BreakageQtyNosB: $("#Supply_Details_TableB tbody #" + RowId + " td")[7].innerHTML,
                    TransporterB: $("#Supply_Details_TableB tbody #" + RowId + " td")[8].innerHTML,
                    Defect_TypeB: $("#Supply_Details_TableB tbody #" + RowId + " td")[9].innerHTML,
                    RemarksB: $("#Supply_Details_TableB tbody #" + RowId + " td")[10].innerHTML,
                    AttachmentsB: "",

                    SD_Item_Type_Product_Name_IDB: "",
                    Defect_Type_IDB: "",
                    Defect_Type_CODEB: $("#Supply_Details_TableB tbody #" + RowId + " td")[11].innerHTML

                });
            });


            Breakage_Inspection_Sheet = new Array();
            $("#Breakage_Inspection_Sheet_Table tbody tr").each(function () {
                RowId = ($(this).attr("id"));
                Breakage_Inspection_Sheet.push({
                    SlNo: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[0].innerHTML,
                    Product: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[1].innerHTML,
                    Size: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[2].innerHTML,
                    BatchNo: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[3].innerHTML,
                    DefectType: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[4].innerHTML,
                    RecoveryProduct: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[5].innerHTML,
                    Recovery: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[6].innerHTML,

                    BISP_Defect_Type_ID: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[7].innerHTML,
                    BISP_Defect_Type_CODE: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[8].innerHTML,

                    BISP_Recovery_Product_ID: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[9].innerHTML,
                    BISP_Recovery_Product_CODE: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[10].innerHTML,

                    BISP_GrossWeight: $("#Breakage_Inspection_Sheet_Table tbody #" + RowId + " td")[11].innerHTML
                });
            });
            if (BusinessUnit == "SBU8") {
                //Site_Observation_Sheet = new Array();
                //Site_Observation_Sheet.push({
                //    Observation: $("#" + RowId + " td")[1].innerHTML
                //});
                
                Site_Observation_Sheet_SBU8 = $("#SiteObservationsRemarks_if_any").val();
            }
            else {

                Site_Observation_Sheet = new Array();
                $("#Site_Observation_Sheet_Table tbody tr").each(function () {
                    RowId = ($(this).attr("id"));
                    Site_Observation_Sheet.push({
                        SlNo: $("#Site_Observation_Sheet_Table tbody #" + RowId + " td")[0].innerHTML,
                        Observation: $("#Site_Observation_Sheet_Table tbody #" + RowId + " td")[1].innerHTML,
                        VerifiedOrNot: $("#Site_Observation_Sheet_Table tbody #" + RowId + " td")[2].innerHTML,
                        Comments: $("#Site_Observation_Sheet_Table tbody #" + RowId + " td")[3].innerHTML
                    });
                });
            }

            if (BusinessUnit == "SBU3") {
                var SupDetSD_BU3 = new Array();
                $("#Supply_Details_TableSBU3 tbody tr").each(function () {
                    RowId = ($(this).attr("id"));
                    SupDetSD_BU3.push({

                        SlNo: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[0].innerHTML,
                        ProdCode: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[1].innerHTML,
                        ProdName: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[2].innerHTML,
                        //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
                        PlantName: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[3].innerHTML,
                        InvNo: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[4].innerHTML,
                        InvDate: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[5].innerHTML,
                        BatNo: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[6].innerHTML,

                        Supp: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[7].innerHTML,
                        DefQty: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[8].innerHTML,
                        ActDefQty: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[9].innerHTML,

                        Transport: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[10].innerHTML,
                        DefName: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[11].innerHTML,
                        Remarks: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[12].innerHTML,

                        DefCode: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[13].innerHTML
                    });
                });
            }
            else if (BusinessUnit == "SBU8") {
                var SupDetSD_BU8 = new Array();
                $("#Supply_Details_TableSBU3 tbody tr").each(function () {
                    RowId = ($(this).attr("id"));
                    SupDetSD_BU8.push({

                        SlNo: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[0].innerHTML,
                        ProdCode: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[1].innerHTML,
                        ProdName: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[2].innerHTML,
                        PlantName: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[3].innerHTML,
                        InvNo: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[4].innerHTML,
                        InvDate: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[5].innerHTML,
                        BatNo: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[6].innerHTML,
                        Supp: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[7].innerHTML,
                        DefQty: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[8].innerHTML,
                        ActDefQty: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[9].innerHTML,
                        Transport: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[10].innerHTML,
                        DefName: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[11].innerHTML,
                        Defprct: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[12].innerHTML,
                        Remarks: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[13].innerHTML,
                        DefCode: $("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[15].innerHTML
                    });
                });
            }

            var NoticeType = "";
            if (($("#System").is(":checked")) == true) {
                NoticeType = "System";
            }
            else if (($("#Manual").is(":checked")) == true) {
                NoticeType = "Manual";
            }

            var TYPE_OF_COMPLAINT_ID = $("#TYPE_OF_COMPLAINT_ID").val()
            if (typeof TYPE_OF_COMPLAINT_ID == "undefined" || TYPE_OF_COMPLAINT_ID == "") {
                TYPE_OF_COMPLAINT_ID = 0;
            }

            var is_rejectable = 0;
            //console.log('is_rejectable', is_rejectable)
            if (document.getElementById("is_rejectable").checked == true) {
                is_rejectable = 1;
            }

            var InvestigationData = JSON.stringify({
                FormIdentity: $("#FormIdentity").val(),
                CreatedBy: $("#CreatedByCode").val(),
                Complaint_No: $("#Complaint_No").val(),

                Complaint_Tracking_No: $("#Complaint_Tracking_No").val(),
                Complaint_Received_Date: $("#Complaint_Received_Date").val(),
                Complaint_Registered_Date: $("#Complaint_Registered_Date").val(),
                Complaint_Attended_Date: $("#Complaint_Attended_Date").val(),
                Delay: $("#Delay").is(':checked'),
                DelayDays: $("#DelayDays").val(),
                DelayReason: $("#DelayReason").val(),

                Investigator_Type: $("#Investigator_Type").val(),
                Investigator_Type_CODE: $("#Investigator_Type_CODE").val(),
                Investigation_Done_By: $("#Investigation_Done_By").val(),
                Investigation_Done_By_CODE: $("#Investigation_Done_By_CODE").val(),
                Visited_Date: $("#Visited_Date").val(),
                Previous_Visit_Date: $("#Previous_Visit_Date").val(),
                SalesRepresentativeEmployeeCode: $("#SalesRepresentativeEmployeeCode").val(),
                SalesRepresentativeEmployeeName: $("#SalesRepresentativeEmployeeName").val(),

                Investigation_Id: $("#Investigation_Id").val(),
                IGS_Series_Code: $("#IGS_Series_Code").val(),
                Investigation_Date: $("#Investigation_Date").val(),
                Investigation_Status: $("#Investigation_Status").val(),
                Approval_Date: $("#Approval_Date").val(),
                NoticeType: NoticeType,

                Customer_Code: $("#Customer_Code").val(),
                Customer_Name: $("#Customer_Name").val(),
                Customer_Type: $("#Customer_Type").val(),
                Customer_Type_CODE: $("#Customer_Type_CODE").val(),
                Customer_Location: $("#Customer_Location").val(),
                Customer_Location_Code: $("#Customer_Location_Code").val(),
                Contact_City: $("#Contact_City").val(),
                Contact_City_Code: $("#Contact_City_Code").val(),
                Contact_State: $("#Contact_State").val(),
                Contact_State_CODE: $("#Contact_State_CODE").val(),
                Contact_Area: $("#Contact_Area").val(),
                Contact_Area_CODE: $("#Contact_Area_CODE").val(),

                Contact_Person: $("#Contact_Person").val(),
                Contact_Number: $("#Contact_Number").val(),
                Customer_Fax: $("#Customer_Fax").val(),
                Customer_Email: $("#Customer_Email").val(),
                Product_Type: $("#Product_Type").val(),
                Product_Type_CODE: $("#Product_Type_CODE").val(),

                Product_Category: $("#Product_Category").val(),
                Product_CategoryCode: $("#Product_CategoryCode").val(),

                SubStockiest_Direct_Customer: $("#SubStockiest_Direct_Customer").val(),
                Is_Project_Party: $("#Is_Project_Party").is(":checked"),
                Site_Address: $("#Site_Address").val(),

                Period_Based: $("#Period_Based").is(':checked'),
                Invoice_Based: $("#Invoice_Based").is(':checked'),
                InvDateSupplyFrom: $("#InvDateSupplyFrom").val(),
                InvDateSupplyTo: $("#InvDateSupplyTo").val(),

                SD_InvoiceDetails: $("#SD_InvoiceDetails").val(),
                SD_ProductDetails: $("#SD_ProductDetails").val(),

                Total_Supply_Oty_Mtrs: $("#Total_Supply_Oty_Mtrs").val(),
                Total_Breakage_Qty_Mtrs: $("#Total_Breakage_Qty_Mtrs").val(),
                Total_Recovery_Mtrs: $("#Total_Recovery_Mtrs").val(),
                Net_Loss_Mtrs: $("#Net_Loss_Mtrs").val(),

                Total_Supply_Qty_Tons: $("#Total_Supply_Qty_Tons").val(),
                Total_Breakage_Qty_Tons: $("#Total_Breakage_Qty_Tons").val(),
                Total_Recovery_Tons: $("#Total_Recovery_Tons").val(),
                Net_Loss_Tons: $("#Net_Loss_Tons").val(),

                Customer_Remarks_if_any: $("#Customer_Remarks_if_any").val(),
                Observations_by_official: $("#Observations_by_official").val(),
                IR_Remarks: $("#IR_Remarks").val(),
                NatureOfComplaint: $("#NatureOfComplaint").val(),
                ComplaintDescribedBySales: $("#ComplaintDescribedBySales").val(),
                ComplaintDescription: $("#ComplaintDescription").val(),
                ObservationByQAF: $("#ObservationByQAF").val(),

                SITEDETAIL_CODE: $("#SITEDETAIL_CODE").val(),
                COMPANYDETAIL_CODE: $("#COMPANYDETAIL_CODE").val(),

                CompRegID: $("#CompRegID").val(),
                CompRegDocSeries: $("#CompRegDocSeries").val(),
                CompRegDocNumber: $("#CompRegDocNumber").val(),

                COMPLAINT_TYPE_CODE: $("#COMPLAINT_TYPE_CODE").val(),
                COMPLAINT_TYPE_NAME: $("#COMPLAINT_TYPE_NAME").val(),

                COMPLAINT_CATEGORY_CODE: $("#COMPLAINT_CATEGORY_CODE").val(),
                COMPLAINT_CATEGORY_NAME: $("#COMPLAINT_CATEGORY_NAME").val(),

                MaterialSupplyDetail: MaterialSupplyDetail,
                Invoice_List: Invoice_List,
                Observation_Remarks: Observation_Remarks,

                Supply_Details: Supply_Details,
                Supply_DetailsB: Supply_DetailsB,
                Breakage_Inspection_Sheet: Breakage_Inspection_Sheet,
                Site_Observation_Sheet: Site_Observation_Sheet,
                Site_Observation_Sheet_BU8: $("#SiteObservationsRemarks_if_any").val(),
                MSD_BU3: MSD_BU3,
                SupDetSD_BU3: SupDetSD_BU3,
                MSD_BU8: MSD_BU8,
                SupDetSD_BU8: SupDetSD_BU8,


                //svprasadk 14-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
                Compensation_Mode_Code: (typeof $("#Compensation_Mode_Code").val() == "undefined") ? "" : $("#Compensation_Mode_Code").val(),
                Any_Special_Remarks: (typeof $("#Any_Special_Remarks").val() == "undefined") ? "" : $("#Any_Special_Remarks").val(),
                Compensation_In_Running_Meters: (typeof $("#Compensation_In_Running_Meters").val() == "undefined") ? "" : $("#Compensation_In_Running_Meters").val(),
                Compensation_In_Tons: (typeof $("#Compensation_In_Tons").val() == "undefined") ? "" : $("#Compensation_In_Tons").val(),
                Compensation_In_Running_Meter_Words: (typeof $("#Compensation_In_Running_Meter_Words").val() == "undefined") ? "" : $("#Compensation_In_Running_Meter_Words").val(),
                Size_Recommendation_RMTS: (typeof $("#Size_Recommendation_RMTS").val() == "undefined") ? "" : $("#Size_Recommendation_RMTS").val(),
                Other_Size_RMTS: (typeof $("#Other_Size_RMTS").val() == "undefined") ? "" : $("#Other_Size_RMTS").val(),
                CompensationInNos: (typeof $("#CompensationInNos").val() == "undefined") ? "" : $("#CompensationInNos").val(),
                CompensationInNosWords: (typeof $("#CompensationInNosWords").val() == "undefined") ? "" : $("#CompensationInNosWords").val(),
                CompensationinMetricCubic: (typeof $("#CompensationinMetricCubic").val() == "undefined") ? "" : $("#CompensationinMetricCubic").val(),
                CompensationinMetricCubicValue: (typeof $("#CompensationinMetricCubicValue").val() == "undefined") ? "" : $("#CompensationinMetricCubicValue").val(),
                CompensationIssueCreditNote: (typeof $("#CompensationIssueCreditNote").val() == "undefined") ? "" : $("#CompensationIssueCreditNote").val(),
                CompensationAmountCredited: (typeof $("#CompensationAmountCredited").val() == "undefined") ? "" : $("#CompensationAmountCredited").val(),
                //svprasadk 14-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
                //svprasadk 23-04-2020 SBU 1 requirement to add sub stockiest master start
                party_type: $("#party_type_id").val(),
                SubStockiest_Code: $("#SubStockiest_Code").val(),
                SubStockiest_ID: $("#SubStockiest_ID").val(),
                SubStockiest_Name: $("#SubStockiest_Name").val(),
                SubStockiest_Address: $("#SubStockiest_Address").val(),
                SubStockiest_Number: $("#SubStockiest_Number").val(),
                //svprasadk 23-04-2020 SBU 1 requirement to add sub stockiest master end
                //svprasadk 20-05-2020 SBU 1 requirement to add type of complaint start
                TYPE_OF_COMPLAINT: TYPE_OF_COMPLAINT_ID,
                //svprasadk 20-05-2020 SBU 1 requirement to add type of complaint end
                is_rejectable: is_rejectable
            });

            //console.log('InvestigationData', InvestigationData);

            $.ajax({
                method: 'POST',
                url: '../../ComplaintRegistration/SaveInvestigation',
                async: false,
                data: { InvestigationData: InvestigationData },
            }).then(function successCallback(response) {
                console.log('response', response);
                debugger
                if (response == "FALSE") {
                }
                if (response == "TRUE") {
                    //$("#SendInvestigationApproval").css("display", "block");
                }
                else {
                    var RD = JSON.parse(response);
                    if (RD["Result"] == "TRUE") {
                        $("#FormIdentity").val(RD["ID"]);
                        $("#Investigation_Id").val(RD["ID"]);

                        //$("#SendInvestigationApproval").css("display", "block");
                    }
                }

                if ($("#Investigation_Status").val() == "DRAFT") {
                    $("#SendInvestigationApproval").css('display', 'block');
                }
                else {
                    $("#SendInvestigationApproval").css('display', 'none');
                }

            }, function errorCallback(response) {
                alert("Error : " + response);
            });


        }
        catch (e) {
            alert("Error : SaveDataToServer : " + e);
        }


    }




    $("#MSD_Supply_Qty").change(function () {
        var MSD_Supply_Qty = $("#MSD_Supply_Qty").val();

        $("#MSD_Breakage_Qty").val("");
        $("#MSD_Net_Loss_Qty").val("");


        if (MSD_Supply_Qty == "" || isNaN(MSD_Supply_Qty)) {
            $("#MSD_Supply_Qty").val("");
        }
        else {
            MSD_Supply_Qty = Math.round(MSD_Supply_Qty * 1000) / 1000;
            $("#MSD_Supply_Qty").val(MSD_Supply_Qty);
        }
    });


    $("#MSD_Breakage_Qty").change(function () {
        var MSD_Supply_Qty = $("#MSD_Supply_Qty").val();
        var MSD_Breakage_Qty = $("#MSD_Breakage_Qty").val();

        $("#MSD_Net_Loss_Qty").val("");

        if (MSD_Breakage_Qty == "" || isNaN(MSD_Breakage_Qty)) {
            $("#MSD_Breakage_Qty").val("");
        }
        else {
            MSD_Breakage_Qty = Math.round(MSD_Breakage_Qty * 1000) / 1000;
            $("#MSD_Breakage_Qty").val(MSD_Breakage_Qty);
        }

        if (MSD_Breakage_Qty > MSD_Supply_Qty) {
            alert("Breakage Quantity cannot be more than Supplied Quantity");
            $("#MSD_Breakage_Qty").val("");
        }
    });


    $("#MSD_Net_Loss_Qty").change(function () {
        var MSD_Supply_Qty = $("#MSD_Supply_Qty").val();
        var MSD_Breakage_Qty = $("#MSD_Breakage_Qty").val();
        var MSD_Net_Loss_Qty = $("#MSD_Net_Loss_Qty").val();

        if (MSD_Net_Loss_Qty == "" || isNaN(MSD_Net_Loss_Qty)) {
            $("#MSD_Net_Loss_Qty").val("");
        }
        else {
            MSD_Net_Loss_Qty = Math.round(MSD_Net_Loss_Qty * 1000) / 1000;
            $("#MSD_Net_Loss_Qty").val(MSD_Net_Loss_Qty);
        }

        if (MSD_Net_Loss_Qty > MSD_Breakage_Qty) {
            alert("Net Loss Quantity cannot be more than Breakage Quantity");
            $("#MSD_Net_Loss_Qty").val("");
        }
    });





    function SheetingLabels(PC) {
        if (PC == "14") {
            $(".ForACSheets").css('display', 'none');
            $(".ForCCSheets").css('display', 'block');
        }
        else if (PC == "11") {
            $(".ForACSheets").css('display', 'block');
            $(".ForCCSheets").css('display', 'none');
        }
    }



    function OpenSupDetModelsBU3() {
        try {
            $("#BasicAmountdiv").hide();
            $("#Defectprctdiv").hide();
            var CNO = $("#Complaint_No").val();
            var BusinessUnit = $("#Product_Type_CODE").val();
            if (CNO == "") {
                alert("Select Complaint Number");
                return;
            }
            if (BusinessUnit == "SBU8") {
                $("#Defectprctdiv").show();
            }
            $("#SD_IDBU3").val("");
            $("#Product_Code_BU3").val("");
            //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
            $("#Plant_Name_BU3").val("");
            $("#Product_Name_BU3").val("");
            $("#InvoiceNoBU3").val("");
            $("#InvoiceDateBU3").val("");
            $("#BatchNoBU3").val("");
            $("#SuppliedQtyNosBU3").val("");
            $("#DefectiveQtyNosBU3").val("");
            $("#ActDefectiveQtyNosBU3").val("");
            $("#DefectTypeNameBU3").val("");
            $("#DefectprctBU8").val("");
            $("#TransporterBU3").val("");
            $("#RemarksBU3").val("");
            $("#DefectprctBU8").val("");
            $("#SD_DeleteBU3").hide();
            $("#SD_SaveBU3").text("Save");

            $("#SupplyDetailModalSBU3").modal('show');
        }
        catch (e) {
            alert("Error : OpenSupDetModelsBU3 :" + e);
        }
    }


    function SaveSDDataBU3() {
        try {
            debugger
            var BusinessUnit = $("#Product_Type_CODE").val();
            var SD_IDBU3 = $("#SD_IDBU3").val();
            var Product_Code_BU3 = $("#Product_Code_BU3").val();
            var Product_Name_BU3 = $("#Product_Name_BU3").val();
            //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
            var Plant_Name_BU3 = $("#Plant_Name_BU3").val();
            var InvoiceNoBU3 = $("#InvoiceNoBU3").val();
            var InvoiceDateBU3 = $("#InvoiceDateBU3").val();
            var BatchNoBU3 = $("#BatchNoBU3").val();
            var SuppliedQtyNosBU3 = $("#SuppliedQtyNosBU3").val();
            var DefectiveQtyNosBU3 = $("#DefectiveQtyNosBU3").val();
            var ActDefectiveQtyNosBU3 = $("#ActDefectiveQtyNosBU3").val();
            var DefectTypeNameBU3 = $("#DefectTypeNameBU3").val();
            var DefectprctBU8 = $("#DefectprctBU8").val();
            var DefectTypeCodeBU3 = $("#DefectTypeCodeBU3").val();
            var TransporterBU3 = $("#TransporterBU3").val();
            var RemarksBU3 = $("#RemarksBU3").val();

            var Flag = 0;

            if (Product_Code_BU3 == "") {
                Flag = Flag + 1;
                $("#Product_Code_BU3").css("border-color", "red");
            }
            else {
                $("#Product_Code_BU3").css("border-color", "#d2d6de");
            }
            //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
            //if (Plant_Name_BU3 == "") {Plant_Name_BU3
            //  Flag = Flag + 1;
            // $("#Plant_Name_BU3").css("border-color", "red");
            // }
            //else {
            //  $("#Plant_Name_BU3").css("border-color", "#d2d6de");
            //}

            if (InvoiceNoBU3 == "") {
                Flag = Flag + 1;
                $("#InvoiceNoBU3").css("border-color", "red");
            }
            else {
                $("#InvoiceNoBU3").css("border-color", "#d2d6de");
            }

            if (InvoiceDateBU3 == "") {
                Flag = Flag + 1;
                $("#InvoiceDateBU3").css("border-color", "red");
            }
            else {
                $("#InvoiceDateBU3").css("border-color", "#d2d6de");
            }

            if (SuppliedQtyNosBU3 == "") {
                Flag = Flag + 1;
                $("#SuppliedQtyNosBU3").css("border-color", "red");
            }
            else {
                $("#SuppliedQtyNosBU3").css("border-color", "#d2d6de");
            }

            if (DefectiveQtyNosBU3 == "") {
                Flag = Flag + 1;
                $("#DefectiveQtyNosBU3").css("border-color", "red");
            }
            else {
                $("#DefectiveQtyNosBU3").css("border-color", "#d2d6de");
            }

            if (ActDefectiveQtyNosBU3 == "") {
                Flag = Flag + 1;
                $("#ActDefectiveQtyNosBU3").css("border-color", "red");
            }
            else {
                $("#ActDefectiveQtyNosBU3").css("border-color", "#d2d6de");
            }

            if (DefectTypeNameBU3 == "") {
                Flag = Flag + 1;
                $("#DefectTypeNameBU3").css("border-color", "red");
            }
            else {
                $("#DefectTypeNameBU3").css("border-color", "#d2d6de");
            }

            if (Flag > 0) {
                return;
            }
            else {
                if (InvoiceNoBU3 == "") {
                }
                else if (InvoiceNoBU3.length == 10) {
                }
                else {
                    alert("Invalid Invoice Number");
                    return
                }


                if (isNaN(SuppliedQtyNosBU3) || isNaN(DefectiveQtyNosBU3) || isNaN(ActDefectiveQtyNosBU3)) {
                    alert("Enter valid Numbers in Supplied, Defect and Actual Defect quantities");
                    return;
                }

                SuppliedQtyNosBU3 = parseInt(SuppliedQtyNosBU3);
                DefectiveQtyNosBU3 = parseInt(DefectiveQtyNosBU3);
                ActDefectiveQtyNosBU3 = parseInt(ActDefectiveQtyNosBU3);

                if (parseInt(SuppliedQtyNosBU3) < parseInt(DefectiveQtyNosBU3)) {
                    alert("Defect quantity cannot be less than the Supplied quantity");
                    return;
                }
                if (parseInt(SuppliedQtyNosBU3) < parseInt(ActDefectiveQtyNosBU3)) {
                    alert("Actual Defect quantity cannot be less than the Supplied quantity");
                    return;
                }


                if (SD_IDBU3 == "") {

                    var TRCode = "";

                    TRCode = TRCode + "<td>" + Product_Code_BU3 + "</td>";
                    TRCode = TRCode + "<td>" + Product_Name_BU3 + "</td>";
                    //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
                    TRCode = TRCode + "<td>" + Plant_Name_BU3 + "</td>";
                    TRCode = TRCode + "<td>" + InvoiceNoBU3 + "</td>";
                    TRCode = TRCode + "<td>" + InvoiceDateBU3 + "</td>";

                    TRCode = TRCode + "<td>" + BatchNoBU3 + "</td>";
                    TRCode = TRCode + "<td>" + SuppliedQtyNosBU3 + "</td>";
                    TRCode = TRCode + "<td>" + DefectiveQtyNosBU3 + "</td>";
                    TRCode = TRCode + "<td>" + ActDefectiveQtyNosBU3 + "</td>";

                    TRCode = TRCode + "<td>" + TransporterBU3 + "</td>";

                    TRCode = TRCode + "<td>" + DefectTypeNameBU3 + "</td>";
                    if (BusinessUnit == "SBU8") {
                        TRCode = TRCode + "<td>" + DefectprctBU8 + "</td>";
                    }
                    TRCode = TRCode + "<td>" + RemarksBU3 + "</td>";
                    TRCode = TRCode + "<td></td>";
                    TRCode = TRCode + "<td style='display:none;' >" + DefectTypeCodeBU3 + "</td>";


                    SD_IDBU3 = $("#Supply_Details_TableSBU3 tbody tr").length + 1;

                    TRCode = "<tr class='MousePointer' id='SDBU3_" + SD_IDBU3 + "' onclick='EditSDBBU3(this.id)'><td>" + SD_IDBU3 + "</td>" + TRCode + "</tr>";
                    $("#Supply_Details_TableSBU3 tbody").append(TRCode);
                }
                else if (BusinessUnit == "SBU3") {

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[0].innerHTML = SD_IDBU3;

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[1].innerHTML = Product_Code_BU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[2].innerHTML = Product_Name_BU3;
                    //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[3].innerHTML = Plant_Name_BU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[4].innerHTML = InvoiceNoBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[5].innerHTML = InvoiceDateBU3;

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[6].innerHTML = BatchNoBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[7].innerHTML = SuppliedQtyNosBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[8].innerHTML = DefectiveQtyNosBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[9].innerHTML = ActDefectiveQtyNosBU3;

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[10].innerHTML = TransporterBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[11].innerHTML = DefectTypeNameBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[12].innerHTML = RemarksBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[13].innerHTML = DefectTypeCodeBU3;

                }
                else if (BusinessUnit == "SBU8") {

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[0].innerHTML = SD_IDBU3;

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[1].innerHTML = Product_Code_BU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[2].innerHTML = Product_Name_BU3;
                    //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[3].innerHTML = Plant_Name_BU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[4].innerHTML = InvoiceNoBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[5].innerHTML = InvoiceDateBU3;

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[6].innerHTML = BatchNoBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[7].innerHTML = SuppliedQtyNosBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[8].innerHTML = DefectiveQtyNosBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[9].innerHTML = ActDefectiveQtyNosBU3;

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[10].innerHTML = TransporterBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[11].innerHTML = DefectTypeNameBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[12].innerHTML = DefectprctBU8;

                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[13].innerHTML = RemarksBU3;
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[14].innerHTML = BasicAmount
                    $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + " td")[15].innerHTML = DefectTypeCodeBU3;

                }



                $("#SupplyDetailModalSBU3").modal("hide");
                //svprasadk 05-10-2020 SBU 1 requirement to get data from supply details to material supply details start
                //sdtomsd();
                //svprasadk 05-10-2020 SBU 1 requirement to get data from supply details to material supply details end
                SaveDataToServerInvestigation('Supply_DetailsBU3');
                AddThingsToProductDetails();
            }
        }
        catch (e) {
            alert("Error : SaveSDDataB :" + e);
        }
    }


    function EditSDBBU3(RowId) {
        try {
            debugger
            var BusinessUnit = $("#Product_Type_CODE").val();
            if (BusinessUnit == "SBU8") {
                $("#THDefectprct").prop("disabled", false);
                $("#THBasicAmount").prop("disabled", false);
                $("#Defectprctdiv").show();
                $("#BasicAmountdiv").hide();
            }
            var IS = $("#Investigation_Status").val();
            var UserTypeCode = $("#SessionUserTypeID").val();
            console.log("BusinessUnit Editsd :" + BusinessUnit)
            if (IS == "Approved" || IS == "Rejected") {
                if ((IS == "Approved") && (UserTypeCode == "CSM" || UserTypeCode == "QH" || UserTypeCode == "CSM_BU2" || UserTypeCode == "CSM_BU3")) {
                }
                else {
                    return;
                }
            }
            else if (BusinessUnit == "SBU3") {

                $("#SD_IDBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[0].innerHTML);

                $("#Product_Code_BU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[1].innerHTML);
                $("#Product_Name_BU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[2].innerHTML);
                //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
                $("#Plant_Name_BU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[3].innerText);
                $("#InvoiceNoBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[4].innerHTML);
                $("#InvoiceDateBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[5].innerHTML);

                $("#BatchNoBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[6].innerHTML);
                $("#SuppliedQtyNosBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[7].innerHTML);
                $("#DefectiveQtyNosBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[8].innerHTML);
                $("#ActDefectiveQtyNosBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[9].innerHTML);

                $("#TransporterBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[10].innerHTML);
                $("#DefectTypeNameBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[11].innerHTML);
                $("#RemarksBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[12].innerHTML);
                $("#DefectTypeCodeBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[13].innerHTML);
            }
            else if (BusinessUnit == "SBU8") {
                $("#SD_IDBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[0].innerHTML);

                $("#Product_Code_BU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[1].innerHTML);
                $("#Product_Name_BU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[2].innerHTML);
                //VIKAS G, 8/3/2022 JOSEPH REQUIREMENT, Material supply details and invoice details - - what is the purpose of entering data two doff places. Cumbersome process .
                $("#Plant_Name_BU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[3].innerText);
                $("#InvoiceNoBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[4].innerHTML);
                $("#InvoiceDateBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[5].innerHTML);

                $("#BatchNoBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[6].innerHTML);
                $("#SuppliedQtyNosBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[7].innerHTML);
                $("#DefectiveQtyNosBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[8].innerHTML);
                $("#ActDefectiveQtyNosBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[9].innerHTML);

                $("#TransporterBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[10].innerHTML);
                $("#DefectTypeNameBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[11].innerHTML);
                $("#DefectprctBU8").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[12].innerHTML);
                $("#RemarksBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[13].innerHTML);
                $("#BasicAmount").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[14].innerHTML);
                $("#DefectTypeCodeBU3").val($("#Supply_Details_TableSBU3 tbody #" + RowId + " td")[15].innerHTML);
            }
            $("#SupplyDetailModalSBU3").modal('show');
            $("#SD_DeleteBU3").show();
            $("#SD_SaveBU3").text("Update");

        }
        catch (e) {
            alert("Error : EditSDBBU3 : " + e);
        }

    }


    function DeleteSDBU3() {
        try {
            var SD_IDBU3 = $("#SD_IDBU3").val();

            $("#Supply_Details_TableSBU3 tbody #SDBU3_" + SD_IDBU3 + "").remove();

            var i = 1;

            $("#Supply_Details_TableSBU3 tbody tr").each(function () {
                $(this).attr("id", "SDBU3_" + i);
                $("#Supply_Details_TableSBU3 tbody #SDBU3_" + i + " td")[0].innerHTML = i;
                i = i + 1;
            });

            $("#SupplyDetailModalSBU3").modal("hide");

            SaveDataToServerInvestigation('Supply_DetailsBU3');
            AddThingsToProductDetails();
        }
        catch (e) {
            alert("Error : DeleteSDBU3 : " + e);
        }

    }


    function DefcetPercentageChangeBU8(Req) {
        try {
            debugger
            var BU = $("#Product_Type_CODE").val();
            var Productcode = $("#Product_Category_CODE").val();

            var Supply = $("#SD_SuppliedQtyNos_BU8").val();
            var Breakage = $("#SD_BreakageQtyNos_BU8").val();
            var Defectprct = $("#SD_DefectPercnt_BU8").val();

            Defectprct = ((Breakage / Supply) * 100);
            var DefectPercentage = Math.round(Defectprct);
            var DefectPercentagenew = roundNumber(Defectprct, 3);

            $("#SD_DefectPercnt_BU8").val(DefectPercentagenew);

        }
        catch (e) {
            alert("Error SuppliedBreakageQtyNosChange : " + e);
        }
    }
    function roundNumber(num, decimalPlaces) {
        const factor = 10 ** decimalPlaces;
        return Math.round(num * factor) / factor;
    }

    function FileUploaded() {
        var filename = $("#InvestigationFile").val();
        var file = document.getElementById('InvestigationFile').files[0];
        var extension = filename.replace(/^.*\./, '');
        //alert(extension + " -- " + file.name)
        //svprasadk 22-06-2020 SBU 1 requirement to validate file extension in investigation stage start
        if (/\.(jpe?g|png|pdf|zip)$/i.test(file.name) === false) {
            alert("Please upload jpeg or png or pdf or zip files only!");
            return;
        }
        //svprasadk 22-06-2020 SBU 1 requirement to validate file extension in investigation stage end
        else if (file.size > 5242880) {
            alert("File size must not exceed 5MB.");
            $("#InvestigationFile").val("");
        } else {
            alert("Please Upload Attachment");
        }
    }
    var AttachedFiles = new Array();
    function UploadFiles() {
        var filename = $("#InvestigationFile").val();
        var file = document.getElementById('InvestigationFile').files[0];
        if (filename == "") {
            return;
        }

        //svprasadk 22-06-2020 SBU 1 requirement to validate file extension in investigation stage start
        if (/\.(jpe?g|png|pdf|zip)$/i.test(file.name) === false) {
            alert("Please upload jpeg or png or pdf or zip files only!");
            return;
        }
        //svprasadk 22-06-2020 SBU 1 requirement to validate file extension in investigation stage end
        if (AttachedFiles != null && AttachedFiles.length > 0) {
            for (var i = 0; i < AttachedFiles.length; i++) {
                if (AttachedFiles[i].filename.includes(filename)) {
                    alert("File already selected");
                    $("#InvestigationFile").val("");
                    return;
                }
            }
        }
        if (AttachedFiles != null && AttachedFiles.length >= 3) {
            alert("Maximum 3 files can be selected");
            $("#InvestigationFile").val("");
            return;
        }
        if (filename.includes(",")) {
            alert("File name must not contain comma(,)");
            $("#InvestigationFile").val("");
            return;
        }
        AttachedFiles.push({
            file: file,
            filename: filename
        });
        //console.log('AttachedFiles', AttachedFiles.length);
        $("#InvestigationFile").val("");
        var splitFilename = filename.split("\\");
        $('#SelectedFiles').append("" + splitFilename[2].trim() + "<br/>");
        //if ($("#Product_Type").val() == "SBU1") {
        //SaveInvestigationDataWithFiles();
        $("#ClickUploadFile").val(1);
        SaveInvestigationDataWithFiles();
        //alert("Please Save Complaint");
        //}
    }
    function ClearFiles() {
        AttachedFiles = new Array();
        $('#SelectedFiles').text('');
    }

    var fileArray = [];
    var fileObject = { id: "", value: "" };

    function SaveInvestigationDataWithFiles() {
        try {
            var MyTest = $("#MyTest").val();
            if (MyTest == "") {
                if (confirm("Do you want to Save data?")) {
                    $("#MyTest").val("Save");
                }
                else {
                    return;
                }
            }

            if (($("#Product_Type").val() == "SBU1" && document.getElementById("is_rejectable").checked == false) || $("#Product_Type").val() == "SBU2" || $("#Product_Type").val() == "SBU3") {
                //console.log('InvestigationFilesUploaded', $("ul#InvestigationFilesUploaded li").length)
                if ($("#SelectedFiles").text() != "" || $("ul#InvestigationFilesUploaded li").length > 0) {
                    $("#ClickUploadFile").val(1);
                    $("#ClickSaveComplaint").val(1);
                }
                //$("#Product_Type").val() == "SBU1" &&
                var file = document.getElementById('InvestigationFile').files.length;
                //console.log('file', file);
                if (file == 0 && ($("#InvestigationFilesUploaded").children().length <= 0 || $("#SelectedFiles").text() == "") && $("#ClickUploadFile").val() == 0) {
                    alert("Please Select Attachment and Press Upload and then click on Save button");
                    return;
                }
                if (file >= 0 && $("#ClickUploadFile").val() == 0) {
                    alert("Please Upload Attachment and then click on Save button");
                    return;
                }
            }


            var formData = new FormData();
            formData.append('ComplaintTrackingNo', $("#Complaint_Tracking_No").val());
            for (var i = 0; i < AttachedFiles.length; i++) {
                formData.append('InvestigationFile_' + i, AttachedFiles[i].file);
            }
            if (AttachedFiles.length > 0) {
                ShowLoader();
                $.ajax({
                    url: '../../ComplaintRegistration/UploadInvestigationFile',
                    type: 'POST',
                    data: formData,
                    async: true,
                    success: function (Resp) {
                        if (Resp != "") {
                            AttachedFiles = new Array();
                            $('#SelectedFiles').text('');
                            $("#InvestigationFile").val("");
                            $('#SelectedFiles').text(Resp);
                            HideFileUpload();
                            HideLoader();
                            //if ($("#Product_Type").val() == "SBU1") {
                            $("#ClickSaveComplaint").val(1);
                            //}
                            $('#hiddenInvDataSave').click();
                        }
                        else {
                            HideLoader();
                            $("#InvestigationFile").val("");
                        }
                    },
                    cache: false,
                    contentType: false,
                    processData: false
                });
            }
            else {
                $('#hiddenInvDataSave').click();
            }
        }
        catch (e) {
            alert("Error : SaveDataToServer : " + e);
        }
    }

    function enabledisableFileUpload() {
        if ($("#FormIdentity").val() != "") {
            if (($("#Investigation_Status").val() == "DRAFT") && ($("#SelectedFiles").text() == ""))
                ShowFileUpload();
            else
                HideFileUpload();
        } else {
            ShowFileUpload();
        }
    }
    function HideFileUpload() {
        //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file start
        var Investigation_Status = $("#Investigation_Status").val();
        //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file end
        $("#NewInvestigationFileUploadDiv").hide();
        $("#LoadInvestigationFileUploadDiv").show();
        $("#InvestigationFilesUploaded").empty();
        if ($("#SelectedFiles").text() != "") {
            $("#lblAttachments").show();
            var Paths = $("#SelectedFiles").text().split(',');
            var mydiv = document.getElementById("LoadInvestigationFileUploadDiv");
            for (var i = 0; i < Paths.length; i++) {
                var myList = document.getElementById("InvestigationFilesUploaded");
                var liTag = document.createElement('li');
                var aTag = document.createElement('a');
                //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file start
                var button = '';
                //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file end
                //var button = document.createElement('<input type="button" value="X" onclick="deleteFile(i)" style="margin-left:5px;">');
                if ($("#CREATED_IN").val() == "mobile") {
                    //aTag.setAttribute('href', 'http://219.65.69.198:3001/DIMSFiles/InvestigationFiles/' + Paths[i]);
                    aTag.setAttribute('href', 'http://219.65.69.198:3001/InvestigationFiles/' + Paths[i]);
                } else {
                    aTag.setAttribute('href', window.location.origin + '/DIMSFiles/InvestigationFiles/' + Paths[i]);
                }
                //aTag.setAttribute('href', window.location.origin + '/DIMSFiles/InvestigationFiles/' + Paths[i]);
                aTag.setAttribute('target', "_blank");
                aTag.innerHTML = Paths[i].substring(0, 30);
                liTag.appendChild(aTag);
                //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file start
                //console.log('Investigation_Status', Investigation_Status)
                if (Investigation_Status == "DRAFT") {
                    button = document.createElement('input');
                    button.setAttribute('type', 'button');
                    button.setAttribute('value', 'X');
                    button.setAttribute('onclick', 'deleteFile("' + Paths[i] + '")');
                    //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file start
                    liTag.appendChild(button);
                    //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file end
                }
                //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file end
                myList.appendChild(liTag);
                mydiv.appendChild(myList);
            }
        }
        else {
            $("#lblAttachments").hide();
        }
    }
    function ShowFileUpload() {
        $("#LoadInvestigationFileUploadDiv").hide();
        $("#NewInvestigationFileUploadDiv").show();
    }

    function showComplaintFiles() {
        //debugger
        $("#LoadInvestigationFileUploadDiv").show();
        if ($("#SelectedComplaintFiles").text() != "") {
            $("#lblAttachments").show();
            var Paths = $("#SelectedComplaintFiles").text().split(',');
            var mydiv = document.getElementById("LoadInvestigationFileUploadDiv");
            //("#ComplaintFilesUploaded").empty();
            for (var i = 0; i < Paths.length; i++) {
                var myList = document.getElementById("ComplaintFilesUploaded");
                var liTag = document.createElement('li');
                var aTag = document.createElement('a');
                if ($("#CREATED_IN").val() == "mobile") {
                    //aTag.setAttribute('href', 'http://219.65.69.198:3001/DIMSFiles/ComplaintFiles/' + Paths[i]);
                    aTag.setAttribute('href', 'http://219.65.69.198:3001/DIMSFilesComplaintFiles/' + Paths[i]);
                } else {
                    aTag.setAttribute('href', window.location.origin + '/DIMSFiles/ComplaintFiles/' + Paths[i]);
                }
                //aTag.setAttribute('href', window.location.origin + '/DIMSFiles/ComplaintFiles/' + Paths[i]);
                aTag.setAttribute('target', "_blank");
                aTag.innerHTML = Paths[i].substring(0, 30);
                liTag.appendChild(aTag);
                myList.appendChild(liTag);
                mydiv.appendChild(myList);
            }
        }
    }

    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage start
    // function to convert number to words
    function toWords1(s) {
        var th = ['', 'THOUSAND', 'MILLION', 'BILLION', 'TRILLION'];
        var dg = ['ZERO', 'ONE', 'TWO', 'THREE', 'FOUR', 'FIVE', 'SIX', 'SEVEN', 'EIGHT', 'NINE'];
        var tn = ['TEN', 'ELEVEN', 'TWELVE', 'THIRTEEN', 'FOURTEEN', 'FIFTEEN', 'SIXTEEN', 'SEVENTEEN', 'EIGHTEEN', 'NINETEEN'];
        var tw = ['TWENTY', 'THIRTY', 'FORTY', 'FIFTY', 'SIXTY', 'SEVENTY', 'EIGHTY', 'NINTY'];
        s = s.toString();
        s = s.replace(/[\, ]/g, '');
        // alert(s);
        if (s != parseFloat(s)) return 'NOT A NUMBER';
        var x = s.indexOf('.');
        // alert(x)
        if (x == -1) x = s.length;
        if (x > 15) return 'TOO BIG';
        var n = s.split('');
        //alert(n)
        var str = '';
        var sk = 0;
        for (var i = 0; i < x; i++) {
            if ((x - i) % 3 == 2) {
                if (n[i] == '1') {
                    str += tn[Number(n[i + 1])] + ' ';
                    i++;
                    sk = 1;
                } else if (n[i] != 0) {
                    str += tw[n[i] - 2] + ' ';
                    sk = 1;
                }
            } else if (n[i] != 0) {
                str += dg[n[i]] + ' ';
                if ((x - i) % 3 == 0) str += 'HUNDRED ';
                sk = 1;
            }
            if ((x - i) % 3 == 1) {
                if (sk) str += th[(x - i - 1) / 3] + ' ';
                sk = 0;
            }
        }
        if (x != s.length) {
            var y = s.length;
            str += 'DECIMAL ';
            for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' ';
        }
        return str.replace(/\s+/g, ' ');
    }
    //svprasadk 01-04-2020 SBU 1 requirement to add Compensation Recommendation in investigation stage end
    //svprasadk 05-10-2020 SBU 1 requirement to get data from supply details to material supply details start
    function sdtomsd() {
        try {
            debugger
            var Total_Supply_Qty_Tons = $("#Total_Supply_Qty_Tons").val();
            var Total_Breakage_Qty_Tons = $("#Total_Breakage_Qty_Tons").val();
            var Net_Loss_Tons = $("#Net_Loss_Tons").val();

            var MSD_id = $("#MSD_id").val();
            var Material_Belongs_To = $("#Material_Belongs_To").val();
            var Product_Supplied_From = $("#Product_Supplied_From").val();
            var MSD_Name = $("#MSD_Name").val();
            var MSD_UOM = $("#MSD_UOM").val();
            var MSD_Supply_Qty = ($("#MSD_Supply_Qty").val() != "") ? $("#MSD_Supply_Qty").val() : Total_Supply_Qty_Tons;
            var MSD_Breakage_Qty = ($("#MSD_Breakage_Qty").val() != "") ? $("#MSD_Breakage_Qty").val() : Total_Breakage_Qty_Tons;
            var MSD_Net_Loss_Qty = ($("#MSD_Net_Loss_Qty").val() != "") ? $("#MSD_Net_Loss_Qty").val() : Net_Loss_Tons;
            var Material_Belongs_TO_ID = $("#Material_Belongs_TO_ID").val();
            var Material_Belongs_TO_CODE = $("#Material_Belongs_TO_CODE").val();
            var Product_Supplied_From_ID = $("#Product_Supplied_From_ID").val();
            var Product_Supplied_From_CODE = $("#Product_Supplied_From_CODE").val();
            var MSD_Name_ID = $("#MSD_Name_ID").val();
            var MSD_Name_CODE = $("#MSD_Name_CODE").val();

            var New_MSD_id = $("#Material_Supply_Detail_Table tbody tr").length;
            var TRCode = "";

            if (New_MSD_id > 0) {
                //$("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[0].innerHTML = New_MSD_id;
                $("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[1].innerHTML = "";
                $("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[2].innerHTML = "";
                $("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[3].innerHTML = "";
                $("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[4].innerHTML = "";
                $("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[5].innerHTML = MSD_Supply_Qty;
                $("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[6].innerHTML = MSD_Breakage_Qty;
                $("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[7].innerHTML = MSD_Net_Loss_Qty;

                //$("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[8].innerHTML = Material_Belongs_TO_ID;
                //$("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[9].innerHTML = Material_Belongs_TO_CODE;
                //$("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[10].innerHTML = Product_Supplied_From_ID;
                //$("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[11].innerHTML = Product_Supplied_From_CODE;
                //$("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[12].innerHTML = MSD_Name_ID;
                //$("#Material_Supply_Detail_Table tbody #MSD_" + New_MSD_id + " td")[13].innerHTML = MSD_Name_CODE;
            } else {
                TRCode = TRCode + "<td>" + Material_Belongs_To + "</td>";
                TRCode = TRCode + "<td>" + Product_Supplied_From + "</td>";
                TRCode = TRCode + "<td>" + MSD_Name + "</td>";
                TRCode = TRCode + "<td>" + MSD_UOM + "</td>";
                TRCode = TRCode + "<td>" + MSD_Supply_Qty + "</td>";
                TRCode = TRCode + "<td>" + MSD_Breakage_Qty + "</td>";
                TRCode = TRCode + "<td>" + MSD_Net_Loss_Qty + "</td>";

                TRCode = TRCode + "<td style='display:none;'>" + Material_Belongs_TO_ID + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + Material_Belongs_TO_CODE + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + Product_Supplied_From_ID + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + Product_Supplied_From_CODE + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + MSD_Name_ID + "</td>";
                TRCode = TRCode + "<td style='display:none;'>" + MSD_Name_CODE + "</td>";

                MSD_id = $("#Material_Supply_Detail_Table tbody tr").length + 1;

                TRCode = "<tr class='MousePointer' id='MSD_" + MSD_id + "' onclick='EditMSD(this.id)'><td>" + MSD_id + "</td>" + TRCode + "</tr>";
                $("#Material_Supply_Detail_Table tbody").append(TRCode);
            }
            SaveDataToServerInvestigation('MaterialSupplyDetail');
        }
        catch (e) {
            alert("Error : sdtomsd :" + e);
        }
    }
    //svprasadk 05-10-2020 SBU 1 requirement to get data from supply details to material supply details end
    //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file start
    function deleteFile(file) {
        var formData = new FormData();
        formData.append('ComplaintTrackingNo', $("#Complaint_Tracking_No").val());
        formData.append('file', file);
        $.ajax({
            url: '../../ComplaintRegistration/UploadedInvestigationFileDelete',
            type: 'POST',
            data: formData,
            async: true,
            success: function (Resp) {
                if (Resp == "TRUE") {
                    AttachedFiles = new Array();
                    $('#SelectedFiles').text('');
                    $("#InvestigationFile").val("");
                    $("#ClickSaveComplaint").val(0);
                    var Investigation_Status = $("#Investigation_Status").val();
                    if ((Investigation_Status == "DRAFT" || Investigation_Status == "") && ($("#SelectedFiles").text() == "")) {
                        ShowFileUpload();
                        HideLoader();
                    }
                }
                else {
                    HideLoader();
                    alert('unable to delete file');
                }
            },
            cache: false,
            contentType: false,
            processData: false
        });
    }
    //svprasadk 06-10-2020 SBU 1 requirement to delete uploaded file end
    function setNo_of_36value() {
        debugger
        var No_of_36 = 0;
        var SD_Size_M = 0;
        var Net_Loss_Mtrs = $("#Net_Loss_Mtrs").val();
        var SD_Breakage_Qty_M = 0;
        var SD_Breakage_Qty_Nos = 0;

        if (Net_Loss_Mtrs == "") {
            Net_Loss_Mtrs = 0;
        }

        $("#Supply_Details_Table tbody tr").each(function () {
            RowId = ($(this).attr("id"));

            SD_Size_M = parseFloat(SD_Size_M) + parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[2].innerHTML);
            SD_Breakage_Qty_M = parseFloat(SD_Breakage_Qty_M) + parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[8].innerHTML);
            SD_Breakage_Qty_Nos = parseFloat(SD_Breakage_Qty_Nos) + parseFloat($("#Supply_Details_Table tbody #" + RowId + " td")[7].innerHTML);
            //console.log('SD_Size_M' + SD_Size_M + 'SD_Breakage_Qty_M' + SD_Breakage_Qty_M + 'SD_Breakage_Qty_Nos' + SD_Breakage_Qty_Nos + 'Net_Loss_Mtrs' + Net_Loss_Mtrs);
            if (SD_Size_M == 3.6) {
                if (Net_Loss_Mtrs < SD_Breakage_Qty_M) {
                    No_of_36 = parseInt(Net_Loss_Mtrs / 3.6);
                } else if (Net_Loss_Mtrs > SD_Breakage_Qty_M) {
                    No_of_36 = SD_Breakage_Qty_Nos;
                }
                $("#No_of_36").val(No_of_36);
                CalculateSizeRecommendation();
            } else {
                $("#No_of_36").val(No_of_36);
            }
        });
    }
</script>